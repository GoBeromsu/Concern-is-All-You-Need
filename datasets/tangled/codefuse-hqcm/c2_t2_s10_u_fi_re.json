{
  "metadata": {
    "num_cases": 10,
    "concerns_per_case": 2,
    "types": [
      "fix",
      "refactor"
    ],
    "allow_same_types": false,
    "seed": 42,
    "source_dataset": "datasets/candidates/codefuse-hqcm/dataset/test.json"
  },
  "cases": [
    {
      "tangleChange": "diff --git a/core/java/android/os/Bundle.java b/core/java/android/os/Bundle.java\nindex c5c5372..133debb 100644\n--- a/core/java/android/os/Bundle.java\n+++ b/core/java/android/os/Bundle.java\n@@ -211,8 +211,9 @@ public final class Bundle extends BaseBundle implements Cloneable, Parcelable {\n                     } else if (obj instanceof Parcelable[]) {\n                         Parcelable[] array = (Parcelable[]) obj;\n                         for (int n = array.length - 1; n >= 0; n--) {\n-                            if ((array[n].describeContents()\n-                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0) {\n+                            Parcelable p = array[n];\n+                            if (p != null && ((p.describeContents()\n+                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0)) {\n                                 fdFound = true;\n                                 break;\n                             }\n\ndiff --git a/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java b/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java\nindex fc7b5be1..50b692d5 100644\n--- a/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java\n+++ b/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java\n@@ -18,7 +18,7 @@\n  */\r\n \r\n /*\r\n- * Copyright (c) 2006, 2010, Oracle and/or its affiliates. All rights reserved.\r\n+ * Copyright (c) 2006, 2011, Oracle and/or its affiliates. All rights reserved.\r\n  */\r\n package org.opensolaris.opengrok.analysis.vb;\r\n \r\n@@ -42,9 +42,9 @@ import org.opensolaris.opengrok.history.Annotation;\n  */\r\n public class VBAnalyzer extends PlainAnalyzer {\r\n \r\n-    private VBSymbolTokenizer cref;\r\n-    private VBXref xref;\r\n-    private Reader dummy = new StringReader(\"\");\r\n+    private final VBSymbolTokenizer cref;\r\n+    private final VBXref xref;\r\n+    private final Reader dummy = new StringReader(\"\");\r\n \r\n     /** Creates a new instance of VBAnalyzer */\r\n     protected VBAnalyzer(FileAnalyzerFactory factory) {\r\n",
      "atomicChanges": [
        {
          "change": "diff --git a/core/java/android/os/Bundle.java b/core/java/android/os/Bundle.java\nindex c5c5372..133debb 100644\n--- a/core/java/android/os/Bundle.java\n+++ b/core/java/android/os/Bundle.java\n@@ -211,8 +211,9 @@ public final class Bundle extends BaseBundle implements Cloneable, Parcelable {\n                     } else if (obj instanceof Parcelable[]) {\n                         Parcelable[] array = (Parcelable[]) obj;\n                         for (int n = array.length - 1; n >= 0; n--) {\n-                            if ((array[n].describeContents()\n-                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0) {\n+                            Parcelable p = array[n];\n+                            if (p != null && ((p.describeContents()\n+                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0)) {\n                                 fdFound = true;\n                                 break;\n                             }\n",
          "label": "fix"
        },
        {
          "change": "diff --git a/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java b/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java\nindex fc7b5be1..50b692d5 100644\n--- a/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java\n+++ b/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java\n@@ -18,7 +18,7 @@\n  */\r\n \r\n /*\r\n- * Copyright (c) 2006, 2010, Oracle and/or its affiliates. All rights reserved.\r\n+ * Copyright (c) 2006, 2011, Oracle and/or its affiliates. All rights reserved.\r\n  */\r\n package org.opensolaris.opengrok.analysis.vb;\r\n \r\n@@ -42,9 +42,9 @@ import org.opensolaris.opengrok.history.Annotation;\n  */\r\n public class VBAnalyzer extends PlainAnalyzer {\r\n \r\n-    private VBSymbolTokenizer cref;\r\n-    private VBXref xref;\r\n-    private Reader dummy = new StringReader(\"\");\r\n+    private final VBSymbolTokenizer cref;\r\n+    private final VBXref xref;\r\n+    private final Reader dummy = new StringReader(\"\");\r\n \r\n     /** Creates a new instance of VBAnalyzer */\r\n     protected VBAnalyzer(FileAnalyzerFactory factory) {\r\n",
          "label": "refactor"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\nindex 402d63fff..a05c4a877 100644\n--- a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n+++ b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n@@ -37,7 +37,7 @@ public class AppCompatTextView extends TextView {\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs) {\n-        this(context, attrs, 0);\n+        this(context, attrs, android.R.attr.textViewStyle);\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs, int defStyle) {\n\ndiff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/Scope.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/Scope.java\nindex 867b820d8..cf0625e9a 100644\n--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/Scope.java\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/Scope.java\n@@ -159,7 +159,7 @@ public final class Scope implements Comparable, Serializable\n     static Scope getInstance(String aScopeName)\n     {\n         // canonicalize argument\n-        String scopeName = aScopeName.toLowerCase();\n+        final String scopeName = aScopeName.trim().toLowerCase();\n \n         final Scope retVal = (Scope) NAME_TO_SCOPE.get(scopeName);\n         if (retVal == null) {\n",
      "atomicChanges": [
        {
          "change": "diff --git a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\nindex 402d63fff..a05c4a877 100644\n--- a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n+++ b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n@@ -37,7 +37,7 @@ public class AppCompatTextView extends TextView {\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs) {\n-        this(context, attrs, 0);\n+        this(context, attrs, android.R.attr.textViewStyle);\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs, int defStyle) {\n",
          "label": "fix"
        },
        {
          "change": "diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/Scope.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/Scope.java\nindex 867b820d8..cf0625e9a 100644\n--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/Scope.java\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/Scope.java\n@@ -159,7 +159,7 @@ public final class Scope implements Comparable, Serializable\n     static Scope getInstance(String aScopeName)\n     {\n         // canonicalize argument\n-        String scopeName = aScopeName.toLowerCase();\n+        final String scopeName = aScopeName.trim().toLowerCase();\n \n         final Scope retVal = (Scope) NAME_TO_SCOPE.get(scopeName);\n         if (retVal == null) {\n",
          "label": "refactor"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/src/com/android/email/mail/store/WebDavStore.java b/src/com/android/email/mail/store/WebDavStore.java\nindex 9dd1955..a6301e3 100644\n--- a/src/com/android/email/mail/store/WebDavStore.java\n+++ b/src/com/android/email/mail/store/WebDavStore.java\n@@ -509,7 +509,7 @@ public class WebDavStore extends Store {\n             ArrayList<BasicNameValuePair> pairs = new ArrayList();\n             pairs.add(new BasicNameValuePair(\"username\", username));\n             pairs.add(new BasicNameValuePair(\"password\", password));\n-            pairs.add(new BasicNameValuePair(\"destination\", finalUrl + \"/exchange/\" +username+\"/\"));\n+            pairs.add(new BasicNameValuePair(\"destination\", url));\n             pairs.add(new BasicNameValuePair(\"flags\", \"0\"));\n             pairs.add(new BasicNameValuePair(\"SubmitCreds\", \"Log+On\"));\n             pairs.add(new BasicNameValuePair(\"forcedownlevel\", \"0\"));\n\ndiff --git a/logging/src/main/java/org/jboss/as/logging/LoggingConfigurationProcessor.java b/logging/src/main/java/org/jboss/as/logging/LoggingConfigurationProcessor.java\nindex 2626a3d463..51f7835630 100644\n--- a/logging/src/main/java/org/jboss/as/logging/LoggingConfigurationProcessor.java\n+++ b/logging/src/main/java/org/jboss/as/logging/LoggingConfigurationProcessor.java\n@@ -153,9 +153,7 @@ public class LoggingConfigurationProcessor implements DeploymentUnitProcessor {\n      * Preference is for {@literal logging.properties} or {@literal jboss-logging.properties}.\n      *\n      * @param resourceRoot the resource to check.\n-     *\n      * @return the configuration file if found, otherwise {@code null}.\n-     *\n      * @throws DeploymentUnitProcessingException\n      *          if an error occurs.\n      */\n@@ -203,7 +201,7 @@ public class LoggingConfigurationProcessor implements DeploymentUnitProcessor {\n \n         @Override\n         public boolean accepts(final VirtualFile file) {\n-            return file.isDirectory() || configFiles.contains(file.getName());\n+            return configFiles.contains(file.getName());\n         }\n     }\n }\n",
      "atomicChanges": [
        {
          "change": "diff --git a/src/com/android/email/mail/store/WebDavStore.java b/src/com/android/email/mail/store/WebDavStore.java\nindex 9dd1955..a6301e3 100644\n--- a/src/com/android/email/mail/store/WebDavStore.java\n+++ b/src/com/android/email/mail/store/WebDavStore.java\n@@ -509,7 +509,7 @@ public class WebDavStore extends Store {\n             ArrayList<BasicNameValuePair> pairs = new ArrayList();\n             pairs.add(new BasicNameValuePair(\"username\", username));\n             pairs.add(new BasicNameValuePair(\"password\", password));\n-            pairs.add(new BasicNameValuePair(\"destination\", finalUrl + \"/exchange/\" +username+\"/\"));\n+            pairs.add(new BasicNameValuePair(\"destination\", url));\n             pairs.add(new BasicNameValuePair(\"flags\", \"0\"));\n             pairs.add(new BasicNameValuePair(\"SubmitCreds\", \"Log+On\"));\n             pairs.add(new BasicNameValuePair(\"forcedownlevel\", \"0\"));\n",
          "label": "fix"
        },
        {
          "change": "diff --git a/logging/src/main/java/org/jboss/as/logging/LoggingConfigurationProcessor.java b/logging/src/main/java/org/jboss/as/logging/LoggingConfigurationProcessor.java\nindex 2626a3d463..51f7835630 100644\n--- a/logging/src/main/java/org/jboss/as/logging/LoggingConfigurationProcessor.java\n+++ b/logging/src/main/java/org/jboss/as/logging/LoggingConfigurationProcessor.java\n@@ -153,9 +153,7 @@ public class LoggingConfigurationProcessor implements DeploymentUnitProcessor {\n      * Preference is for {@literal logging.properties} or {@literal jboss-logging.properties}.\n      *\n      * @param resourceRoot the resource to check.\n-     *\n      * @return the configuration file if found, otherwise {@code null}.\n-     *\n      * @throws DeploymentUnitProcessingException\n      *          if an error occurs.\n      */\n@@ -203,7 +201,7 @@ public class LoggingConfigurationProcessor implements DeploymentUnitProcessor {\n \n         @Override\n         public boolean accepts(final VirtualFile file) {\n-            return file.isDirectory() || configFiles.contains(file.getName());\n+            return configFiles.contains(file.getName());\n         }\n     }\n }\n",
          "label": "refactor"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/core/java/android/widget/CheckedTextView.java b/core/java/android/widget/CheckedTextView.java\nindex de8b80d..3f080d6 100644\n--- a/core/java/android/widget/CheckedTextView.java\n+++ b/core/java/android/widget/CheckedTextView.java\n@@ -242,7 +242,7 @@ public class CheckedTextView extends TextView implements Checkable {\n                 right = width - mBasePadding;\n                 left = right - mCheckMarkWidth;\n             }\n-            checkMarkDrawable.setBounds( left, top, right, bottom);\n+            checkMarkDrawable.setBounds(mScrollX + left, top, mScrollX + right, bottom);\n             checkMarkDrawable.draw(canvas);\n         }\n     }\n\ndiff --git a/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java b/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java\nindex a90a796..e4c934c 100644\n--- a/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java\n@@ -83,7 +83,7 @@ public abstract class OMVRBTreePersistent<K, V> extends OMVRBTree<K, V> implemen\n \r\n \tpublic OMVRBTreePersistent(String iClusterName, final OStreamSerializer iKeySerializer, final OStreamSerializer iValueSerializer) {\r\n \t\t// MINIMIZE I/O USING A LARGER PAGE THAN THE DEFAULT USED IN MEMORY\r\n-\t\tsuper(1024, 0.7f);\r\n+\t\tsuper(OGlobalConfiguration.MVRBTREE_NODE_PAGE_SIZE.getValueAsInteger(), 0.7f);\r\n \t\tconfig();\r\n \r\n \t\tclusterName = iClusterName;\r\n@@ -640,7 +640,7 @@ public abstract class OMVRBTreePersistent<K, V> extends OMVRBTree<K, V> implemen\n \r\n \t\tfinal V previous = super.put(key, value);\r\n \r\n-\t\tif (insertionCounter > optimizeThreshold) {\r\n+\t\tif (optimizeThreshold > -1 && insertionCounter > optimizeThreshold) {\r\n \t\t\tinsertionCounter = 0;\r\n \t\t\toptimize(false);\r\n \t\t} else\r\n",
      "atomicChanges": [
        {
          "change": "diff --git a/core/java/android/widget/CheckedTextView.java b/core/java/android/widget/CheckedTextView.java\nindex de8b80d..3f080d6 100644\n--- a/core/java/android/widget/CheckedTextView.java\n+++ b/core/java/android/widget/CheckedTextView.java\n@@ -242,7 +242,7 @@ public class CheckedTextView extends TextView implements Checkable {\n                 right = width - mBasePadding;\n                 left = right - mCheckMarkWidth;\n             }\n-            checkMarkDrawable.setBounds( left, top, right, bottom);\n+            checkMarkDrawable.setBounds(mScrollX + left, top, mScrollX + right, bottom);\n             checkMarkDrawable.draw(canvas);\n         }\n     }\n",
          "label": "fix"
        },
        {
          "change": "diff --git a/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java b/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java\nindex a90a796..e4c934c 100644\n--- a/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java\n@@ -83,7 +83,7 @@ public abstract class OMVRBTreePersistent<K, V> extends OMVRBTree<K, V> implemen\n \r\n \tpublic OMVRBTreePersistent(String iClusterName, final OStreamSerializer iKeySerializer, final OStreamSerializer iValueSerializer) {\r\n \t\t// MINIMIZE I/O USING A LARGER PAGE THAN THE DEFAULT USED IN MEMORY\r\n-\t\tsuper(1024, 0.7f);\r\n+\t\tsuper(OGlobalConfiguration.MVRBTREE_NODE_PAGE_SIZE.getValueAsInteger(), 0.7f);\r\n \t\tconfig();\r\n \r\n \t\tclusterName = iClusterName;\r\n@@ -640,7 +640,7 @@ public abstract class OMVRBTreePersistent<K, V> extends OMVRBTree<K, V> implemen\n \r\n \t\tfinal V previous = super.put(key, value);\r\n \r\n-\t\tif (insertionCounter > optimizeThreshold) {\r\n+\t\tif (optimizeThreshold > -1 && insertionCounter > optimizeThreshold) {\r\n \t\t\tinsertionCounter = 0;\r\n \t\t\toptimize(false);\r\n \t\t} else\r\n",
          "label": "refactor"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\nindex cf4aa61..ae18e12 100644\n--- a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n+++ b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n@@ -118,9 +118,9 @@ public class CSVDataFetcher extends BaseDataFetcher {\n         }\n \n         this.numOutcomes = labels.size();\n+        this.totalExamples = l.size();\n+        \n         all = DataSet.merge(l);\n-\n-\n     }\n \n \n\ndiff --git a/smack-im/src/main/java/org/jivesoftware/smack/roster/Roster.java b/smack-im/src/main/java/org/jivesoftware/smack/roster/Roster.java\nindex 4412b27c..fa9b81bd 100644\n--- a/smack-im/src/main/java/org/jivesoftware/smack/roster/Roster.java\n+++ b/smack-im/src/main/java/org/jivesoftware/smack/roster/Roster.java\n@@ -1067,6 +1067,7 @@ public class Roster extends Manager {\n             return userPresences;\n         }\n \n+        @Override\n         public void processPacket(Packet packet) throws NotConnectedException {\n             final XMPPConnection connection = connection();\n             Presence presence = (Presence) packet;\n",
      "atomicChanges": [
        {
          "change": "diff --git a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\nindex cf4aa61..ae18e12 100644\n--- a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n+++ b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n@@ -118,9 +118,9 @@ public class CSVDataFetcher extends BaseDataFetcher {\n         }\n \n         this.numOutcomes = labels.size();\n+        this.totalExamples = l.size();\n+        \n         all = DataSet.merge(l);\n-\n-\n     }\n \n \n",
          "label": "fix"
        },
        {
          "change": "diff --git a/smack-im/src/main/java/org/jivesoftware/smack/roster/Roster.java b/smack-im/src/main/java/org/jivesoftware/smack/roster/Roster.java\nindex 4412b27c..fa9b81bd 100644\n--- a/smack-im/src/main/java/org/jivesoftware/smack/roster/Roster.java\n+++ b/smack-im/src/main/java/org/jivesoftware/smack/roster/Roster.java\n@@ -1067,6 +1067,7 @@ public class Roster extends Manager {\n             return userPresences;\n         }\n \n+        @Override\n         public void processPacket(Packet packet) throws NotConnectedException {\n             final XMPPConnection connection = connection();\n             Presence presence = (Presence) packet;\n",
          "label": "refactor"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/RecordProjectOperator.java b/presto-main/src/main/java/com/facebook/presto/operator/RecordProjectOperator.java\nindex 3f6fd77..d4a9b07 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/RecordProjectOperator.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/RecordProjectOperator.java\n@@ -170,8 +170,6 @@ public class RecordProjectOperator\n         Page page = pageBuilder.build();\n         pageBuilder.reset();\n \n-        operatorContext.recordGeneratedInput(page.getDataSize(), page.getPositionCount());\n-\n         return page;\n     }\n }\n\ndiff --git a/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java b/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\nindex f333484de..c5cf8ff2c 100644\n--- a/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\n+++ b/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\n@@ -524,7 +524,8 @@ public class ConfigurationServiceImpl\n \n \n             //write the file.\n-            XMLConfUtils.writeXML(propertiesDocument, getConfigurationFile());\n+            XMLUtils.indentedWriteXML(\n+                propertiesDocument, new FileWriter( getConfigurationFile()));\n         }\n         finally\n         {\n@@ -628,8 +629,6 @@ public class ConfigurationServiceImpl\n                 {\n                     //update the corresponding node\n                     Object value = properties.get(newPropBuff.toString());\n-                    if (newPropBuff.toString().indexOf(\"SYSTEM_PROPERTY\")!= -1)\n-                        System.out.println(\"aaaa\");\n \n                     if(value == null)\n                     {\n",
      "atomicChanges": [
        {
          "change": "diff --git a/presto-main/src/main/java/com/facebook/presto/operator/RecordProjectOperator.java b/presto-main/src/main/java/com/facebook/presto/operator/RecordProjectOperator.java\nindex 3f6fd77..d4a9b07 100644\n--- a/presto-main/src/main/java/com/facebook/presto/operator/RecordProjectOperator.java\n+++ b/presto-main/src/main/java/com/facebook/presto/operator/RecordProjectOperator.java\n@@ -170,8 +170,6 @@ public class RecordProjectOperator\n         Page page = pageBuilder.build();\n         pageBuilder.reset();\n \n-        operatorContext.recordGeneratedInput(page.getDataSize(), page.getPositionCount());\n-\n         return page;\n     }\n }\n",
          "label": "refactor"
        },
        {
          "change": "diff --git a/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java b/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\nindex f333484de..c5cf8ff2c 100644\n--- a/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\n+++ b/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\n@@ -524,7 +524,8 @@ public class ConfigurationServiceImpl\n \n \n             //write the file.\n-            XMLConfUtils.writeXML(propertiesDocument, getConfigurationFile());\n+            XMLUtils.indentedWriteXML(\n+                propertiesDocument, new FileWriter( getConfigurationFile()));\n         }\n         finally\n         {\n@@ -628,8 +629,6 @@ public class ConfigurationServiceImpl\n                 {\n                     //update the corresponding node\n                     Object value = properties.get(newPropBuff.toString());\n-                    if (newPropBuff.toString().indexOf(\"SYSTEM_PROPERTY\")!= -1)\n-                        System.out.println(\"aaaa\");\n \n                     if(value == null)\n                     {\n",
          "label": "fix"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/python/educational/interactive-learning/src/com/jetbrains/edu/learning/courseGeneration/StudyProjectGenerator.java b/python/educational/interactive-learning/src/com/jetbrains/edu/learning/courseGeneration/StudyProjectGenerator.java\nindex e3d6b9f..82eb8ea 100644\n--- a/python/educational/interactive-learning/src/com/jetbrains/edu/learning/courseGeneration/StudyProjectGenerator.java\n+++ b/python/educational/interactive-learning/src/com/jetbrains/edu/learning/courseGeneration/StudyProjectGenerator.java\n@@ -47,7 +47,7 @@ public class StudyProjectGenerator {\n   private static final String CACHE_NAME = \"courseNames.txt\";\n   private List<CourseInfo> myCourses = new ArrayList<CourseInfo>();\n   private CourseInfo mySelectedCourseInfo;\n-  private static final Pattern CACHE_PATTERN = Pattern.compile(\"name=(.*) description=(.*) folder=(.*) (instructor=(.*))+\");\n+  private static final Pattern CACHE_PATTERN = Pattern.compile(\"name=(.*) description=(.*) folder=(.*) (instructor=(.*))*\");\n   private static final String COURSE_META_FILE = \"course.json\";\n   private static final String COURSE_NAME_ATTRIBUTE = \"name\";\n   private static final String COURSE_DESCRIPTION = \"description\";\n\ndiff --git a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\nindex 80300020..92718985 100644\n--- a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n+++ b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n@@ -115,7 +115,7 @@ public class OAuth2ProviderBeanDefinitionParser implements BeanDefinitionParser\n       String authenticationCacheRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"authentication-cache-ref\");\n       String approvalFilterRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"user-approval-filter-ref\");\n       String approvalHandlerRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n-      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n+      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"redirect-strategy-ref\");\n       if (!StringUtils.hasText(verificationCodeRedirectStrategyRef)) {\n         verificationCodeRedirectStrategyRef = redirectStrategyRef;\n       }\n",
      "atomicChanges": [
        {
          "change": "diff --git a/python/educational/interactive-learning/src/com/jetbrains/edu/learning/courseGeneration/StudyProjectGenerator.java b/python/educational/interactive-learning/src/com/jetbrains/edu/learning/courseGeneration/StudyProjectGenerator.java\nindex e3d6b9f..82eb8ea 100644\n--- a/python/educational/interactive-learning/src/com/jetbrains/edu/learning/courseGeneration/StudyProjectGenerator.java\n+++ b/python/educational/interactive-learning/src/com/jetbrains/edu/learning/courseGeneration/StudyProjectGenerator.java\n@@ -47,7 +47,7 @@ public class StudyProjectGenerator {\n   private static final String CACHE_NAME = \"courseNames.txt\";\n   private List<CourseInfo> myCourses = new ArrayList<CourseInfo>();\n   private CourseInfo mySelectedCourseInfo;\n-  private static final Pattern CACHE_PATTERN = Pattern.compile(\"name=(.*) description=(.*) folder=(.*) (instructor=(.*))+\");\n+  private static final Pattern CACHE_PATTERN = Pattern.compile(\"name=(.*) description=(.*) folder=(.*) (instructor=(.*))*\");\n   private static final String COURSE_META_FILE = \"course.json\";\n   private static final String COURSE_NAME_ATTRIBUTE = \"name\";\n   private static final String COURSE_DESCRIPTION = \"description\";\n",
          "label": "refactor"
        },
        {
          "change": "diff --git a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\nindex 80300020..92718985 100644\n--- a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n+++ b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n@@ -115,7 +115,7 @@ public class OAuth2ProviderBeanDefinitionParser implements BeanDefinitionParser\n       String authenticationCacheRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"authentication-cache-ref\");\n       String approvalFilterRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"user-approval-filter-ref\");\n       String approvalHandlerRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n-      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n+      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"redirect-strategy-ref\");\n       if (!StringUtils.hasText(verificationCodeRedirectStrategyRef)) {\n         verificationCodeRedirectStrategyRef = redirectStrategyRef;\n       }\n",
          "label": "fix"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\nindex 402d63fff..a05c4a877 100644\n--- a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n+++ b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n@@ -37,7 +37,7 @@ public class AppCompatTextView extends TextView {\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs) {\n-        this(context, attrs, 0);\n+        this(context, attrs, android.R.attr.textViewStyle);\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs, int defStyle) {\n\ndiff --git a/DataExtractionOSM/src/net/osmand/router/RouteResultPreparation.java b/DataExtractionOSM/src/net/osmand/router/RouteResultPreparation.java\nindex f1f06f3c56..9504984483 100644\n--- a/DataExtractionOSM/src/net/osmand/router/RouteResultPreparation.java\n+++ b/DataExtractionOSM/src/net/osmand/router/RouteResultPreparation.java\n@@ -457,7 +457,7 @@ public class RouteResultPreparation {\n \t\tif (current <= 0) {\n \t\t\tcurrent = 1;\n \t\t}\n-\t\tif(ls >= 0 /*&& current + left + right >= ls*/){\n+//\t\tif(ls >= 0 /*&& current + left + right >= ls*/){\n \t\t\tlanes = new int[current + left + right];\n \t\t\tls = current + left + right;\n \t\t\tfor(int it=0; it< ls; it++) {\n@@ -471,12 +471,13 @@ public class RouteResultPreparation {\n \t\t\tif ((current <= left + right) && (left > 1 || right > 1)) {\n \t\t\t\tspeak = true;\n \t\t\t}\n-\t\t}\n+//\t\t}\n \t\t\n \t\tif (kl) {\n \t\t\tt = TurnType.valueOf(TurnType.KL, leftSide);\n \t\t\tt.setSkipToSpeak(!speak);\n-\t\t} else if(kr){\n+\t\t} \n+\t\tif(kr){\n \t\t\tt = TurnType.valueOf(TurnType.KR, leftSide);\n \t\t\tt.setSkipToSpeak(!speak);\n \t\t}\n",
      "atomicChanges": [
        {
          "change": "diff --git a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\nindex 402d63fff..a05c4a877 100644\n--- a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n+++ b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n@@ -37,7 +37,7 @@ public class AppCompatTextView extends TextView {\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs) {\n-        this(context, attrs, 0);\n+        this(context, attrs, android.R.attr.textViewStyle);\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs, int defStyle) {\n",
          "label": "fix"
        },
        {
          "change": "diff --git a/DataExtractionOSM/src/net/osmand/router/RouteResultPreparation.java b/DataExtractionOSM/src/net/osmand/router/RouteResultPreparation.java\nindex f1f06f3c56..9504984483 100644\n--- a/DataExtractionOSM/src/net/osmand/router/RouteResultPreparation.java\n+++ b/DataExtractionOSM/src/net/osmand/router/RouteResultPreparation.java\n@@ -457,7 +457,7 @@ public class RouteResultPreparation {\n \t\tif (current <= 0) {\n \t\t\tcurrent = 1;\n \t\t}\n-\t\tif(ls >= 0 /*&& current + left + right >= ls*/){\n+//\t\tif(ls >= 0 /*&& current + left + right >= ls*/){\n \t\t\tlanes = new int[current + left + right];\n \t\t\tls = current + left + right;\n \t\t\tfor(int it=0; it< ls; it++) {\n@@ -471,12 +471,13 @@ public class RouteResultPreparation {\n \t\t\tif ((current <= left + right) && (left > 1 || right > 1)) {\n \t\t\t\tspeak = true;\n \t\t\t}\n-\t\t}\n+//\t\t}\n \t\t\n \t\tif (kl) {\n \t\t\tt = TurnType.valueOf(TurnType.KL, leftSide);\n \t\t\tt.setSkipToSpeak(!speak);\n-\t\t} else if(kr){\n+\t\t} \n+\t\tif(kr){\n \t\t\tt = TurnType.valueOf(TurnType.KR, leftSide);\n \t\t\tt.setSkipToSpeak(!speak);\n \t\t}\n",
          "label": "refactor"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java b/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java\nindex 09d0ff0..09d2690 100644\n--- a/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java\n+++ b/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java\n@@ -105,12 +105,12 @@ public class ShiftReduceParserQuery implements ParserQuery {\n \n   @Override\n   public Tree getBestDependencyParse(boolean debinarize) {\n-    throw new UnsupportedOperationException();\n+    return null;\n   }\n \n   @Override\n   public Tree getBestFactoredParse() {\n-    throw new UnsupportedOperationException();\n+    return null;\n   }\n \n   /** TODO: if this is a beam, return all equal parses */\n\ndiff --git a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\nindex 6b7ac8c..b4d8c63 100644\n--- a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n+++ b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n@@ -942,6 +942,7 @@ public class SettingsBackupAgent extends BackupAgentHelper {\n                 ByteArrayOutputStream bos = new ByteArrayOutputStream();\n                 OutputStreamWriter out = new OutputStreamWriter(bos);\n                 fromFile.write(out);\n+                out.flush();\n                 return bos.toByteArray();\n             } else {\n                 return EMPTY_DATA;\n",
      "atomicChanges": [
        {
          "change": "diff --git a/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java b/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java\nindex 09d0ff0..09d2690 100644\n--- a/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java\n+++ b/src/edu/stanford/nlp/parser/shiftreduce/ShiftReduceParserQuery.java\n@@ -105,12 +105,12 @@ public class ShiftReduceParserQuery implements ParserQuery {\n \n   @Override\n   public Tree getBestDependencyParse(boolean debinarize) {\n-    throw new UnsupportedOperationException();\n+    return null;\n   }\n \n   @Override\n   public Tree getBestFactoredParse() {\n-    throw new UnsupportedOperationException();\n+    return null;\n   }\n \n   /** TODO: if this is a beam, return all equal parses */\n",
          "label": "refactor"
        },
        {
          "change": "diff --git a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\nindex 6b7ac8c..b4d8c63 100644\n--- a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n+++ b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n@@ -942,6 +942,7 @@ public class SettingsBackupAgent extends BackupAgentHelper {\n                 ByteArrayOutputStream bos = new ByteArrayOutputStream();\n                 OutputStreamWriter out = new OutputStreamWriter(bos);\n                 fromFile.write(out);\n+                out.flush();\n                 return bos.toByteArray();\n             } else {\n                 return EMPTY_DATA;\n",
          "label": "fix"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/bundles/binding/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/OneWireGenericBindingProvider.java b/bundles/binding/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/OneWireGenericBindingProvider.java\nindex fc66c88..d721a57 100644\n--- a/bundles/binding/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/OneWireGenericBindingProvider.java\n+++ b/bundles/binding/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/OneWireGenericBindingProvider.java\n@@ -112,7 +112,7 @@ public class OneWireGenericBindingProvider extends AbstractGenericBindingProvide\n \t * correctly and <code>false</code> otherwise\n \t */\n \tprotected boolean checkSensorId(String sensorIdString) {\n-\t\treturn sensorIdString.matches(\"\\\\[A-F0-9]{2}\\\\.[A-F0-9]{12}\");\n+\t\treturn sensorIdString.matches(\"[A-F0-9]{2}\\\\.[A-F0-9]{12}\");\n \t}\n \t\n \t\n\ndiff --git a/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java b/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java\nindex 806d2b0..b4871c6 100644\n--- a/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java\n+++ b/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java\n@@ -1065,7 +1065,7 @@ public class ObjectiveCImplementationGenerator extends ObjectiveCSourceFileGener\n     } else if (value instanceof String) {\n       StringLiteral node = ast.newStringLiteral();\n       node.setLiteralValue((String) value);\n-      printf(StatementGenerator.generateStringLiteral(node));\n+      print(StatementGenerator.generateStringLiteral(node));\n     } else if (value instanceof Number || value instanceof Character || value instanceof Boolean) {\n       print(value.toString());\n     } else if (value.getClass().isArray()) {\n",
      "atomicChanges": [
        {
          "change": "diff --git a/bundles/binding/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/OneWireGenericBindingProvider.java b/bundles/binding/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/OneWireGenericBindingProvider.java\nindex fc66c88..d721a57 100644\n--- a/bundles/binding/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/OneWireGenericBindingProvider.java\n+++ b/bundles/binding/org.openhab.binding.onewire/src/main/java/org/openhab/binding/onewire/internal/OneWireGenericBindingProvider.java\n@@ -112,7 +112,7 @@ public class OneWireGenericBindingProvider extends AbstractGenericBindingProvide\n \t * correctly and <code>false</code> otherwise\n \t */\n \tprotected boolean checkSensorId(String sensorIdString) {\n-\t\treturn sensorIdString.matches(\"\\\\[A-F0-9]{2}\\\\.[A-F0-9]{12}\");\n+\t\treturn sensorIdString.matches(\"[A-F0-9]{2}\\\\.[A-F0-9]{12}\");\n \t}\n \t\n \t\n",
          "label": "refactor"
        },
        {
          "change": "diff --git a/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java b/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java\nindex 806d2b0..b4871c6 100644\n--- a/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java\n+++ b/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java\n@@ -1065,7 +1065,7 @@ public class ObjectiveCImplementationGenerator extends ObjectiveCSourceFileGener\n     } else if (value instanceof String) {\n       StringLiteral node = ast.newStringLiteral();\n       node.setLiteralValue((String) value);\n-      printf(StatementGenerator.generateStringLiteral(node));\n+      print(StatementGenerator.generateStringLiteral(node));\n     } else if (value instanceof Number || value instanceof Character || value instanceof Boolean) {\n       print(value.toString());\n     } else if (value.getClass().isArray()) {\n",
          "label": "fix"
        }
      ]
    }
  ]
}