{
  "metadata": {
    "num_cases": 10,
    "concerns_per_case": 2,
    "types": [
      "cicd",
      "build",
      "docs",
      "test",
      "feat"
    ],
    "allow_same_types": true,
    "seed": 42,
    "source_dataset": "datasets/candidates/codefuse-hqcm/dataset/test.json"
  },
  "cases": [
    {
      "tangleChange": "diff --git a/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java b/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\nindex e8337f6..0ab86e4 100644\n--- a/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\n+++ b/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\n@@ -122,9 +122,16 @@ public class SELinuxPolicyInstallReceiver extends ConfigUpdateInstallReceiver {\n     }\n \n     private void setEnforcingMode(Context context) {\n-        boolean mode = Settings.Global.getInt(context.getContentResolver(),\n-            Settings.Global.SELINUX_STATUS, 0) == 1;\n-        SELinux.setSELinuxEnforce(mode);\n+        String mode = Settings.Global.getString(context.getContentResolver(),\n+            Settings.Global.SELINUX_STATUS);\n+        if (mode.equals(\"1\")) {\n+            Slog.i(TAG, \"Setting enforcing mode\");\n+            SystemProperties.set(\"persist.selinux.enforcing\", mode);\n+        } else if (mode.equals(\"0\")) {\n+            Slog.i(TAG, \"Tried to set permissive mode, ignoring\");\n+        } else {\n+            Slog.e(TAG, \"Got invalid enforcing mode: \" + mode);\n+        }\n     }\n \n     @Override\n\ndiff --git a/src/main/java/zmq/Poller.java b/src/main/java/zmq/Poller.java\nindex f7575ae..8f20548 100644\n--- a/src/main/java/zmq/Poller.java\n+++ b/src/main/java/zmq/Poller.java\n@@ -167,6 +167,7 @@ public class Poller extends PollerBase implements Runnable\n     public void start()\n     {\n         worker = new Thread(this, name);\n+        worker.setDaemon(true);\n         worker.start();\n     }\n \n",
      "atomicChanges": [
        {
          "change": "diff --git a/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java b/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\nindex e8337f6..0ab86e4 100644\n--- a/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\n+++ b/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\n@@ -122,9 +122,16 @@ public class SELinuxPolicyInstallReceiver extends ConfigUpdateInstallReceiver {\n     }\n \n     private void setEnforcingMode(Context context) {\n-        boolean mode = Settings.Global.getInt(context.getContentResolver(),\n-            Settings.Global.SELINUX_STATUS, 0) == 1;\n-        SELinux.setSELinuxEnforce(mode);\n+        String mode = Settings.Global.getString(context.getContentResolver(),\n+            Settings.Global.SELINUX_STATUS);\n+        if (mode.equals(\"1\")) {\n+            Slog.i(TAG, \"Setting enforcing mode\");\n+            SystemProperties.set(\"persist.selinux.enforcing\", mode);\n+        } else if (mode.equals(\"0\")) {\n+            Slog.i(TAG, \"Tried to set permissive mode, ignoring\");\n+        } else {\n+            Slog.e(TAG, \"Got invalid enforcing mode: \" + mode);\n+        }\n     }\n \n     @Override\n",
          "label": "feat"
        },
        {
          "change": "diff --git a/src/main/java/zmq/Poller.java b/src/main/java/zmq/Poller.java\nindex f7575ae..8f20548 100644\n--- a/src/main/java/zmq/Poller.java\n+++ b/src/main/java/zmq/Poller.java\n@@ -167,6 +167,7 @@ public class Poller extends PollerBase implements Runnable\n     public void start()\n     {\n         worker = new Thread(this, name);\n+        worker.setDaemon(true);\n         worker.start();\n     }\n \n",
          "label": "feat"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java b/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java\nindex 8f932cf339..da93bce36c 100644\n--- a/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java\n+++ b/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java\n@@ -24,7 +24,7 @@ import org.junit.Test;\n \n public class HttpProxyRouteTest extends BaseJettyTest {\n \n-    private int size = 500;\n+    private int size = 10;\n \n     @Test\n     public void testHttpProxy() throws Exception {\n\ndiff --git a/src/test/java/org/opentripplanner/routing/edgetype/loader/TestPatternHopFactory.java b/src/test/java/org/opentripplanner/routing/edgetype/loader/TestPatternHopFactory.java\nindex 32807f83c..76c4e8f95 100644\n--- a/src/test/java/org/opentripplanner/routing/edgetype/loader/TestPatternHopFactory.java\n+++ b/src/test/java/org/opentripplanner/routing/edgetype/loader/TestPatternHopFactory.java\n@@ -38,18 +38,16 @@ import org.opentripplanner.gtfs.GtfsLibrary;\n import org.opentripplanner.routing.algorithm.GenericAStar;\n import org.opentripplanner.routing.core.OptimizeType;\n import org.opentripplanner.routing.core.RoutingRequest;\n-import org.opentripplanner.routing.core.State;\n import org.opentripplanner.routing.core.StopTransfer;\n import org.opentripplanner.routing.core.TransferTable;\n import org.opentripplanner.routing.core.TraverseModeSet;\n-import org.opentripplanner.routing.edgetype.PatternDwell;\n import org.opentripplanner.routing.edgetype.PatternHop;\n import org.opentripplanner.routing.edgetype.PlainStreetEdge;\n import org.opentripplanner.routing.edgetype.StreetTransitLink;\n import org.opentripplanner.routing.edgetype.StreetTraversalPermission;\n-import org.opentripplanner.routing.edgetype.TripPattern;\n import org.opentripplanner.routing.edgetype.TransferEdge;\n import org.opentripplanner.routing.edgetype.TransitBoardAlight;\n+import org.opentripplanner.routing.edgetype.TripPattern;\n import org.opentripplanner.routing.edgetype.factory.GTFSPatternHopFactory;\n import org.opentripplanner.routing.graph.Edge;\n import org.opentripplanner.routing.graph.Graph;\n@@ -486,11 +484,10 @@ public class TestPatternHopFactory extends TestCase {\n         ShortestPathTree spt = aStar.getShortestPathTree(options);\n         GraphPath path = spt.getPath(destination, false);\n \n-        // TODO this is wrong (milliseconds)\n-//        long endTime = path.getEndTime();\n-//        Calendar c = new GregorianCalendar();\n-//        c.setTimeInMillis(endTime);\n-//        assertTrue(endTime - startTime.getTimeInMillis() < 7200);\n+        long endTime = path.getEndTime();\n+        Calendar c = new GregorianCalendar();\n+        c.setTimeInMillis(endTime * 1000L);\n+        assertTrue(endTime - TestUtils.toSeconds(startTime) < 7200);\n     }\n \n     public void testFrequencies() {\n",
      "atomicChanges": [
        {
          "change": "diff --git a/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java b/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java\nindex 8f932cf339..da93bce36c 100644\n--- a/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java\n+++ b/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java\n@@ -24,7 +24,7 @@ import org.junit.Test;\n \n public class HttpProxyRouteTest extends BaseJettyTest {\n \n-    private int size = 500;\n+    private int size = 10;\n \n     @Test\n     public void testHttpProxy() throws Exception {\n",
          "label": "test"
        },
        {
          "change": "diff --git a/src/test/java/org/opentripplanner/routing/edgetype/loader/TestPatternHopFactory.java b/src/test/java/org/opentripplanner/routing/edgetype/loader/TestPatternHopFactory.java\nindex 32807f83c..76c4e8f95 100644\n--- a/src/test/java/org/opentripplanner/routing/edgetype/loader/TestPatternHopFactory.java\n+++ b/src/test/java/org/opentripplanner/routing/edgetype/loader/TestPatternHopFactory.java\n@@ -38,18 +38,16 @@ import org.opentripplanner.gtfs.GtfsLibrary;\n import org.opentripplanner.routing.algorithm.GenericAStar;\n import org.opentripplanner.routing.core.OptimizeType;\n import org.opentripplanner.routing.core.RoutingRequest;\n-import org.opentripplanner.routing.core.State;\n import org.opentripplanner.routing.core.StopTransfer;\n import org.opentripplanner.routing.core.TransferTable;\n import org.opentripplanner.routing.core.TraverseModeSet;\n-import org.opentripplanner.routing.edgetype.PatternDwell;\n import org.opentripplanner.routing.edgetype.PatternHop;\n import org.opentripplanner.routing.edgetype.PlainStreetEdge;\n import org.opentripplanner.routing.edgetype.StreetTransitLink;\n import org.opentripplanner.routing.edgetype.StreetTraversalPermission;\n-import org.opentripplanner.routing.edgetype.TripPattern;\n import org.opentripplanner.routing.edgetype.TransferEdge;\n import org.opentripplanner.routing.edgetype.TransitBoardAlight;\n+import org.opentripplanner.routing.edgetype.TripPattern;\n import org.opentripplanner.routing.edgetype.factory.GTFSPatternHopFactory;\n import org.opentripplanner.routing.graph.Edge;\n import org.opentripplanner.routing.graph.Graph;\n@@ -486,11 +484,10 @@ public class TestPatternHopFactory extends TestCase {\n         ShortestPathTree spt = aStar.getShortestPathTree(options);\n         GraphPath path = spt.getPath(destination, false);\n \n-        // TODO this is wrong (milliseconds)\n-//        long endTime = path.getEndTime();\n-//        Calendar c = new GregorianCalendar();\n-//        c.setTimeInMillis(endTime);\n-//        assertTrue(endTime - startTime.getTimeInMillis() < 7200);\n+        long endTime = path.getEndTime();\n+        Calendar c = new GregorianCalendar();\n+        c.setTimeInMillis(endTime * 1000L);\n+        assertTrue(endTime - TestUtils.toSeconds(startTime) < 7200);\n     }\n \n     public void testFrequencies() {\n",
          "label": "test"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/core/java/android/preference/VolumePreference.java b/core/java/android/preference/VolumePreference.java\nindex 970d520..0219fe8 100644\n--- a/core/java/android/preference/VolumePreference.java\n+++ b/core/java/android/preference/VolumePreference.java\n@@ -109,7 +109,9 @@ public class VolumePreference extends SeekBarPreference implements\n     }\n \n     public void onActivityStop() {\n-        cleanup();\n+        if (mSeekBarVolumizer != null) {\n+            mSeekBarVolumizer.stopSample();\n+        }\n     }\n \n     /**\n\ndiff --git a/docs/pom.xml b/docs/pom.xml\nindex f172775..54bd64c 100644\n--- a/docs/pom.xml\n+++ b/docs/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n     </parent>\n \n     <artifactId>trino-docs</artifactId>",
      "atomicChanges": [
        {
          "change": "diff --git a/core/java/android/preference/VolumePreference.java b/core/java/android/preference/VolumePreference.java\nindex 970d520..0219fe8 100644\n--- a/core/java/android/preference/VolumePreference.java\n+++ b/core/java/android/preference/VolumePreference.java\n@@ -109,7 +109,9 @@ public class VolumePreference extends SeekBarPreference implements\n     }\n \n     public void onActivityStop() {\n-        cleanup();\n+        if (mSeekBarVolumizer != null) {\n+            mSeekBarVolumizer.stopSample();\n+        }\n     }\n \n     /**\n",
          "label": "feat"
        },
        {
          "change": "diff --git a/docs/pom.xml b/docs/pom.xml\nindex f172775..54bd64c 100644\n--- a/docs/pom.xml\n+++ b/docs/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n     </parent>\n \n     <artifactId>trino-docs</artifactId>",
          "label": "build"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/Jenkinsfile b/Jenkinsfile\nindex 68fabd8..c5320e2 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -2,9 +2,14 @@ pipeline {\n     agent any\n     stages {\n         stage('Build') {\n-            steps {\n-                echo 'Building...'\n-                sh 'make'\n+            steps {    \n+                try {\n+                    echo 'Building...'\n+                    sh 'make'\n+                } catch (Exception e) {\n+                    currentBuild.result = 'FAILURE'\n+                    throw e\n+                }    \n             }\n         }\n         stage('Test') {\n@@ -18,8 +20,13 @@ pipeline {\n         }\n         stage('Deploy') {\n             when {\n-                branch 'master'\n+                allOf {\n+                    branch 'master'\n+                    not {\n+                        buildingTag()\n+                    }\n+                }\n             }\n             steps {\n-                echo 'Deploying...'\n+                echo 'Deploying to Prod...'\n                sh './deploy.sh'\n             }\n         }\n     }\ndiff --git a/core/java/android/preference/VolumePreference.java b/core/java/android/preference/VolumePreference.java\nindex 970d520..0219fe8 100644\n--- a/core/java/android/preference/VolumePreference.java\n+++ b/core/java/android/preference/VolumePreference.java\n@@ -109,7 +109,9 @@ public class VolumePreference extends SeekBarPreference implements\n     }\n \n     public void onActivityStop() {\n-        cleanup();\n+        if (mSeekBarVolumizer != null) {\n+            mSeekBarVolumizer.stopSample();\n+        }\n     }\n \n     /**\n",
      "atomicChanges": [
        {
          "change": "diff --git a/Jenkinsfile b/Jenkinsfile\nindex 68fabd8..c5320e2 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -2,9 +2,14 @@ pipeline {\n     agent any\n     stages {\n         stage('Build') {\n-            steps {\n-                echo 'Building...'\n-                sh 'make'\n+            steps {    \n+                try {\n+                    echo 'Building...'\n+                    sh 'make'\n+                } catch (Exception e) {\n+                    currentBuild.result = 'FAILURE'\n+                    throw e\n+                }    \n             }\n         }\n         stage('Test') {\n@@ -18,8 +20,13 @@ pipeline {\n         }\n         stage('Deploy') {\n             when {\n-                branch 'master'\n+                allOf {\n+                    branch 'master'\n+                    not {\n+                        buildingTag()\n+                    }\n+                }\n             }\n             steps {\n-                echo 'Deploying...'\n+                echo 'Deploying to Prod...'\n                sh './deploy.sh'\n             }\n         }\n     }",
          "label": "cicd"
        },
        {
          "change": "diff --git a/core/java/android/preference/VolumePreference.java b/core/java/android/preference/VolumePreference.java\nindex 970d520..0219fe8 100644\n--- a/core/java/android/preference/VolumePreference.java\n+++ b/core/java/android/preference/VolumePreference.java\n@@ -109,7 +109,9 @@ public class VolumePreference extends SeekBarPreference implements\n     }\n \n     public void onActivityStop() {\n-        cleanup();\n+        if (mSeekBarVolumizer != null) {\n+            mSeekBarVolumizer.stopSample();\n+        }\n     }\n \n     /**\n",
          "label": "feat"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java b/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java\nindex 9cee8e70f..d367976d8 100644\n--- a/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java\n+++ b/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java\n@@ -21,7 +21,6 @@ package com.owncloud.android.authentication;\n \n import android.content.Context;\n import android.content.Intent;\n-import android.graphics.Point;\n import android.os.Bundle;\n import android.os.RemoteException;\n import android.support.test.InstrumentationRegistry;\n@@ -84,11 +83,11 @@ public class AuthenticatorActivityTest {\n     @Before\n     public void init(){\n         UiDevice uiDevice = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());\n-        Point[] coordinates = new Point[4];\n+        /*Point[] coordinates = new Point[4];\n         coordinates[0] = new Point(248, 1020);\n         coordinates[1] = new Point(248, 429);\n         coordinates[2] = new Point(796, 1020);\n-        coordinates[3] = new Point(796, 429);\n+        coordinates[3] = new Point(796, 429);*/\n         try {\n             if (!uiDevice.isScreenOn()) {\n                 uiDevice.wakeUp();\n\ndiff --git a/spring-boot-integration-tests/spring-boot-gradle-tests/src/test/java/org/springframework/boot/gradle/WarPackagingTests.java b/spring-boot-integration-tests/spring-boot-gradle-tests/src/test/java/org/springframework/boot/gradle/WarPackagingTests.java\nindex 88971fa..3cc1ec2 100644\n--- a/spring-boot-integration-tests/spring-boot-gradle-tests/src/test/java/org/springframework/boot/gradle/WarPackagingTests.java\n+++ b/spring-boot-integration-tests/spring-boot-gradle-tests/src/test/java/org/springframework/boot/gradle/WarPackagingTests.java\n@@ -46,8 +46,7 @@ public class WarPackagingTests {\n \n \tprivate static final Set<String> TOMCAT_EXPECTED_IN_WEB_INF_LIB_PROVIDED = new HashSet<String>(\n \t\t\tArrays.asList(\"spring-boot-starter-tomcat-\", \"tomcat-embed-core-\",\n-\t\t\t\t\t\"tomcat-embed-el-\", \"tomcat-embed-logging-juli-\",\n-\t\t\t\t\t\"tomcat-embed-websocket-\"));\n+\t\t\t\t\t\"tomcat-embed-el-\", \"tomcat-embed-websocket-\"));\n \n \tprivate static final Set<String> JETTY_EXPECTED_IN_WEB_INF_LIB_PROVIDED = new HashSet<String>(\n \t\t\tArrays.asList(\"spring-boot-starter-jetty-\", \"jetty-continuation\",\n",
      "atomicChanges": [
        {
          "change": "diff --git a/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java b/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java\nindex 9cee8e70f..d367976d8 100644\n--- a/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java\n+++ b/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java\n@@ -21,7 +21,6 @@ package com.owncloud.android.authentication;\n \n import android.content.Context;\n import android.content.Intent;\n-import android.graphics.Point;\n import android.os.Bundle;\n import android.os.RemoteException;\n import android.support.test.InstrumentationRegistry;\n@@ -84,11 +83,11 @@ public class AuthenticatorActivityTest {\n     @Before\n     public void init(){\n         UiDevice uiDevice = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());\n-        Point[] coordinates = new Point[4];\n+        /*Point[] coordinates = new Point[4];\n         coordinates[0] = new Point(248, 1020);\n         coordinates[1] = new Point(248, 429);\n         coordinates[2] = new Point(796, 1020);\n-        coordinates[3] = new Point(796, 429);\n+        coordinates[3] = new Point(796, 429);*/\n         try {\n             if (!uiDevice.isScreenOn()) {\n                 uiDevice.wakeUp();\n",
          "label": "test"
        },
        {
          "change": "diff --git a/spring-boot-integration-tests/spring-boot-gradle-tests/src/test/java/org/springframework/boot/gradle/WarPackagingTests.java b/spring-boot-integration-tests/spring-boot-gradle-tests/src/test/java/org/springframework/boot/gradle/WarPackagingTests.java\nindex 88971fa..3cc1ec2 100644\n--- a/spring-boot-integration-tests/spring-boot-gradle-tests/src/test/java/org/springframework/boot/gradle/WarPackagingTests.java\n+++ b/spring-boot-integration-tests/spring-boot-gradle-tests/src/test/java/org/springframework/boot/gradle/WarPackagingTests.java\n@@ -46,8 +46,7 @@ public class WarPackagingTests {\n \n \tprivate static final Set<String> TOMCAT_EXPECTED_IN_WEB_INF_LIB_PROVIDED = new HashSet<String>(\n \t\t\tArrays.asList(\"spring-boot-starter-tomcat-\", \"tomcat-embed-core-\",\n-\t\t\t\t\t\"tomcat-embed-el-\", \"tomcat-embed-logging-juli-\",\n-\t\t\t\t\t\"tomcat-embed-websocket-\"));\n+\t\t\t\t\t\"tomcat-embed-el-\", \"tomcat-embed-websocket-\"));\n \n \tprivate static final Set<String> JETTY_EXPECTED_IN_WEB_INF_LIB_PROVIDED = new HashSet<String>(\n \t\t\tArrays.asList(\"spring-boot-starter-jetty-\", \"jetty-continuation\",\n",
          "label": "test"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java b/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java\nindex 8a37429..9f9bf55 100644\n--- a/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java\n+++ b/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java\n@@ -14,4 +14,6 @@ public interface Broker\n     \n     // I know... this isn't supposed to be here\n     Object instantiateMasterServer( GraphDatabaseService graphDb );\n+    \n+    void shutdown();\n }\n\ndiff --git a/build.gradle b/build.gradle\nindex e84e462..0f68828 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -15,14 +15,14 @@\n\n-sourceCompatibility = 1.5\n+sourceCompatibility = 1.8\n version = '1.0'\n jar {\n     manifest {\n         attributes 'Implementation-Title': 'Gradle Quickstart',\n                    'Implementation-Version': version\n     }\n }\n \n-dependencies {\n+dependencies { \n     testCompile group: 'junit', name: 'junit', version: '4.12'\n-    compile group: 'com.google.guava', name: 'guava', version: '18.0'\n+    compile group: 'com.google.guava', name: 'guava', version: '28.2-jre'\n }",
      "atomicChanges": [
        {
          "change": "diff --git a/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java b/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java\nindex 8a37429..9f9bf55 100644\n--- a/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java\n+++ b/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java\n@@ -14,4 +14,6 @@ public interface Broker\n     \n     // I know... this isn't supposed to be here\n     Object instantiateMasterServer( GraphDatabaseService graphDb );\n+    \n+    void shutdown();\n }\n",
          "label": "feat"
        },
        {
          "change": "diff --git a/build.gradle b/build.gradle\nindex e84e462..0f68828 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -15,14 +15,14 @@\n\n-sourceCompatibility = 1.5\n+sourceCompatibility = 1.8\n version = '1.0'\n jar {\n     manifest {\n         attributes 'Implementation-Title': 'Gradle Quickstart',\n                    'Implementation-Version': version\n     }\n }\n \n-dependencies {\n+dependencies { \n     testCompile group: 'junit', name: 'junit', version: '4.12'\n-    compile group: 'com.google.guava', name: 'guava', version: '18.0'\n+    compile group: 'com.google.guava', name: 'guava', version: '28.2-jre'\n }",
          "label": "build"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/build.gradle b/build.gradle\nindex 6g74558..897aebc 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,13 +1,13 @@\n apply plugin: 'java'\n apply plugin: 'eclipse'\n \n-group = 'com.example'\n-version = '1.0.0-SNAPSHOT'\n+group = 'com.mycompany'\n+version = '1.0.1'\n \n sourceCompatibility = 1.8\n \n repositories {\n-    mavenCentral()\n+    maven { url \"https://maven.springframework.org/release\" }\n }\n \n dependencies {\n-    testCompile group: 'junit', name: 'junit', version: '4.13.1'\n+    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.4.5'\n }\ndiff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 3e5f6a9..2b763ed 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -1,6 +1,6 @@\n image: node:14\n \n-test:\n+tests:\n   script:\n     - npm install\n     - npm run test\n@@ -8,3 +8,20 @@ test:\n   only:\n     - main\n     - merge_requests\n+\n+code_scan:\n+  image: sonarsource/sonar-scanner-cli\n+  script:\n+    - sonar-scanner\n+  only:\n+    - main\n+    - merge_requests\n+    - feature/*\n+\n+security_scan:\n+  image: aquasec/trivy:latest\n+  script:\n+    - trivy filesystem --exit-code 1 --no-progress /\n+  only:\n+    - main\n+    - merge_requests",
      "atomicChanges": [
        {
          "change": "diff --git a/build.gradle b/build.gradle\nindex 6g74558..897aebc 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,13 +1,13 @@\n apply plugin: 'java'\n apply plugin: 'eclipse'\n \n-group = 'com.example'\n-version = '1.0.0-SNAPSHOT'\n+group = 'com.mycompany'\n+version = '1.0.1'\n \n sourceCompatibility = 1.8\n \n repositories {\n-    mavenCentral()\n+    maven { url \"https://maven.springframework.org/release\" }\n }\n \n dependencies {\n-    testCompile group: 'junit', name: 'junit', version: '4.13.1'\n+    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.4.5'\n }",
          "label": "build"
        },
        {
          "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 3e5f6a9..2b763ed 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -1,6 +1,6 @@\n image: node:14\n \n-test:\n+tests:\n   script:\n     - npm install\n     - npm run test\n@@ -8,3 +8,20 @@ test:\n   only:\n     - main\n     - merge_requests\n+\n+code_scan:\n+  image: sonarsource/sonar-scanner-cli\n+  script:\n+    - sonar-scanner\n+  only:\n+    - main\n+    - merge_requests\n+    - feature/*\n+\n+security_scan:\n+  image: aquasec/trivy:latest\n+  script:\n+    - trivy filesystem --exit-code 1 --no-progress /\n+  only:\n+    - main\n+    - merge_requests",
          "label": "cicd"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/build.gradle b/build.gradle\nindex 227a903..37bc2yx 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,7 +1,7 @@\n apply plugin: 'java'\n\n repositories {\n-    mavenCentral()\n+    jcenter()\n }\n\n dependencies {\n-    compile 'org.springframework.boot:spring-boot-starter-web:2.2.2'\n+    compile 'org.springframework.boot:spring-boot-starter-web:2.3.4'\n }\ndiff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java\nindex 2ce37ae..399aa1b 100644\n--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java\n+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2002-2012 the original author or authors.\n+ * Copyright 2002-2013 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -19,7 +19,6 @@ package org.springframework.web.servlet.view.document;\n import java.io.OutputStream;\n import java.util.Locale;\n import java.util.Map;\n-\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n \n@@ -34,9 +33,9 @@ import org.springframework.web.servlet.view.AbstractView;\n /**\n  * Convenient superclass for Excel document views.\n  *\n- * <p>This class uses the <i>JExcelAPI</i> instead of <i>POI</i>. More\n- * information on <i>JExcelAPI</i> can be found on their <a\n- * href=\"http://www.andykhan.com/jexcelapi/\" target=\"_blank\">website</a>.\n+ * <p>This class uses the <i>JExcelAPI</i> instead of <i>POI</i>.\n+ * More information on <i>JExcelAPI</i> can be found on their\n+ * <a href=\"http://www.andykhan.com/jexcelapi/\" target=\"_blank\">website</a>.\n  *\n  * <p>Properties:\n  * <ul>\n@@ -58,11 +57,11 @@ import org.springframework.web.servlet.view.AbstractView;\n  *\n  * <pre class=\"code\">\n  * protected void buildExcelDocument(\n- *      Map&lt;String, Object&gt; model, WritableWorkbook workbook,\n- * \t\tHttpServletRequest request, HttpServletResponse response) {\n+ *     Map&lt;String, Object&gt; model, WritableWorkbook workbook,\n+ *     HttpServletRequest request, HttpServletResponse response) {\n  *\n  * \t if (workbook.getNumberOfSheets() == 0) {\n- * \t     workbook.createSheet(&quot;Spring&quot;, 0);\n+ * \t   workbook.createSheet(&quot;Spring&quot;, 0);\n  *   }\n  *\n  * \t WritableSheet sheet = workbook.getSheet(&quot;Spring&quot;);\n@@ -70,7 +69,7 @@ import org.springframework.web.servlet.view.AbstractView;\n  * \t sheet.addCell(label);\n  * }</pre>\n  *\n- * The use of this view is close to the AbstractExcelView class,\n+ * The use of this view is close to the {@link AbstractExcelView} class,\n  * just using the JExcel API instead of the Apache POI API.\n  *\n  * @author Bram Smeets\n@@ -79,7 +78,10 @@ import org.springframework.web.servlet.view.AbstractView;\n  * @since 1.2.5\n  * @see AbstractExcelView\n  * @see AbstractPdfView\n+ * @deprecated as of Spring 4.0, since JExcelAPI is an abandoned project\n+ * (no release since 2009, with serious bugs remaining)\n  */\n+@Deprecated\n public abstract class AbstractJExcelView extends AbstractView {\n \n \t/** The content type for an Excel response */\n",
      "atomicChanges": [
        {
          "change": "diff --git a/build.gradle b/build.gradle\nindex 227a903..37bc2yx 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,7 +1,7 @@\n apply plugin: 'java'\n\n repositories {\n-    mavenCentral()\n+    jcenter()\n }\n\n dependencies {\n-    compile 'org.springframework.boot:spring-boot-starter-web:2.2.2'\n+    compile 'org.springframework.boot:spring-boot-starter-web:2.3.4'\n }",
          "label": "build"
        },
        {
          "change": "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java\nindex 2ce37ae..399aa1b 100644\n--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java\n+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2002-2012 the original author or authors.\n+ * Copyright 2002-2013 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -19,7 +19,6 @@ package org.springframework.web.servlet.view.document;\n import java.io.OutputStream;\n import java.util.Locale;\n import java.util.Map;\n-\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n \n@@ -34,9 +33,9 @@ import org.springframework.web.servlet.view.AbstractView;\n /**\n  * Convenient superclass for Excel document views.\n  *\n- * <p>This class uses the <i>JExcelAPI</i> instead of <i>POI</i>. More\n- * information on <i>JExcelAPI</i> can be found on their <a\n- * href=\"http://www.andykhan.com/jexcelapi/\" target=\"_blank\">website</a>.\n+ * <p>This class uses the <i>JExcelAPI</i> instead of <i>POI</i>.\n+ * More information on <i>JExcelAPI</i> can be found on their\n+ * <a href=\"http://www.andykhan.com/jexcelapi/\" target=\"_blank\">website</a>.\n  *\n  * <p>Properties:\n  * <ul>\n@@ -58,11 +57,11 @@ import org.springframework.web.servlet.view.AbstractView;\n  *\n  * <pre class=\"code\">\n  * protected void buildExcelDocument(\n- *      Map&lt;String, Object&gt; model, WritableWorkbook workbook,\n- * \t\tHttpServletRequest request, HttpServletResponse response) {\n+ *     Map&lt;String, Object&gt; model, WritableWorkbook workbook,\n+ *     HttpServletRequest request, HttpServletResponse response) {\n  *\n  * \t if (workbook.getNumberOfSheets() == 0) {\n- * \t     workbook.createSheet(&quot;Spring&quot;, 0);\n+ * \t   workbook.createSheet(&quot;Spring&quot;, 0);\n  *   }\n  *\n  * \t WritableSheet sheet = workbook.getSheet(&quot;Spring&quot;);\n@@ -70,7 +69,7 @@ import org.springframework.web.servlet.view.AbstractView;\n  * \t sheet.addCell(label);\n  * }</pre>\n  *\n- * The use of this view is close to the AbstractExcelView class,\n+ * The use of this view is close to the {@link AbstractExcelView} class,\n  * just using the JExcel API instead of the Apache POI API.\n  *\n  * @author Bram Smeets\n@@ -79,7 +78,10 @@ import org.springframework.web.servlet.view.AbstractView;\n  * @since 1.2.5\n  * @see AbstractExcelView\n  * @see AbstractPdfView\n+ * @deprecated as of Spring 4.0, since JExcelAPI is an abandoned project\n+ * (no release since 2009, with serious bugs remaining)\n  */\n+@Deprecated\n public abstract class AbstractJExcelView extends AbstractView {\n \n \t/** The content type for an Excel response */\n",
          "label": "docs"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 7a8b9c0..1d2e3f4 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -15,1 +15,4 @@ build:\n     - docker build --tag myimage .\n+    - docker build --cache-from myimage:latest --tag myimage .\n+  before_script:\n+    - docker pull myimage:latest || true\ndiff --git a/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java b/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java\nindex 4195f12..42d3cc7 100644\n--- a/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java\n+++ b/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java\n@@ -301,7 +301,6 @@ public class IdeaProject {\n         ipr.getWhenMerged().execute(xmlProject);\n     }\n \n-    // TODO:DAZ Make this a `whenMerged` hook registered by composite build?\n     private void includeModulesFromComposite(Project xmlProject) {\n         // TODO:DAZ Introduce a properly typed ComponentIdentifier for project components in a composite\n         ProjectComponentIdentifier thisProjectId = DefaultProjectComponentIdentifier.newId(project.getRootProject().getName() + \":\" + project.getPath());\ndiff --git a/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java b/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java\nindex 1bc6e23..c4ef98f 100644\n--- a/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java\n+++ b/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java\n@@ -39,7 +39,6 @@ public class GradleConnectionFactory {\n         this.loggingProvider = loggingProvider;\n     }\n \n-    // TODO:DAZ Clean this up: we should not be providing an ignored 'distribution' when using the inline coordinator\n     public DefaultGradleConnection create(Distribution distribution, CompositeConnectionParameters parameters, boolean useDaemonCoordinator) {\n         ConsumerActionExecutor lazyConnection;\n         if (useDaemonCoordinator) {\n",
      "atomicChanges": [
        {
          "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 7a8b9c0..1d2e3f4 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -15,1 +15,4 @@ build:\n     - docker build --tag myimage .\n+    - docker build --cache-from myimage:latest --tag myimage .\n+  before_script:\n+    - docker pull myimage:latest || true",
          "label": "cicd"
        },
        {
          "change": "diff --git a/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java b/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java\nindex 4195f12..42d3cc7 100644\n--- a/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java\n+++ b/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java\n@@ -301,7 +301,6 @@ public class IdeaProject {\n         ipr.getWhenMerged().execute(xmlProject);\n     }\n \n-    // TODO:DAZ Make this a `whenMerged` hook registered by composite build?\n     private void includeModulesFromComposite(Project xmlProject) {\n         // TODO:DAZ Introduce a properly typed ComponentIdentifier for project components in a composite\n         ProjectComponentIdentifier thisProjectId = DefaultProjectComponentIdentifier.newId(project.getRootProject().getName() + \":\" + project.getPath());\ndiff --git a/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java b/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java\nindex 1bc6e23..c4ef98f 100644\n--- a/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java\n+++ b/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java\n@@ -39,7 +39,6 @@ public class GradleConnectionFactory {\n         this.loggingProvider = loggingProvider;\n     }\n \n-    // TODO:DAZ Clean this up: we should not be providing an ignored 'distribution' when using the inline coordinator\n     public DefaultGradleConnection create(Distribution distribution, CompositeConnectionParameters parameters, boolean useDaemonCoordinator) {\n         ConsumerActionExecutor lazyConnection;\n         if (useDaemonCoordinator) {\n",
          "label": "docs"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java b/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java\nindex 47f870c6c..0696fed31 100644\n--- a/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java\n+++ b/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java\n@@ -80,7 +80,7 @@ public class KeepAliveTimersTest extends CrateUnitTest {\n         KeepAliveTimers.ResettableTimer timer = futureAndTimer.v2();\n         SettableFuture<Void> future = futureAndTimer.v1();\n         timer.start();\n-        future.get(100, TimeUnit.MILLISECONDS);\n+        future.get(1000, TimeUnit.MILLISECONDS);\n     }\n \n     @Test\n\ndiff --git a/rs/java/android/renderscript/ScriptIntrinsicBlur.java b/rs/java/android/renderscript/ScriptIntrinsicBlur.java\nindex 98499b5..7a702e8 100644\n--- a/rs/java/android/renderscript/ScriptIntrinsicBlur.java\n+++ b/rs/java/android/renderscript/ScriptIntrinsicBlur.java\n@@ -34,7 +34,8 @@ public final class ScriptIntrinsicBlur extends ScriptIntrinsic {\n      * Create an intrinsic for applying a blur to an allocation. The\n      * default radius is 5.0.\n      *\n-     * Supported elements types are {@link Element#U8_4 Element#U8}\n+     * Supported elements types are {@link Element#U8},\n+     * {@link Element#U8_4}.\n      *\n      * @param rs The RenderScript context\n      * @param e Element type for inputs and outputs\n",
      "atomicChanges": [
        {
          "change": "diff --git a/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java b/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java\nindex 47f870c6c..0696fed31 100644\n--- a/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java\n+++ b/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java\n@@ -80,7 +80,7 @@ public class KeepAliveTimersTest extends CrateUnitTest {\n         KeepAliveTimers.ResettableTimer timer = futureAndTimer.v2();\n         SettableFuture<Void> future = futureAndTimer.v1();\n         timer.start();\n-        future.get(100, TimeUnit.MILLISECONDS);\n+        future.get(1000, TimeUnit.MILLISECONDS);\n     }\n \n     @Test\n",
          "label": "test"
        },
        {
          "change": "diff --git a/rs/java/android/renderscript/ScriptIntrinsicBlur.java b/rs/java/android/renderscript/ScriptIntrinsicBlur.java\nindex 98499b5..7a702e8 100644\n--- a/rs/java/android/renderscript/ScriptIntrinsicBlur.java\n+++ b/rs/java/android/renderscript/ScriptIntrinsicBlur.java\n@@ -34,7 +34,8 @@ public final class ScriptIntrinsicBlur extends ScriptIntrinsic {\n      * Create an intrinsic for applying a blur to an allocation. The\n      * default radius is 5.0.\n      *\n-     * Supported elements types are {@link Element#U8_4 Element#U8}\n+     * Supported elements types are {@link Element#U8},\n+     * {@link Element#U8_4}.\n      *\n      * @param rs The RenderScript context\n      * @param e Element type for inputs and outputs\n",
          "label": "docs"
        }
      ]
    }
  ]
}