{
  "metadata": {
    "num_cases": 10,
    "concerns_per_case": 4,
    "types": [
      "test",
      "build",
      "cicd",
      "docs"
    ],
    "ensure_different_types": true,
    "seed": 42,
    "source_dataset": "datasets/candidates/codefuse-hqcm/dataset/test.json"
  },
  "cases": [
    {
      "tangleChange": "diff --git a/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java b/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java\nindex 9942510..23dd5d4 100644\n--- a/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java\n+++ b/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java\n@@ -506,11 +506,19 @@ public class ShowcaseView extends RelativeLayout\n             return this;\n         }\n \n+        /**\n+         * Sets the paint that will draw the text as specified by {@link #setContentText(CharSequence)}\n+         * or {@link #setContentText(int)}\n+         */\n         public Builder setContentTextPaint(TextPaint textPaint) {\n             showcaseView.setContentTextPaint(textPaint);\n             return this;\n         }\n \n+        /**\n+         * Sets the paint that will draw the text as specified by {@link #setContentTitle(CharSequence)}\n+         * or {@link #setContentTitle(int)}\n+         */\n         public Builder setContentTitlePaint(TextPaint textPaint) {\n             showcaseView.setContentTitlePaint(textPaint);\n             return this;\n\ndiff --git a/src/test/java/javaslang/collection/StreamTest.java b/src/test/java/javaslang/collection/StreamTest.java\nindex daf49879..c98464a1 100644\n--- a/src/test/java/javaslang/collection/StreamTest.java\n+++ b/src/test/java/javaslang/collection/StreamTest.java\n@@ -282,6 +282,14 @@ public class StreamTest extends AbstractSeqTest {\n         assertThat(stream.toString()).isEqualTo(\"Stream(1, 2, ?)\");\n     }\n \n+    @Test\n+    public void shouldGroupByAndMapProperly() {\n+        assertThat(Stream.of(1)\n+                .groupBy(n -> n)\n+                .map(longStreamEntry -> longStreamEntry.key)\n+                .toList()).isEqualTo(List.of(1));\n+    }\n+\n     // -- Serializable\n \n     @Test(expected = InvalidObjectException.class)\n\ndiff --git a/shenyu-client/pom.xml b/shenyu-client/pom.xml\nindex 971011e..91c0874 100644\n--- a/shenyu-client/pom.xml\n+++ b/shenyu-client/pom.xml\n@@ -37,6 +37,7 @@\n         <module>shenyu-client-websocket</module>\n         <module>shenyu-client-brpc</module>\n         <module>shenyu-client-api-docs-annotations</module>\n+        <module>shenyu-client-autoconfig</module>\n     </modules>\n \n     <dependencies>\ndiff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 7a8b9c0..1d2e3f4 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -15,1 +15,4 @@ build:\n     - docker build --tag myimage .\n+    - docker build --cache-from myimage:latest --tag myimage .\n+  before_script:\n+    - docker pull myimage:latest || true",
      "atomicChanges": [
        {
          "change": "diff --git a/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java b/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java\nindex 9942510..23dd5d4 100644\n--- a/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java\n+++ b/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java\n@@ -506,11 +506,19 @@ public class ShowcaseView extends RelativeLayout\n             return this;\n         }\n \n+        /**\n+         * Sets the paint that will draw the text as specified by {@link #setContentText(CharSequence)}\n+         * or {@link #setContentText(int)}\n+         */\n         public Builder setContentTextPaint(TextPaint textPaint) {\n             showcaseView.setContentTextPaint(textPaint);\n             return this;\n         }\n \n+        /**\n+         * Sets the paint that will draw the text as specified by {@link #setContentTitle(CharSequence)}\n+         * or {@link #setContentTitle(int)}\n+         */\n         public Builder setContentTitlePaint(TextPaint textPaint) {\n             showcaseView.setContentTitlePaint(textPaint);\n             return this;\n",
          "label": "docs"
        },
        {
          "change": "diff --git a/src/test/java/javaslang/collection/StreamTest.java b/src/test/java/javaslang/collection/StreamTest.java\nindex daf49879..c98464a1 100644\n--- a/src/test/java/javaslang/collection/StreamTest.java\n+++ b/src/test/java/javaslang/collection/StreamTest.java\n@@ -282,6 +282,14 @@ public class StreamTest extends AbstractSeqTest {\n         assertThat(stream.toString()).isEqualTo(\"Stream(1, 2, ?)\");\n     }\n \n+    @Test\n+    public void shouldGroupByAndMapProperly() {\n+        assertThat(Stream.of(1)\n+                .groupBy(n -> n)\n+                .map(longStreamEntry -> longStreamEntry.key)\n+                .toList()).isEqualTo(List.of(1));\n+    }\n+\n     // -- Serializable\n \n     @Test(expected = InvalidObjectException.class)\n",
          "label": "test"
        },
        {
          "change": "diff --git a/shenyu-client/pom.xml b/shenyu-client/pom.xml\nindex 971011e..91c0874 100644\n--- a/shenyu-client/pom.xml\n+++ b/shenyu-client/pom.xml\n@@ -37,6 +37,7 @@\n         <module>shenyu-client-websocket</module>\n         <module>shenyu-client-brpc</module>\n         <module>shenyu-client-api-docs-annotations</module>\n+        <module>shenyu-client-autoconfig</module>\n     </modules>\n \n     <dependencies>",
          "label": "build"
        },
        {
          "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 7a8b9c0..1d2e3f4 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -15,1 +15,4 @@ build:\n     - docker build --tag myimage .\n+    - docker build --cache-from myimage:latest --tag myimage .\n+  before_script:\n+    - docker pull myimage:latest || true",
          "label": "cicd"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/client/trino-cli/pom.xml b/client/trino-cli/pom.xml\nindex 11ded11..212dacf 100644\n--- a/client/trino-cli/pom.xml\n+++ b/client/trino-cli/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n         <relativePath>../../pom.xml</relativePath>\n     </parent>\n \ndiff --git a/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java b/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java\nindex 4bf35938f6..16a7a27445 100644\n--- a/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java\n+++ b/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java\n@@ -25,9 +25,11 @@ import java.net.URL;\n import java.net.URLConnection;\n \n /**\n- * RemoteFileHelper class used by {@link GrailsWrapper} for wrapper\n+ * RemoteFileHelper class used by {@link GrailsWrapper} for wrapper.  This source code borrows\n+ * signicantly from Gradle's org.gradlew.rapper.Download.java.\n  *\n- * @author Jeff Brown\n+ * @author Hans Dockter\n+ * \n  * @since 2.1\n  */\n public class RemoteFileHelper {\n\ndiff --git a/sql/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java b/sql/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\nindex 54df529a3..215e84e0e 100644\n--- a/sql/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\n+++ b/sql/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\n@@ -325,7 +325,7 @@ public class SnapshotRestoreIntegrationTest extends SQLTransportIntegrationTest\n         execute(\"RESTORE SNAPSHOT \" + snapshotName() + \" TABLE my_table_1 with (\" +\n                 \"wait_for_completion=true)\");\n \n-        execute(\"select schema_name || '.' || table_name from information_schema.tables where schema_name='doc'\");\n+        execute(\"select schema_name || '.' || table_name from information_schema.tables where schema_name='doc' order by 1\");\n         assertThat(TestingHelpers.printedTable(response.rows()), is(\"doc.my_table_1\\ndoc.my_table_2\\n\"));\n     }\n \n\ndiff --git a/CICD/pipeline.yml b/CICD/pipeline.yml\nindex 678f637..892a597 100644\n--- a/CICD/pipeline.yml\n+++ b/CICD/pipeline.yml\n@@ -1,13 +1,22 @@\n stages:\n   - build\n   - test\n-  - deploy\n+  - staging\n+  - production\n \n jobs:\n   build:\n     stage: build\n     script: 'make build'\n \n   test:\n     stage: test\n     script: 'make test'\n+    \n+  staging:\n+    stage: staging\n+    script: 'make deploy-staging'\n+  \n+  production:\n+    stage: production\n+    script: 'make deploy-production'",
      "atomicChanges": [
        {
          "change": "diff --git a/client/trino-cli/pom.xml b/client/trino-cli/pom.xml\nindex 11ded11..212dacf 100644\n--- a/client/trino-cli/pom.xml\n+++ b/client/trino-cli/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n         <relativePath>../../pom.xml</relativePath>\n     </parent>\n ",
          "label": "build"
        },
        {
          "change": "diff --git a/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java b/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java\nindex 4bf35938f6..16a7a27445 100644\n--- a/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java\n+++ b/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java\n@@ -25,9 +25,11 @@ import java.net.URL;\n import java.net.URLConnection;\n \n /**\n- * RemoteFileHelper class used by {@link GrailsWrapper} for wrapper\n+ * RemoteFileHelper class used by {@link GrailsWrapper} for wrapper.  This source code borrows\n+ * signicantly from Gradle's org.gradlew.rapper.Download.java.\n  *\n- * @author Jeff Brown\n+ * @author Hans Dockter\n+ * \n  * @since 2.1\n  */\n public class RemoteFileHelper {\n",
          "label": "docs"
        },
        {
          "change": "diff --git a/sql/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java b/sql/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\nindex 54df529a3..215e84e0e 100644\n--- a/sql/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\n+++ b/sql/src/test/java/io/crate/integrationtests/SnapshotRestoreIntegrationTest.java\n@@ -325,7 +325,7 @@ public class SnapshotRestoreIntegrationTest extends SQLTransportIntegrationTest\n         execute(\"RESTORE SNAPSHOT \" + snapshotName() + \" TABLE my_table_1 with (\" +\n                 \"wait_for_completion=true)\");\n \n-        execute(\"select schema_name || '.' || table_name from information_schema.tables where schema_name='doc'\");\n+        execute(\"select schema_name || '.' || table_name from information_schema.tables where schema_name='doc' order by 1\");\n         assertThat(TestingHelpers.printedTable(response.rows()), is(\"doc.my_table_1\\ndoc.my_table_2\\n\"));\n     }\n \n",
          "label": "test"
        },
        {
          "change": "diff --git a/CICD/pipeline.yml b/CICD/pipeline.yml\nindex 678f637..892a597 100644\n--- a/CICD/pipeline.yml\n+++ b/CICD/pipeline.yml\n@@ -1,13 +1,22 @@\n stages:\n   - build\n   - test\n-  - deploy\n+  - staging\n+  - production\n \n jobs:\n   build:\n     stage: build\n     script: 'make build'\n \n   test:\n     stage: test\n     script: 'make test'\n+    \n+  staging:\n+    stage: staging\n+    script: 'make deploy-staging'\n+  \n+  production:\n+    stage: production\n+    script: 'make deploy-production'",
          "label": "cicd"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/build.gradle b/build.gradle\nindex 227a903..37bc2yx 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,7 +1,7 @@\n apply plugin: 'java'\n\n repositories {\n-    mavenCentral()\n+    jcenter()\n }\n\n dependencies {\n-    compile 'org.springframework.boot:spring-boot-starter-web:2.2.2'\n+    compile 'org.springframework.boot:spring-boot-starter-web:2.3.4'\n }\ndiff --git a/hazelcast-hibernate/hazelcast-hibernate4/src/test/java/com/hazelcast/hibernate/HibernateStatisticsTestSupport.java b/hazelcast-hibernate/hazelcast-hibernate4/src/test/java/com/hazelcast/hibernate/HibernateStatisticsTestSupport.java\nindex e155f65af8..646429b14b 100644\n--- a/hazelcast-hibernate/hazelcast-hibernate4/src/test/java/com/hazelcast/hibernate/HibernateStatisticsTestSupport.java\n+++ b/hazelcast-hibernate/hazelcast-hibernate4/src/test/java/com/hazelcast/hibernate/HibernateStatisticsTestSupport.java\n@@ -21,7 +21,6 @@ import com.hazelcast.core.HazelcastInstance;\n import com.hazelcast.hibernate.entity.DummyEntity;\n import com.hazelcast.hibernate.entity.DummyProperty;\n import com.hazelcast.hibernate.instance.HazelcastAccessor;\n-import com.hazelcast.test.annotation.ProblematicTest;\n import org.hibernate.Query;\n import org.hibernate.Session;\n import org.hibernate.SessionFactory;\n@@ -30,9 +29,12 @@ import org.hibernate.stat.Statistics;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n-import org.junit.experimental.categories.Category;\n \n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n@@ -149,7 +151,6 @@ public abstract class HibernateStatisticsTestSupport extends HibernateTestSuppor\n     }\n \n     @Test\n-    @Category(ProblematicTest.class)\n     public void testQuery() {\n         final int entityCount = 10;\n         final int queryCount = 3;\n\ndiff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex d3c24f9..b4a1c68 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -18,11 +22,3 @@ test:\n     - ctest --output-on-failure\n \n-cache:\n-  paths:\n-    - build/\n-  key: ${CI_COMMIT_REF_SLUG}\n-\n-.caches:\n-  - key: ${CI_COMMIT_REF_SLUG}\n-    paths:\n-      - .cache\n+  # Removed old caching strategy as it was not effective\ndiff --git a/app/src/main/java/com/SecUpwN/AIMSICD/adapters/DbeImportCardInflater.java b/app/src/main/java/com/SecUpwN/AIMSICD/adapters/DbeImportCardInflater.java\nindex 545367b..c411dc0 100644\n--- a/app/src/main/java/com/SecUpwN/AIMSICD/adapters/DbeImportCardInflater.java\n+++ b/app/src/main/java/com/SecUpwN/AIMSICD/adapters/DbeImportCardInflater.java\n@@ -17,7 +17,7 @@ import com.SecUpwN.AIMSICD.R;\n  *\n  *  Dependencies:\n  *                  dbe_import_items.xml\n- *                  \n+ *\n  *\n  *  Issues:\n  *          [ ]     LAC and CID seem swapped...hard to debug\n",
      "atomicChanges": [
        {
          "change": "diff --git a/build.gradle b/build.gradle\nindex 227a903..37bc2yx 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,7 +1,7 @@\n apply plugin: 'java'\n\n repositories {\n-    mavenCentral()\n+    jcenter()\n }\n\n dependencies {\n-    compile 'org.springframework.boot:spring-boot-starter-web:2.2.2'\n+    compile 'org.springframework.boot:spring-boot-starter-web:2.3.4'\n }",
          "label": "build"
        },
        {
          "change": "diff --git a/hazelcast-hibernate/hazelcast-hibernate4/src/test/java/com/hazelcast/hibernate/HibernateStatisticsTestSupport.java b/hazelcast-hibernate/hazelcast-hibernate4/src/test/java/com/hazelcast/hibernate/HibernateStatisticsTestSupport.java\nindex e155f65af8..646429b14b 100644\n--- a/hazelcast-hibernate/hazelcast-hibernate4/src/test/java/com/hazelcast/hibernate/HibernateStatisticsTestSupport.java\n+++ b/hazelcast-hibernate/hazelcast-hibernate4/src/test/java/com/hazelcast/hibernate/HibernateStatisticsTestSupport.java\n@@ -21,7 +21,6 @@ import com.hazelcast.core.HazelcastInstance;\n import com.hazelcast.hibernate.entity.DummyEntity;\n import com.hazelcast.hibernate.entity.DummyProperty;\n import com.hazelcast.hibernate.instance.HazelcastAccessor;\n-import com.hazelcast.test.annotation.ProblematicTest;\n import org.hibernate.Query;\n import org.hibernate.Session;\n import org.hibernate.SessionFactory;\n@@ -30,9 +29,12 @@ import org.hibernate.stat.Statistics;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n-import org.junit.experimental.categories.Category;\n \n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n@@ -149,7 +151,6 @@ public abstract class HibernateStatisticsTestSupport extends HibernateTestSuppor\n     }\n \n     @Test\n-    @Category(ProblematicTest.class)\n     public void testQuery() {\n         final int entityCount = 10;\n         final int queryCount = 3;\n",
          "label": "test"
        },
        {
          "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex d3c24f9..b4a1c68 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -18,11 +22,3 @@ test:\n     - ctest --output-on-failure\n \n-cache:\n-  paths:\n-    - build/\n-  key: ${CI_COMMIT_REF_SLUG}\n-\n-.caches:\n-  - key: ${CI_COMMIT_REF_SLUG}\n-    paths:\n-      - .cache\n+  # Removed old caching strategy as it was not effective",
          "label": "cicd"
        },
        {
          "change": "diff --git a/app/src/main/java/com/SecUpwN/AIMSICD/adapters/DbeImportCardInflater.java b/app/src/main/java/com/SecUpwN/AIMSICD/adapters/DbeImportCardInflater.java\nindex 545367b..c411dc0 100644\n--- a/app/src/main/java/com/SecUpwN/AIMSICD/adapters/DbeImportCardInflater.java\n+++ b/app/src/main/java/com/SecUpwN/AIMSICD/adapters/DbeImportCardInflater.java\n@@ -17,7 +17,7 @@ import com.SecUpwN.AIMSICD.R;\n  *\n  *  Dependencies:\n  *                  dbe_import_items.xml\n- *                  \n+ *\n  *\n  *  Issues:\n  *          [ ]     LAC and CID seem swapped...hard to debug\n",
          "label": "docs"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java b/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java\nindex 590a484417..fa829ee8c2 100644\n--- a/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java\n+++ b/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java\n@@ -23,7 +23,8 @@ import org.sonar.api.BatchExtension;\n import org.sonar.api.resources.Resource;\n \n /**\n- * Filter resources to save. For example, ignore a resource if its path matches an exclusion pattern (defined on the project)\n+ * Filter resources to save. For example, ignore a resource if its path matches an exclusion pattern (defined on the project).\n+ * Filters are applied to files, directories and packages only.\n  *\n  * If the method start(), without parameters, exists, then it is executed at startup.\n  *\n\ndiff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 3e5f6a9..2b763ed 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -1,6 +1,6 @@\n image: node:14\n \n-test:\n+tests:\n   script:\n     - npm install\n     - npm run test\n@@ -8,3 +8,20 @@ test:\n   only:\n     - main\n     - merge_requests\n+\n+code_scan:\n+  image: sonarsource/sonar-scanner-cli\n+  script:\n+    - sonar-scanner\n+  only:\n+    - main\n+    - merge_requests\n+    - feature/*\n+\n+security_scan:\n+  image: aquasec/trivy:latest\n+  script:\n+    - trivy filesystem --exit-code 1 --no-progress /\n+  only:\n+    - main\n+    - merge_requests\ndiff --git a/subprojects/internal-performance-testing/src/main/groovy/org/gradle/performance/fixture/TestScenarioSelector.java b/subprojects/internal-performance-testing/src/main/groovy/org/gradle/performance/fixture/TestScenarioSelector.java\nindex 1fc2549..e67cf7f 100644\n--- a/subprojects/internal-performance-testing/src/main/groovy/org/gradle/performance/fixture/TestScenarioSelector.java\n+++ b/subprojects/internal-performance-testing/src/main/groovy/org/gradle/performance/fixture/TestScenarioSelector.java\n@@ -79,7 +79,7 @@ public class TestScenarioSelector {\n             BigDecimal sum = BigDecimal.ZERO;\n             for (MeasuredOperationList operation : lastRun.getScenarios()) {\n                 for (Amount<Duration> duration : operation.getTotalTime()) {\n-                    sum = sum.add(duration.getValue());\n+                    sum = sum.add(duration.toUnits(Duration.MILLI_SECONDS).getValue());\n                 }\n             }\n             return sum;\n\ndiff --git a/pom.xml b/pom.xml\nindex 330f26a..2df976a 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -44,6 +44,7 @@\n         <module>shenyu-dist</module>\n         <module>shenyu-alert</module>\n         <module>shenyu-sdk</module>\n+        <module>shenyu-discovery</module>\n     </modules>\n \n     <licenses>",
      "atomicChanges": [
        {
          "change": "diff --git a/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java b/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java\nindex 590a484417..fa829ee8c2 100644\n--- a/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java\n+++ b/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java\n@@ -23,7 +23,8 @@ import org.sonar.api.BatchExtension;\n import org.sonar.api.resources.Resource;\n \n /**\n- * Filter resources to save. For example, ignore a resource if its path matches an exclusion pattern (defined on the project)\n+ * Filter resources to save. For example, ignore a resource if its path matches an exclusion pattern (defined on the project).\n+ * Filters are applied to files, directories and packages only.\n  *\n  * If the method start(), without parameters, exists, then it is executed at startup.\n  *\n",
          "label": "docs"
        },
        {
          "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 3e5f6a9..2b763ed 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -1,6 +1,6 @@\n image: node:14\n \n-test:\n+tests:\n   script:\n     - npm install\n     - npm run test\n@@ -8,3 +8,20 @@ test:\n   only:\n     - main\n     - merge_requests\n+\n+code_scan:\n+  image: sonarsource/sonar-scanner-cli\n+  script:\n+    - sonar-scanner\n+  only:\n+    - main\n+    - merge_requests\n+    - feature/*\n+\n+security_scan:\n+  image: aquasec/trivy:latest\n+  script:\n+    - trivy filesystem --exit-code 1 --no-progress /\n+  only:\n+    - main\n+    - merge_requests",
          "label": "cicd"
        },
        {
          "change": "diff --git a/subprojects/internal-performance-testing/src/main/groovy/org/gradle/performance/fixture/TestScenarioSelector.java b/subprojects/internal-performance-testing/src/main/groovy/org/gradle/performance/fixture/TestScenarioSelector.java\nindex 1fc2549..e67cf7f 100644\n--- a/subprojects/internal-performance-testing/src/main/groovy/org/gradle/performance/fixture/TestScenarioSelector.java\n+++ b/subprojects/internal-performance-testing/src/main/groovy/org/gradle/performance/fixture/TestScenarioSelector.java\n@@ -79,7 +79,7 @@ public class TestScenarioSelector {\n             BigDecimal sum = BigDecimal.ZERO;\n             for (MeasuredOperationList operation : lastRun.getScenarios()) {\n                 for (Amount<Duration> duration : operation.getTotalTime()) {\n-                    sum = sum.add(duration.getValue());\n+                    sum = sum.add(duration.toUnits(Duration.MILLI_SECONDS).getValue());\n                 }\n             }\n             return sum;\n",
          "label": "test"
        },
        {
          "change": "diff --git a/pom.xml b/pom.xml\nindex 330f26a..2df976a 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -44,6 +44,7 @@\n         <module>shenyu-dist</module>\n         <module>shenyu-alert</module>\n         <module>shenyu-sdk</module>\n+        <module>shenyu-discovery</module>\n     </modules>\n \n     <licenses>",
          "label": "build"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/enterprise/test/java/slavetest/AbstractHaTest.java b/enterprise/test/java/slavetest/AbstractHaTest.java\nindex 2ef20b3..4f8ed27 100644\n--- a/enterprise/test/java/slavetest/AbstractHaTest.java\n+++ b/enterprise/test/java/slavetest/AbstractHaTest.java\n@@ -188,7 +188,6 @@ public abstract class AbstractHaTest\n                 otherKeys.add( key );\n             }\n         }\n-        System.out.println( \"found indexing \" + otherKeys );\n         count = otherKeys.size();\n         \n         for ( String key : node.getPropertyKeys() )\n@@ -339,7 +338,6 @@ public abstract class AbstractHaTest\n         setExpectedResults( 3, 2, 2, 2, 0, 0 );\n         initializeDbs( 1 );\n         executeJob( new CommonJobs.CreateSomeEntitiesJob(), 0 );\n-        System.out.println( \"Test done\" );\n     }\n     \n     @Test\n\ndiff --git a/data/src/main/java/com/linkedin/data/schema/validator/DataSchemaAnnotationValidator.java b/data/src/main/java/com/linkedin/data/schema/validator/DataSchemaAnnotationValidator.java\nindex c0a5f168..df6fff67 100644\n--- a/data/src/main/java/com/linkedin/data/schema/validator/DataSchemaAnnotationValidator.java\n+++ b/data/src/main/java/com/linkedin/data/schema/validator/DataSchemaAnnotationValidator.java\n@@ -259,6 +259,9 @@ public class DataSchemaAnnotationValidator implements Validator\n    * This method causes the \"validate\" properties of the schema and referenced schemas to\n    * be parsed and appropriate instances of {@link Validator}'s to be constructed.\n    *\n+   * This method does not throw an exception if there is an initialization error.\n+   * The client should check the return value for initialization errors.\n+   *\n    * @param schema to be parsed to compute the {@link Validator}'s that have to be created.\n    * @param classMap provides the map of the keys to {@link Validator}s that is looked up first\n    *                 before looking for classes with names derived from the key.\n\ndiff --git a/jenkins/pipeline/stages/deploy.groovy b/jenkins/pipeline/stages/deploy.groovy\nindex e6d5af1..b2437c8 100644\n--- a/jenkins/pipeline/stages/deploy.groovy\n+++ b/jenkins/pipeline/stages/deploy.groovy\n@@ -1,8 +1,9 @@\n def call(body) {\n-    def config = body.getConfig()\n+    def config = getConfigFromGit()\n     def environment = body.getEnvironment()\n+    def appVersion = getAppVersionFromGit()\n\n-    sh(\"kubectl set image deployment/${config.applicationName} ${config.applicationName}=${config.imageRepository}:${config.imageTag} --namespace=${environment}\")\n+    sh(\"kubectl set image deployment/${config.applicationName} ${config.applicationName}=${config.imageRepository}:${appVersion} --namespace=${environment}\")\n\n     body.doLast()\n }\ndiff --git a/server/sonar-webserver-webapi/build.gradle b/server/sonar-webserver-webapi/build.gradle\nindex a4e223b..2ae902d 100644\n--- a/server/sonar-webserver-webapi/build.gradle\n+++ b/server/sonar-webserver-webapi/build.gradle\n@@ -39,7 +39,7 @@ dependencies {\n   testImplementation 'javax.servlet:javax.servlet-api'\n   testImplementation 'org.mockito:mockito-core'\n   testImplementation 'org.sonarsource.api.plugin:sonar-plugin-api-test-fixtures'\n-  testImplementation 'org.springframework:spring-test:${springVersion}'\n+  testImplementation 'org.springframework:spring-test'\n   testImplementation testFixtures(project(':server:sonar-server-common'))\n   testImplementation testFixtures(project(':server:sonar-webserver-auth'))\n   testImplementation testFixtures(project(':server:sonar-webserver-es'))",
      "atomicChanges": [
        {
          "change": "diff --git a/enterprise/test/java/slavetest/AbstractHaTest.java b/enterprise/test/java/slavetest/AbstractHaTest.java\nindex 2ef20b3..4f8ed27 100644\n--- a/enterprise/test/java/slavetest/AbstractHaTest.java\n+++ b/enterprise/test/java/slavetest/AbstractHaTest.java\n@@ -188,7 +188,6 @@ public abstract class AbstractHaTest\n                 otherKeys.add( key );\n             }\n         }\n-        System.out.println( \"found indexing \" + otherKeys );\n         count = otherKeys.size();\n         \n         for ( String key : node.getPropertyKeys() )\n@@ -339,7 +338,6 @@ public abstract class AbstractHaTest\n         setExpectedResults( 3, 2, 2, 2, 0, 0 );\n         initializeDbs( 1 );\n         executeJob( new CommonJobs.CreateSomeEntitiesJob(), 0 );\n-        System.out.println( \"Test done\" );\n     }\n     \n     @Test\n",
          "label": "test"
        },
        {
          "change": "diff --git a/data/src/main/java/com/linkedin/data/schema/validator/DataSchemaAnnotationValidator.java b/data/src/main/java/com/linkedin/data/schema/validator/DataSchemaAnnotationValidator.java\nindex c0a5f168..df6fff67 100644\n--- a/data/src/main/java/com/linkedin/data/schema/validator/DataSchemaAnnotationValidator.java\n+++ b/data/src/main/java/com/linkedin/data/schema/validator/DataSchemaAnnotationValidator.java\n@@ -259,6 +259,9 @@ public class DataSchemaAnnotationValidator implements Validator\n    * This method causes the \"validate\" properties of the schema and referenced schemas to\n    * be parsed and appropriate instances of {@link Validator}'s to be constructed.\n    *\n+   * This method does not throw an exception if there is an initialization error.\n+   * The client should check the return value for initialization errors.\n+   *\n    * @param schema to be parsed to compute the {@link Validator}'s that have to be created.\n    * @param classMap provides the map of the keys to {@link Validator}s that is looked up first\n    *                 before looking for classes with names derived from the key.\n",
          "label": "docs"
        },
        {
          "change": "diff --git a/jenkins/pipeline/stages/deploy.groovy b/jenkins/pipeline/stages/deploy.groovy\nindex e6d5af1..b2437c8 100644\n--- a/jenkins/pipeline/stages/deploy.groovy\n+++ b/jenkins/pipeline/stages/deploy.groovy\n@@ -1,8 +1,9 @@\n def call(body) {\n-    def config = body.getConfig()\n+    def config = getConfigFromGit()\n     def environment = body.getEnvironment()\n+    def appVersion = getAppVersionFromGit()\n\n-    sh(\"kubectl set image deployment/${config.applicationName} ${config.applicationName}=${config.imageRepository}:${config.imageTag} --namespace=${environment}\")\n+    sh(\"kubectl set image deployment/${config.applicationName} ${config.applicationName}=${config.imageRepository}:${appVersion} --namespace=${environment}\")\n\n     body.doLast()\n }",
          "label": "cicd"
        },
        {
          "change": "diff --git a/server/sonar-webserver-webapi/build.gradle b/server/sonar-webserver-webapi/build.gradle\nindex a4e223b..2ae902d 100644\n--- a/server/sonar-webserver-webapi/build.gradle\n+++ b/server/sonar-webserver-webapi/build.gradle\n@@ -39,7 +39,7 @@ dependencies {\n   testImplementation 'javax.servlet:javax.servlet-api'\n   testImplementation 'org.mockito:mockito-core'\n   testImplementation 'org.sonarsource.api.plugin:sonar-plugin-api-test-fixtures'\n-  testImplementation 'org.springframework:spring-test:${springVersion}'\n+  testImplementation 'org.springframework:spring-test'\n   testImplementation testFixtures(project(':server:sonar-server-common'))\n   testImplementation testFixtures(project(':server:sonar-webserver-auth'))\n   testImplementation testFixtures(project(':server:sonar-webserver-es'))",
          "label": "build"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/jenkins/Jenkinsfile b/jenkins/Jenkinsfile\nindex 0a1b2c3..4d5e6f7 100644\n--- a/jenkins/Jenkinsfile\n+++ b/jenkins/Jenkinsfile\n@@ -16,8 +16,12 @@ node {\n    stage('Checkout') {\n       checkout scm\n    }\n\n-   stage('Build') {\n+   stage('Pre-Build') {\n+      sh 'npm ci'\n+   }\n+\n+   stage('Build & Test') {\n       sh 'npx ng build --prod'\n       sh 'npx ng test'\n    }\n@@ -25,8 +28,12 @@ node {\n    stage('Deploy to Staging') {\n       sh 'sh ./scripts/staging-deploy.sh'\n    }\n\n-   stage('Deploy to Production') {\n+   stage('Smoke Tests') {\n+      sh 'npm run e2e'\n    }\n+\n+   stage('Deploy to Production') {\n        when { branch 'master' }\n+       sh 'sh ./scripts/production-deploy.sh'\n     }\n }\ndiff --git a/lib/trino-plugin-toolkit/pom.xml b/lib/trino-plugin-toolkit/pom.xml\nindex 169437f..f404889 100644\n--- a/lib/trino-plugin-toolkit/pom.xml\n+++ b/lib/trino-plugin-toolkit/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n         <relativePath>../../pom.xml</relativePath>\n     </parent>\n \ndiff --git a/picasso/src/test/java/com/squareup/picasso/DispatcherTest.java b/picasso/src/test/java/com/squareup/picasso/DispatcherTest.java\nindex c9643ed..4dbefbd 100644\n--- a/picasso/src/test/java/com/squareup/picasso/DispatcherTest.java\n+++ b/picasso/src/test/java/com/squareup/picasso/DispatcherTest.java\n@@ -68,6 +68,11 @@ public class DispatcherTest {\n     verify(service).shutdown();\n   }\n \n+  @Test public void shutdownUnregistersReceiver() throws Exception {\n+    dispatcher.shutdown();\n+    verify(context).unregisterReceiver(dispatcher.receiver);\n+  }\n+\n   @Test public void performSubmitWithNewRequestQueuesHunter() throws Exception {\n     Action action = TestUtils.mockAction(URI_KEY_1, URI_1);\n     dispatcher.performSubmit(action);\n\ndiff --git a/java/org/apache/catalina/servlets/CGIServlet.java b/java/org/apache/catalina/servlets/CGIServlet.java\nindex 0a01f6620..1669f3471 100644\n--- a/java/org/apache/catalina/servlets/CGIServlet.java\n+++ b/java/org/apache/catalina/servlets/CGIServlet.java\n@@ -576,7 +576,6 @@ public final class CGIServlet extends HttpServlet {\n                                           cgiEnv.getEnvironment(),\n                                           cgiEnv.getWorkingDirectory(),\n                                           cgiEnv.getParameters());\n-            // If POST, we need to cgi.setInput\n             // REMIND: how does this interact with Servlet API 2.3's Filters?!\n             if (\"POST\".equals(req.getMethod())) {\n                 cgi.setInput(req.getInputStream());\n",
      "atomicChanges": [
        {
          "change": "diff --git a/jenkins/Jenkinsfile b/jenkins/Jenkinsfile\nindex 0a1b2c3..4d5e6f7 100644\n--- a/jenkins/Jenkinsfile\n+++ b/jenkins/Jenkinsfile\n@@ -16,8 +16,12 @@ node {\n    stage('Checkout') {\n       checkout scm\n    }\n\n-   stage('Build') {\n+   stage('Pre-Build') {\n+      sh 'npm ci'\n+   }\n+\n+   stage('Build & Test') {\n       sh 'npx ng build --prod'\n       sh 'npx ng test'\n    }\n@@ -25,8 +28,12 @@ node {\n    stage('Deploy to Staging') {\n       sh 'sh ./scripts/staging-deploy.sh'\n    }\n\n-   stage('Deploy to Production') {\n+   stage('Smoke Tests') {\n+      sh 'npm run e2e'\n    }\n+\n+   stage('Deploy to Production') {\n        when { branch 'master' }\n+       sh 'sh ./scripts/production-deploy.sh'\n     }\n }",
          "label": "cicd"
        },
        {
          "change": "diff --git a/lib/trino-plugin-toolkit/pom.xml b/lib/trino-plugin-toolkit/pom.xml\nindex 169437f..f404889 100644\n--- a/lib/trino-plugin-toolkit/pom.xml\n+++ b/lib/trino-plugin-toolkit/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n         <relativePath>../../pom.xml</relativePath>\n     </parent>\n ",
          "label": "build"
        },
        {
          "change": "diff --git a/picasso/src/test/java/com/squareup/picasso/DispatcherTest.java b/picasso/src/test/java/com/squareup/picasso/DispatcherTest.java\nindex c9643ed..4dbefbd 100644\n--- a/picasso/src/test/java/com/squareup/picasso/DispatcherTest.java\n+++ b/picasso/src/test/java/com/squareup/picasso/DispatcherTest.java\n@@ -68,6 +68,11 @@ public class DispatcherTest {\n     verify(service).shutdown();\n   }\n \n+  @Test public void shutdownUnregistersReceiver() throws Exception {\n+    dispatcher.shutdown();\n+    verify(context).unregisterReceiver(dispatcher.receiver);\n+  }\n+\n   @Test public void performSubmitWithNewRequestQueuesHunter() throws Exception {\n     Action action = TestUtils.mockAction(URI_KEY_1, URI_1);\n     dispatcher.performSubmit(action);\n",
          "label": "test"
        },
        {
          "change": "diff --git a/java/org/apache/catalina/servlets/CGIServlet.java b/java/org/apache/catalina/servlets/CGIServlet.java\nindex 0a01f6620..1669f3471 100644\n--- a/java/org/apache/catalina/servlets/CGIServlet.java\n+++ b/java/org/apache/catalina/servlets/CGIServlet.java\n@@ -576,7 +576,6 @@ public final class CGIServlet extends HttpServlet {\n                                           cgiEnv.getEnvironment(),\n                                           cgiEnv.getWorkingDirectory(),\n                                           cgiEnv.getParameters());\n-            // If POST, we need to cgi.setInput\n             // REMIND: how does this interact with Servlet API 2.3's Filters?!\n             if (\"POST\".equals(req.getMethod())) {\n                 cgi.setInput(req.getInputStream());\n",
          "label": "docs"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 2b3e4f5..6h7j8k9 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -10,29 +10,13 @@ cache:\n stages:\n   - build\n   - test\n-  - static_analysis\n-  - performance_test\n   - deploy\n\n build:\n   script:\n     - echo \"Building the project...\"\n     - build-command\n\n-# Removing static code analysis stage\n-static_analysis:\n-  stage: static_analysis\n-  script:\n-    - echo \"Performing static code analysis...\"\n-    - static-analysis-command\n-\n-# Removing performance testing stage\n-performance_test:\n-  stage: performance_test\n-  script:\n-    - echo \"Running performance tests...\"\n-    - performance-test-command\n-\n test:\n   stage: test\n   script:\ndiff --git a/build.gradle b/build.gradle\nindex 8ee4d6c..564123e 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -3,7 +3,9 @@ plugins {\n     id 'java'\n }\n \n-dependencies {\n+// Adding new libraries\n+dependencies {\n+    compile 'com.google.guava:guava:23.0'\n     testCompile group: 'junit', name: 'junit', version: '4.13.1'\n     compile 'org.projectlombok:lombok:1.18.12'\n     annotationProcessor 'org.projectlombok:lombok:1.18.12'\n@@ -14,6 +16,6 @@ dependencies {\n }\n \n java {\n-    sourceCompatibility = JavaVersion.VERSION_1_8\n+    sourceCompatibility = JavaVersion.VERSION_1_11\n     targetCompatibility = JavaVersion.VERSION_1_8\n }\ndiff --git a/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java\nindex 38bf43e..b916f5e 100644\n--- a/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java\n+++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java\n@@ -882,6 +882,13 @@ public class IndexShard extends AbstractIndexShardComponent {\n         }\n         recoveryState.setStage(RecoveryState.Stage.TRANSLOG);\n         final EngineConfig.OpenMode openMode;\n+        /* by default we recover and index and replay the translog but if the index\n+         * doesn't exist we create everything from the scratch. Yet, if the index\n+         * doesn't exist we don't need to worry about the skipTranslogRecovery since\n+         * there is no translog on a non-existing index.\n+         * The skipTranslogRecovery invariant is used if we do remote recovery since\n+         * there the translog isn't local but on the remote host, hence we can skip it.\n+         */\n         if (indexExists == false) {\n             openMode = EngineConfig.OpenMode.CREATE_INDEX_AND_TRANSLOG;\n         } else if (skipTranslogRecovery) {\n\ndiff --git a/src/test/java/org/HdrHistogram/HistogramTest.java b/src/test/java/org/HdrHistogram/HistogramTest.java\nindex 76548c5..cf2f82f 100644\n--- a/src/test/java/org/HdrHistogram/HistogramTest.java\n+++ b/src/test/java/org/HdrHistogram/HistogramTest.java\n@@ -481,6 +481,9 @@ public class HistogramTest {\n         Histogram concurrentHistogram = new ConcurrentHistogram(highestTrackableValue, 3);\n         testAbstractSerialization(concurrentHistogram);\n \n+        Histogram synchronizedHistogram = new SynchronizedHistogram(highestTrackableValue, 3);\n+        testAbstractSerialization(synchronizedHistogram);\n+\n         IntCountsHistogram intCountsHistogram = new IntCountsHistogram(highestTrackableValue, 3);\n         testAbstractSerialization(intCountsHistogram);\n \n@@ -496,6 +499,9 @@ public class HistogramTest {\n         concurrentHistogram = new ConcurrentHistogram(highestTrackableValue, 2);\n         testAbstractSerialization(concurrentHistogram);\n \n+        synchronizedHistogram = new SynchronizedHistogram(highestTrackableValue, 2);\n+        testAbstractSerialization(synchronizedHistogram);\n+\n         intCountsHistogram = new IntCountsHistogram(highestTrackableValue, 2);\n         testAbstractSerialization(intCountsHistogram);\n \n",
      "atomicChanges": [
        {
          "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 2b3e4f5..6h7j8k9 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -10,29 +10,13 @@ cache:\n stages:\n   - build\n   - test\n-  - static_analysis\n-  - performance_test\n   - deploy\n\n build:\n   script:\n     - echo \"Building the project...\"\n     - build-command\n\n-# Removing static code analysis stage\n-static_analysis:\n-  stage: static_analysis\n-  script:\n-    - echo \"Performing static code analysis...\"\n-    - static-analysis-command\n-\n-# Removing performance testing stage\n-performance_test:\n-  stage: performance_test\n-  script:\n-    - echo \"Running performance tests...\"\n-    - performance-test-command\n-\n test:\n   stage: test\n   script:",
          "label": "cicd"
        },
        {
          "change": "diff --git a/build.gradle b/build.gradle\nindex 8ee4d6c..564123e 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -3,7 +3,9 @@ plugins {\n     id 'java'\n }\n \n-dependencies {\n+// Adding new libraries\n+dependencies {\n+    compile 'com.google.guava:guava:23.0'\n     testCompile group: 'junit', name: 'junit', version: '4.13.1'\n     compile 'org.projectlombok:lombok:1.18.12'\n     annotationProcessor 'org.projectlombok:lombok:1.18.12'\n@@ -14,6 +16,6 @@ dependencies {\n }\n \n java {\n-    sourceCompatibility = JavaVersion.VERSION_1_8\n+    sourceCompatibility = JavaVersion.VERSION_1_11\n     targetCompatibility = JavaVersion.VERSION_1_8\n }",
          "label": "build"
        },
        {
          "change": "diff --git a/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java\nindex 38bf43e..b916f5e 100644\n--- a/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java\n+++ b/core/src/main/java/org/elasticsearch/index/shard/IndexShard.java\n@@ -882,6 +882,13 @@ public class IndexShard extends AbstractIndexShardComponent {\n         }\n         recoveryState.setStage(RecoveryState.Stage.TRANSLOG);\n         final EngineConfig.OpenMode openMode;\n+        /* by default we recover and index and replay the translog but if the index\n+         * doesn't exist we create everything from the scratch. Yet, if the index\n+         * doesn't exist we don't need to worry about the skipTranslogRecovery since\n+         * there is no translog on a non-existing index.\n+         * The skipTranslogRecovery invariant is used if we do remote recovery since\n+         * there the translog isn't local but on the remote host, hence we can skip it.\n+         */\n         if (indexExists == false) {\n             openMode = EngineConfig.OpenMode.CREATE_INDEX_AND_TRANSLOG;\n         } else if (skipTranslogRecovery) {\n",
          "label": "docs"
        },
        {
          "change": "diff --git a/src/test/java/org/HdrHistogram/HistogramTest.java b/src/test/java/org/HdrHistogram/HistogramTest.java\nindex 76548c5..cf2f82f 100644\n--- a/src/test/java/org/HdrHistogram/HistogramTest.java\n+++ b/src/test/java/org/HdrHistogram/HistogramTest.java\n@@ -481,6 +481,9 @@ public class HistogramTest {\n         Histogram concurrentHistogram = new ConcurrentHistogram(highestTrackableValue, 3);\n         testAbstractSerialization(concurrentHistogram);\n \n+        Histogram synchronizedHistogram = new SynchronizedHistogram(highestTrackableValue, 3);\n+        testAbstractSerialization(synchronizedHistogram);\n+\n         IntCountsHistogram intCountsHistogram = new IntCountsHistogram(highestTrackableValue, 3);\n         testAbstractSerialization(intCountsHistogram);\n \n@@ -496,6 +499,9 @@ public class HistogramTest {\n         concurrentHistogram = new ConcurrentHistogram(highestTrackableValue, 2);\n         testAbstractSerialization(concurrentHistogram);\n \n+        synchronizedHistogram = new SynchronizedHistogram(highestTrackableValue, 2);\n+        testAbstractSerialization(synchronizedHistogram);\n+\n         intCountsHistogram = new IntCountsHistogram(highestTrackableValue, 2);\n         testAbstractSerialization(intCountsHistogram);\n \n",
          "label": "test"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/Jenkinsfile b/Jenkinsfile\nindex c3d4e5f..6a7b8c9 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -15,20 +15,6 @@ pipeline {\n             script {\n                 // Your build commands go here\n             }\n         }\n-        stage('Code Coverage') {\n-            when {\n-                anyOf {\n-                    branch 'main'\n-                    branch 'development'\n-                }\n-            }\n-            steps {\n-                script {\n-                    // Commands to generate code coverage report\n-                    sh 'generate-coverage-report.sh'\n-                }\n-            }\n-        }\n         stage('Deploy') {\n             when {\n                 branch 'main'\n             }\ndiff --git a/subprojects/maven/src/main/groovy/org/gradle/api/publish/maven/MavenPublication.java b/subprojects/maven/src/main/groovy/org/gradle/api/publish/maven/MavenPublication.java\nindex 16a289e..a3363fe 100644\n--- a/subprojects/maven/src/main/groovy/org/gradle/api/publish/maven/MavenPublication.java\n+++ b/subprojects/maven/src/main/groovy/org/gradle/api/publish/maven/MavenPublication.java\n@@ -61,15 +61,14 @@ import org.gradle.internal.HasInternalProtocol;\n  *\n  * task sourceJar(type: Jar) {\n  *   from sourceSets.main.allJava\n+ *   classifier \"sources\"\n  * }\n  *\n  * publishing {\n  *   publications {\n  *     myPublication(MavenPublication) {\n  *       from components.java\n- *       artifact(sourceJar) {\n- *         classifier \"sources\"\n- *       }\n+ *       artifact sourceJar\n  *       pom.withXml {\n  *         asNode().appendNode('description', 'A demonstration of Maven POM customization')\n  *       }\n\ndiff --git a/components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetTest.java b/components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetTest.java\nindex 43e4c2fa43..19dd78fcb6 100644\n--- a/components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetTest.java\n+++ b/components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetTest.java\n@@ -29,7 +29,7 @@ import org.apache.camel.component.mock.MockEndpoint;\n  * @version $Revision$\n  */\n public class HttpGetTest extends ContextTestSupport {\n-    protected String expectedText = \"<html\";\n+    protected String expectedText = \"activemq\";\n \n     public void testHttpGet() throws Exception {\n         MockEndpoint mockEndpoint = resolveMandatoryEndpoint(\"mock:results\", MockEndpoint.class);\n\ndiff --git a/build.gradle b/build.gradle\nindex e84e462..0f68828 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -15,14 +15,14 @@\n\n-sourceCompatibility = 1.5\n+sourceCompatibility = 1.8\n version = '1.0'\n jar {\n     manifest {\n         attributes 'Implementation-Title': 'Gradle Quickstart',\n                    'Implementation-Version': version\n     }\n }\n \n-dependencies {\n+dependencies { \n     testCompile group: 'junit', name: 'junit', version: '4.12'\n-    compile group: 'com.google.guava', name: 'guava', version: '18.0'\n+    compile group: 'com.google.guava', name: 'guava', version: '28.2-jre'\n }",
      "atomicChanges": [
        {
          "change": "diff --git a/Jenkinsfile b/Jenkinsfile\nindex c3d4e5f..6a7b8c9 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -15,20 +15,6 @@ pipeline {\n             script {\n                 // Your build commands go here\n             }\n         }\n-        stage('Code Coverage') {\n-            when {\n-                anyOf {\n-                    branch 'main'\n-                    branch 'development'\n-                }\n-            }\n-            steps {\n-                script {\n-                    // Commands to generate code coverage report\n-                    sh 'generate-coverage-report.sh'\n-                }\n-            }\n-        }\n         stage('Deploy') {\n             when {\n                 branch 'main'\n             }",
          "label": "cicd"
        },
        {
          "change": "diff --git a/subprojects/maven/src/main/groovy/org/gradle/api/publish/maven/MavenPublication.java b/subprojects/maven/src/main/groovy/org/gradle/api/publish/maven/MavenPublication.java\nindex 16a289e..a3363fe 100644\n--- a/subprojects/maven/src/main/groovy/org/gradle/api/publish/maven/MavenPublication.java\n+++ b/subprojects/maven/src/main/groovy/org/gradle/api/publish/maven/MavenPublication.java\n@@ -61,15 +61,14 @@ import org.gradle.internal.HasInternalProtocol;\n  *\n  * task sourceJar(type: Jar) {\n  *   from sourceSets.main.allJava\n+ *   classifier \"sources\"\n  * }\n  *\n  * publishing {\n  *   publications {\n  *     myPublication(MavenPublication) {\n  *       from components.java\n- *       artifact(sourceJar) {\n- *         classifier \"sources\"\n- *       }\n+ *       artifact sourceJar\n  *       pom.withXml {\n  *         asNode().appendNode('description', 'A demonstration of Maven POM customization')\n  *       }\n",
          "label": "docs"
        },
        {
          "change": "diff --git a/components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetTest.java b/components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetTest.java\nindex 43e4c2fa43..19dd78fcb6 100644\n--- a/components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetTest.java\n+++ b/components/camel-http/src/test/java/org/apache/camel/component/http/HttpGetTest.java\n@@ -29,7 +29,7 @@ import org.apache.camel.component.mock.MockEndpoint;\n  * @version $Revision$\n  */\n public class HttpGetTest extends ContextTestSupport {\n-    protected String expectedText = \"<html\";\n+    protected String expectedText = \"activemq\";\n \n     public void testHttpGet() throws Exception {\n         MockEndpoint mockEndpoint = resolveMandatoryEndpoint(\"mock:results\", MockEndpoint.class);\n",
          "label": "test"
        },
        {
          "change": "diff --git a/build.gradle b/build.gradle\nindex e84e462..0f68828 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -15,14 +15,14 @@\n\n-sourceCompatibility = 1.5\n+sourceCompatibility = 1.8\n version = '1.0'\n jar {\n     manifest {\n         attributes 'Implementation-Title': 'Gradle Quickstart',\n                    'Implementation-Version': version\n     }\n }\n \n-dependencies {\n+dependencies { \n     testCompile group: 'junit', name: 'junit', version: '4.12'\n-    compile group: 'com.google.guava', name: 'guava', version: '18.0'\n+    compile group: 'com.google.guava', name: 'guava', version: '28.2-jre'\n }",
          "label": "build"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/h2o-core/src/test/java/water/fvec/WordCountBigTest.java b/h2o-core/src/test/java/water/fvec/WordCountBigTest.java\nindex cc15bb5b8..c23cf28ed 100644\n--- a/h2o-core/src/test/java/water/fvec/WordCountBigTest.java\n+++ b/h2o-core/src/test/java/water/fvec/WordCountBigTest.java\n@@ -14,4 +14,8 @@ public class WordCountBigTest extends WordCountTest {\n     if( file==null ) throw new FileNotFoundException(best);\n     doWordCount(file);\n   }\n+\n+  @Test public void testWordCount() throws IOException {\n+    // Do nothing; in particular, don't run inherited testWordCount again.\n+  }\n }\n\ndiff --git a/Jenkinsfile b/Jenkinsfile\nindex 68fabd8..c5320e2 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -2,9 +2,14 @@ pipeline {\n     agent any\n     stages {\n         stage('Build') {\n-            steps {\n-                echo 'Building...'\n-                sh 'make'\n+            steps {    \n+                try {\n+                    echo 'Building...'\n+                    sh 'make'\n+                } catch (Exception e) {\n+                    currentBuild.result = 'FAILURE'\n+                    throw e\n+                }    \n             }\n         }\n         stage('Test') {\n@@ -18,8 +20,13 @@ pipeline {\n         }\n         stage('Deploy') {\n             when {\n-                branch 'master'\n+                allOf {\n+                    branch 'master'\n+                    not {\n+                        buildingTag()\n+                    }\n+                }\n             }\n             steps {\n-                echo 'Deploying...'\n+                echo 'Deploying to Prod...'\n                sh './deploy.sh'\n             }\n         }\n     }\ndiff --git a/core/java/android/os/ParcelFileDescriptor.java b/core/java/android/os/ParcelFileDescriptor.java\nindex 579971d..d4cadd3 100644\n--- a/core/java/android/os/ParcelFileDescriptor.java\n+++ b/core/java/android/os/ParcelFileDescriptor.java\n@@ -821,6 +821,8 @@ public class ParcelFileDescriptor implements Parcelable, Closeable {\n      */\n     @Override\n     public void writeToParcel(Parcel out, int flags) {\n+        // WARNING: This must stay in sync with Parcel::readParcelFileDescriptor()\n+        // in frameworks/native/libs/binder/Parcel.cpp\n         if (mWrapped != null) {\n             mWrapped.writeToParcel(out, flags);\n         } else {\n@@ -845,6 +847,8 @@ public class ParcelFileDescriptor implements Parcelable, Closeable {\n             = new Parcelable.Creator<ParcelFileDescriptor>() {\n         @Override\n         public ParcelFileDescriptor createFromParcel(Parcel in) {\n+            // WARNING: This must stay in sync with Parcel::writeParcelFileDescriptor()\n+            // in frameworks/native/libs/binder/Parcel.cpp\n             final FileDescriptor fd = in.readRawFileDescriptor();\n             FileDescriptor commChannel = null;\n             if (in.readInt() != 0) {\n\ndiff --git a/Build.gradle b/Build.gradle\nindex 7e640d3..4644dd5 100644\n--- a/Build.gradle\n+++ b/Build.gradle\n@@ -4,9 +4,9 @@ apply plugin: 'eclipse'\n apply plugin: 'org.springframework.boot'\n \n dependencies {\n-    compile('org.springframework.boot:spring-boot-starter-data-jpa')\n-    compile('org.springframework.boot:spring-boot-starter-web')\n-    runtime('com.h2database:h2')\n+    compile('org.springframework.boot:spring-boot-starter-data-jpa:2.5.2')\n+    compile('org.springframework.boot:spring-boot-starter-web:2.5.2')\n+    runtime('com.h2database:h2:1.4.200')\n     testCompile('org.springframework.boot:spring-boot-starter-test')\n }\n \n@@ -14,6 +14,9 @@ bootJar {\n }\n \n bootRun {\n+    systemProperties = System.properties\n+    systemProperties['spring.profiles.active'] = 'dev'\n+    jvmArgs('-Xdebug','-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005')\n     main = project.findProperty('mainClassName')\n }\n \n@@ -23,7 +26,7 @@ springBoot {\n }\n \n jar {\n-    manifest {\n+    manifest {\n         attributes 'Implementation-Title': 'Grails', 'Implementation-Version': version\n     }\n }\n@@ -31,4 +34,4 @@ jar {\n \n task wrapper(type: Wrapper) {\n     gradleVersion = '7.0'\n-}\n\\ No newline at end of file\n+}\n",
      "atomicChanges": [
        {
          "change": "diff --git a/h2o-core/src/test/java/water/fvec/WordCountBigTest.java b/h2o-core/src/test/java/water/fvec/WordCountBigTest.java\nindex cc15bb5b8..c23cf28ed 100644\n--- a/h2o-core/src/test/java/water/fvec/WordCountBigTest.java\n+++ b/h2o-core/src/test/java/water/fvec/WordCountBigTest.java\n@@ -14,4 +14,8 @@ public class WordCountBigTest extends WordCountTest {\n     if( file==null ) throw new FileNotFoundException(best);\n     doWordCount(file);\n   }\n+\n+  @Test public void testWordCount() throws IOException {\n+    // Do nothing; in particular, don't run inherited testWordCount again.\n+  }\n }\n",
          "label": "test"
        },
        {
          "change": "diff --git a/Jenkinsfile b/Jenkinsfile\nindex 68fabd8..c5320e2 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -2,9 +2,14 @@ pipeline {\n     agent any\n     stages {\n         stage('Build') {\n-            steps {\n-                echo 'Building...'\n-                sh 'make'\n+            steps {    \n+                try {\n+                    echo 'Building...'\n+                    sh 'make'\n+                } catch (Exception e) {\n+                    currentBuild.result = 'FAILURE'\n+                    throw e\n+                }    \n             }\n         }\n         stage('Test') {\n@@ -18,8 +20,13 @@ pipeline {\n         }\n         stage('Deploy') {\n             when {\n-                branch 'master'\n+                allOf {\n+                    branch 'master'\n+                    not {\n+                        buildingTag()\n+                    }\n+                }\n             }\n             steps {\n-                echo 'Deploying...'\n+                echo 'Deploying to Prod...'\n                sh './deploy.sh'\n             }\n         }\n     }",
          "label": "cicd"
        },
        {
          "change": "diff --git a/core/java/android/os/ParcelFileDescriptor.java b/core/java/android/os/ParcelFileDescriptor.java\nindex 579971d..d4cadd3 100644\n--- a/core/java/android/os/ParcelFileDescriptor.java\n+++ b/core/java/android/os/ParcelFileDescriptor.java\n@@ -821,6 +821,8 @@ public class ParcelFileDescriptor implements Parcelable, Closeable {\n      */\n     @Override\n     public void writeToParcel(Parcel out, int flags) {\n+        // WARNING: This must stay in sync with Parcel::readParcelFileDescriptor()\n+        // in frameworks/native/libs/binder/Parcel.cpp\n         if (mWrapped != null) {\n             mWrapped.writeToParcel(out, flags);\n         } else {\n@@ -845,6 +847,8 @@ public class ParcelFileDescriptor implements Parcelable, Closeable {\n             = new Parcelable.Creator<ParcelFileDescriptor>() {\n         @Override\n         public ParcelFileDescriptor createFromParcel(Parcel in) {\n+            // WARNING: This must stay in sync with Parcel::writeParcelFileDescriptor()\n+            // in frameworks/native/libs/binder/Parcel.cpp\n             final FileDescriptor fd = in.readRawFileDescriptor();\n             FileDescriptor commChannel = null;\n             if (in.readInt() != 0) {\n",
          "label": "docs"
        },
        {
          "change": "diff --git a/Build.gradle b/Build.gradle\nindex 7e640d3..4644dd5 100644\n--- a/Build.gradle\n+++ b/Build.gradle\n@@ -4,9 +4,9 @@ apply plugin: 'eclipse'\n apply plugin: 'org.springframework.boot'\n \n dependencies {\n-    compile('org.springframework.boot:spring-boot-starter-data-jpa')\n-    compile('org.springframework.boot:spring-boot-starter-web')\n-    runtime('com.h2database:h2')\n+    compile('org.springframework.boot:spring-boot-starter-data-jpa:2.5.2')\n+    compile('org.springframework.boot:spring-boot-starter-web:2.5.2')\n+    runtime('com.h2database:h2:1.4.200')\n     testCompile('org.springframework.boot:spring-boot-starter-test')\n }\n \n@@ -14,6 +14,9 @@ bootJar {\n }\n \n bootRun {\n+    systemProperties = System.properties\n+    systemProperties['spring.profiles.active'] = 'dev'\n+    jvmArgs('-Xdebug','-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005')\n     main = project.findProperty('mainClassName')\n }\n \n@@ -23,7 +26,7 @@ springBoot {\n }\n \n jar {\n-    manifest {\n+    manifest {\n         attributes 'Implementation-Title': 'Grails', 'Implementation-Version': version\n     }\n }\n@@ -31,4 +34,4 @@ jar {\n \n task wrapper(type: Wrapper) {\n     gradleVersion = '7.0'\n-}\n\\ No newline at end of file\n+}\n",
          "label": "build"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/vertx-testsuite/src/test/java/org/vertx/java/tests/core/net/JavaNetTest.java b/vertx-testsuite/src/test/java/org/vertx/java/tests/core/net/JavaNetTest.java\nindex 5eeea03..90940ce 100644\n--- a/vertx-testsuite/src/test/java/org/vertx/java/tests/core/net/JavaNetTest.java\n+++ b/vertx-testsuite/src/test/java/org/vertx/java/tests/core/net/JavaNetTest.java\n@@ -439,7 +439,7 @@ public class JavaNetTest extends TestBase {\n \n   @Test\n   public void testListenOnWildcardPort() throws Exception {\n-    startTest(getMethodName(), false);\n+    startTest(getMethodName());\n   }\n \n   @Test\n\ndiff --git a/Makefile b/Makefile\nindex 826e814..766f8f0 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -48,9 +48,12 @@ test:\n unit-test:\n    @echo \"Running unit tests\"\n  \n-build:\n+build: test\n    @echo \"Building the project\"\n \n-build-all: clean build\n+test-all: unit-test integration-test\n+\n+build-all: clean test-all build\n    @echo \"Built all components\"\n \n+.PHONY: clean test build test-all build-all\ndiff --git a/subprojects/migration/src/main/groovy/org/gradle/api/plugins/migration/CompareGradleBuilds.java b/subprojects/migration/src/main/groovy/org/gradle/api/plugins/migration/CompareGradleBuilds.java\nindex 3c73d53..21aab88 100644\n--- a/subprojects/migration/src/main/groovy/org/gradle/api/plugins/migration/CompareGradleBuilds.java\n+++ b/subprojects/migration/src/main/groovy/org/gradle/api/plugins/migration/CompareGradleBuilds.java\n@@ -49,6 +49,9 @@ import java.io.*;\n import java.nio.charset.Charset;\n import java.util.Set;\n \n+/**\n+ * Executes two Gradle builds (that can be the same build) with specified versions and compares the outputs.\n+ */\n public class CompareGradleBuilds extends DefaultTask {\n \n     private String sourceVersion = GradleVersion.current().getVersion();\n\ndiff --git a/docs/pom.xml b/docs/pom.xml\nindex f172775..54bd64c 100644\n--- a/docs/pom.xml\n+++ b/docs/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n     </parent>\n \n     <artifactId>trino-docs</artifactId>",
      "atomicChanges": [
        {
          "change": "diff --git a/vertx-testsuite/src/test/java/org/vertx/java/tests/core/net/JavaNetTest.java b/vertx-testsuite/src/test/java/org/vertx/java/tests/core/net/JavaNetTest.java\nindex 5eeea03..90940ce 100644\n--- a/vertx-testsuite/src/test/java/org/vertx/java/tests/core/net/JavaNetTest.java\n+++ b/vertx-testsuite/src/test/java/org/vertx/java/tests/core/net/JavaNetTest.java\n@@ -439,7 +439,7 @@ public class JavaNetTest extends TestBase {\n \n   @Test\n   public void testListenOnWildcardPort() throws Exception {\n-    startTest(getMethodName(), false);\n+    startTest(getMethodName());\n   }\n \n   @Test\n",
          "label": "test"
        },
        {
          "change": "diff --git a/Makefile b/Makefile\nindex 826e814..766f8f0 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -48,9 +48,12 @@ test:\n unit-test:\n    @echo \"Running unit tests\"\n  \n-build:\n+build: test\n    @echo \"Building the project\"\n \n-build-all: clean build\n+test-all: unit-test integration-test\n+\n+build-all: clean test-all build\n    @echo \"Built all components\"\n \n+.PHONY: clean test build test-all build-all",
          "label": "cicd"
        },
        {
          "change": "diff --git a/subprojects/migration/src/main/groovy/org/gradle/api/plugins/migration/CompareGradleBuilds.java b/subprojects/migration/src/main/groovy/org/gradle/api/plugins/migration/CompareGradleBuilds.java\nindex 3c73d53..21aab88 100644\n--- a/subprojects/migration/src/main/groovy/org/gradle/api/plugins/migration/CompareGradleBuilds.java\n+++ b/subprojects/migration/src/main/groovy/org/gradle/api/plugins/migration/CompareGradleBuilds.java\n@@ -49,6 +49,9 @@ import java.io.*;\n import java.nio.charset.Charset;\n import java.util.Set;\n \n+/**\n+ * Executes two Gradle builds (that can be the same build) with specified versions and compares the outputs.\n+ */\n public class CompareGradleBuilds extends DefaultTask {\n \n     private String sourceVersion = GradleVersion.current().getVersion();\n",
          "label": "docs"
        },
        {
          "change": "diff --git a/docs/pom.xml b/docs/pom.xml\nindex f172775..54bd64c 100644\n--- a/docs/pom.xml\n+++ b/docs/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n     </parent>\n \n     <artifactId>trino-docs</artifactId>",
          "label": "build"
        }
      ]
    }
  ]
}