{
  "metadata": {
    "num_cases": 10,
    "concerns_per_case": 2,
    "types": [
      "cicd",
      "build",
      "docs",
      "test",
      "feat"
    ],
    "allow_same_types": false,
    "seed": 42,
    "source_dataset": "datasets/candidates/codefuse-hqcm/dataset/test.json"
  },
  "cases": [
    {
      "tangleChange": "diff --git a/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java b/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\nindex e8337f6..0ab86e4 100644\n--- a/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\n+++ b/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\n@@ -122,9 +122,16 @@ public class SELinuxPolicyInstallReceiver extends ConfigUpdateInstallReceiver {\n     }\n \n     private void setEnforcingMode(Context context) {\n-        boolean mode = Settings.Global.getInt(context.getContentResolver(),\n-            Settings.Global.SELINUX_STATUS, 0) == 1;\n-        SELinux.setSELinuxEnforce(mode);\n+        String mode = Settings.Global.getString(context.getContentResolver(),\n+            Settings.Global.SELINUX_STATUS);\n+        if (mode.equals(\"1\")) {\n+            Slog.i(TAG, \"Setting enforcing mode\");\n+            SystemProperties.set(\"persist.selinux.enforcing\", mode);\n+        } else if (mode.equals(\"0\")) {\n+            Slog.i(TAG, \"Tried to set permissive mode, ignoring\");\n+        } else {\n+            Slog.e(TAG, \"Got invalid enforcing mode: \" + mode);\n+        }\n     }\n \n     @Override\n\ndiff --git a/pom.xml b/pom.xml\nindex 330f26a..2df976a 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -44,6 +44,7 @@\n         <module>shenyu-dist</module>\n         <module>shenyu-alert</module>\n         <module>shenyu-sdk</module>\n+        <module>shenyu-discovery</module>\n     </modules>\n \n     <licenses>",
      "atomicChanges": [
        {
          "change": "diff --git a/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java b/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\nindex e8337f6..0ab86e4 100644\n--- a/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\n+++ b/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\n@@ -122,9 +122,16 @@ public class SELinuxPolicyInstallReceiver extends ConfigUpdateInstallReceiver {\n     }\n \n     private void setEnforcingMode(Context context) {\n-        boolean mode = Settings.Global.getInt(context.getContentResolver(),\n-            Settings.Global.SELINUX_STATUS, 0) == 1;\n-        SELinux.setSELinuxEnforce(mode);\n+        String mode = Settings.Global.getString(context.getContentResolver(),\n+            Settings.Global.SELINUX_STATUS);\n+        if (mode.equals(\"1\")) {\n+            Slog.i(TAG, \"Setting enforcing mode\");\n+            SystemProperties.set(\"persist.selinux.enforcing\", mode);\n+        } else if (mode.equals(\"0\")) {\n+            Slog.i(TAG, \"Tried to set permissive mode, ignoring\");\n+        } else {\n+            Slog.e(TAG, \"Got invalid enforcing mode: \" + mode);\n+        }\n     }\n \n     @Override\n",
          "label": "feat"
        },
        {
          "change": "diff --git a/pom.xml b/pom.xml\nindex 330f26a..2df976a 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -44,6 +44,7 @@\n         <module>shenyu-dist</module>\n         <module>shenyu-alert</module>\n         <module>shenyu-sdk</module>\n+        <module>shenyu-discovery</module>\n     </modules>\n \n     <licenses>",
          "label": "build"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java b/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java\nindex 8f932cf339..da93bce36c 100644\n--- a/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java\n+++ b/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java\n@@ -24,7 +24,7 @@ import org.junit.Test;\n \n public class HttpProxyRouteTest extends BaseJettyTest {\n \n-    private int size = 500;\n+    private int size = 10;\n \n     @Test\n     public void testHttpProxy() throws Exception {\n\ndiff --git a/client/trino-cli/pom.xml b/client/trino-cli/pom.xml\nindex 11ded11..212dacf 100644\n--- a/client/trino-cli/pom.xml\n+++ b/client/trino-cli/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n         <relativePath>../../pom.xml</relativePath>\n     </parent>\n ",
      "atomicChanges": [
        {
          "change": "diff --git a/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java b/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java\nindex 8f932cf339..da93bce36c 100644\n--- a/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java\n+++ b/components/camel-jetty/src/test/java/org/apache/camel/component/jetty/HttpProxyRouteTest.java\n@@ -24,7 +24,7 @@ import org.junit.Test;\n \n public class HttpProxyRouteTest extends BaseJettyTest {\n \n-    private int size = 500;\n+    private int size = 10;\n \n     @Test\n     public void testHttpProxy() throws Exception {\n",
          "label": "test"
        },
        {
          "change": "diff --git a/client/trino-cli/pom.xml b/client/trino-cli/pom.xml\nindex 11ded11..212dacf 100644\n--- a/client/trino-cli/pom.xml\n+++ b/client/trino-cli/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n         <relativePath>../../pom.xml</relativePath>\n     </parent>\n ",
          "label": "build"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/docs/pom.xml b/docs/pom.xml\nindex f172775..54bd64c 100644\n--- a/docs/pom.xml\n+++ b/docs/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n     </parent>\n \n     <artifactId>trino-docs</artifactId>\ndiff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/DefaultExpressionTraversalVisitor.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/DefaultExpressionTraversalVisitor.java\nindex e7269a1..5c0e539 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/DefaultExpressionTraversalVisitor.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/DefaultExpressionTraversalVisitor.java\n@@ -25,4 +25,11 @@ public abstract class DefaultExpressionTraversalVisitor<R, C>\n         // Don't traverse into Subqueries within an Expression\n         return null;\n     }\n+\n+    @Override\n+    protected R visitExists(ExistsPredicate node, C context)\n+    {\n+        // Don't traverse into Subqueries within an Expression\n+        return null;\n+    }\n }\n",
      "atomicChanges": [
        {
          "change": "diff --git a/docs/pom.xml b/docs/pom.xml\nindex f172775..54bd64c 100644\n--- a/docs/pom.xml\n+++ b/docs/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n     </parent>\n \n     <artifactId>trino-docs</artifactId>",
          "label": "build"
        },
        {
          "change": "diff --git a/presto-parser/src/main/java/com/facebook/presto/sql/tree/DefaultExpressionTraversalVisitor.java b/presto-parser/src/main/java/com/facebook/presto/sql/tree/DefaultExpressionTraversalVisitor.java\nindex e7269a1..5c0e539 100644\n--- a/presto-parser/src/main/java/com/facebook/presto/sql/tree/DefaultExpressionTraversalVisitor.java\n+++ b/presto-parser/src/main/java/com/facebook/presto/sql/tree/DefaultExpressionTraversalVisitor.java\n@@ -25,4 +25,11 @@ public abstract class DefaultExpressionTraversalVisitor<R, C>\n         // Don't traverse into Subqueries within an Expression\n         return null;\n     }\n+\n+    @Override\n+    protected R visitExists(ExistsPredicate node, C context)\n+    {\n+        // Don't traverse into Subqueries within an Expression\n+        return null;\n+    }\n }\n",
          "label": "feat"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/core/java/android/preference/VolumePreference.java b/core/java/android/preference/VolumePreference.java\nindex 970d520..0219fe8 100644\n--- a/core/java/android/preference/VolumePreference.java\n+++ b/core/java/android/preference/VolumePreference.java\n@@ -109,7 +109,9 @@ public class VolumePreference extends SeekBarPreference implements\n     }\n \n     public void onActivityStop() {\n-        cleanup();\n+        if (mSeekBarVolumizer != null) {\n+            mSeekBarVolumizer.stopSample();\n+        }\n     }\n \n     /**\n\ndiff --git a/build.gradle b/build.gradle\nindex 6g74558..897aebc 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,13 +1,13 @@\n apply plugin: 'java'\n apply plugin: 'eclipse'\n \n-group = 'com.example'\n-version = '1.0.0-SNAPSHOT'\n+group = 'com.mycompany'\n+version = '1.0.1'\n \n sourceCompatibility = 1.8\n \n repositories {\n-    mavenCentral()\n+    maven { url \"https://maven.springframework.org/release\" }\n }\n \n dependencies {\n-    testCompile group: 'junit', name: 'junit', version: '4.13.1'\n+    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.4.5'\n }",
      "atomicChanges": [
        {
          "change": "diff --git a/core/java/android/preference/VolumePreference.java b/core/java/android/preference/VolumePreference.java\nindex 970d520..0219fe8 100644\n--- a/core/java/android/preference/VolumePreference.java\n+++ b/core/java/android/preference/VolumePreference.java\n@@ -109,7 +109,9 @@ public class VolumePreference extends SeekBarPreference implements\n     }\n \n     public void onActivityStop() {\n-        cleanup();\n+        if (mSeekBarVolumizer != null) {\n+            mSeekBarVolumizer.stopSample();\n+        }\n     }\n \n     /**\n",
          "label": "feat"
        },
        {
          "change": "diff --git a/build.gradle b/build.gradle\nindex 6g74558..897aebc 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,13 +1,13 @@\n apply plugin: 'java'\n apply plugin: 'eclipse'\n \n-group = 'com.example'\n-version = '1.0.0-SNAPSHOT'\n+group = 'com.mycompany'\n+version = '1.0.1'\n \n sourceCompatibility = 1.8\n \n repositories {\n-    mavenCentral()\n+    maven { url \"https://maven.springframework.org/release\" }\n }\n \n dependencies {\n-    testCompile group: 'junit', name: 'junit', version: '4.13.1'\n+    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.4.5'\n }",
          "label": "build"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java\nindex 89a93d0..13ccd9f 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java\n@@ -72,7 +72,7 @@ public class BaseBulletTest extends BulletTest {\n \tpublic ModelBuilder modelBuilder = new ModelBuilder();\n \tpublic ModelBatch modelBatch;\n \tpublic Array<Disposable> disposables = new Array<Disposable>();\n-\tprivate int debugMode = DebugDrawModes.DBG_DrawFeaturesText;\n+\tprivate int debugMode = DebugDrawModes.DBG_NoDebug;\n \t\n \tprotected final static Vector3 tmpV1 = new Vector3(), tmpV2 = new Vector3();\n \n\ndiff --git a/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java b/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java\nindex 8a37429..9f9bf55 100644\n--- a/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java\n+++ b/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java\n@@ -14,4 +14,6 @@ public interface Broker\n     \n     // I know... this isn't supposed to be here\n     Object instantiateMasterServer( GraphDatabaseService graphDb );\n+    \n+    void shutdown();\n }\n",
      "atomicChanges": [
        {
          "change": "diff --git a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java\nindex 89a93d0..13ccd9f 100644\n--- a/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java\n+++ b/tests/gdx-tests/src/com/badlogic/gdx/tests/bullet/BaseBulletTest.java\n@@ -72,7 +72,7 @@ public class BaseBulletTest extends BulletTest {\n \tpublic ModelBuilder modelBuilder = new ModelBuilder();\n \tpublic ModelBatch modelBatch;\n \tpublic Array<Disposable> disposables = new Array<Disposable>();\n-\tprivate int debugMode = DebugDrawModes.DBG_DrawFeaturesText;\n+\tprivate int debugMode = DebugDrawModes.DBG_NoDebug;\n \t\n \tprotected final static Vector3 tmpV1 = new Vector3(), tmpV2 = new Vector3();\n \n",
          "label": "test"
        },
        {
          "change": "diff --git a/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java b/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java\nindex 8a37429..9f9bf55 100644\n--- a/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java\n+++ b/enterprise/src/main/java/org/neo4j/kernel/impl/ha/Broker.java\n@@ -14,4 +14,6 @@ public interface Broker\n     \n     // I know... this isn't supposed to be here\n     Object instantiateMasterServer( GraphDatabaseService graphDb );\n+    \n+    void shutdown();\n }\n",
          "label": "feat"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/build.gradle b/build.gradle\nindex 6g74558..897aebc 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,13 +1,13 @@\n apply plugin: 'java'\n apply plugin: 'eclipse'\n \n-group = 'com.example'\n-version = '1.0.0-SNAPSHOT'\n+group = 'com.mycompany'\n+version = '1.0.1'\n \n sourceCompatibility = 1.8\n \n repositories {\n-    mavenCentral()\n+    maven { url \"https://maven.springframework.org/release\" }\n }\n \n dependencies {\n-    testCompile group: 'junit', name: 'junit', version: '4.13.1'\n+    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.4.5'\n }\ndiff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 3e5f6a9..2b763ed 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -1,6 +1,6 @@\n image: node:14\n \n-test:\n+tests:\n   script:\n     - npm install\n     - npm run test\n@@ -8,3 +8,20 @@ test:\n   only:\n     - main\n     - merge_requests\n+\n+code_scan:\n+  image: sonarsource/sonar-scanner-cli\n+  script:\n+    - sonar-scanner\n+  only:\n+    - main\n+    - merge_requests\n+    - feature/*\n+\n+security_scan:\n+  image: aquasec/trivy:latest\n+  script:\n+    - trivy filesystem --exit-code 1 --no-progress /\n+  only:\n+    - main\n+    - merge_requests",
      "atomicChanges": [
        {
          "change": "diff --git a/build.gradle b/build.gradle\nindex 6g74558..897aebc 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,13 +1,13 @@\n apply plugin: 'java'\n apply plugin: 'eclipse'\n \n-group = 'com.example'\n-version = '1.0.0-SNAPSHOT'\n+group = 'com.mycompany'\n+version = '1.0.1'\n \n sourceCompatibility = 1.8\n \n repositories {\n-    mavenCentral()\n+    maven { url \"https://maven.springframework.org/release\" }\n }\n \n dependencies {\n-    testCompile group: 'junit', name: 'junit', version: '4.13.1'\n+    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.4.5'\n }",
          "label": "build"
        },
        {
          "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 3e5f6a9..2b763ed 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -1,6 +1,6 @@\n image: node:14\n \n-test:\n+tests:\n   script:\n     - npm install\n     - npm run test\n@@ -8,3 +8,20 @@ test:\n   only:\n     - main\n     - merge_requests\n+\n+code_scan:\n+  image: sonarsource/sonar-scanner-cli\n+  script:\n+    - sonar-scanner\n+  only:\n+    - main\n+    - merge_requests\n+    - feature/*\n+\n+security_scan:\n+  image: aquasec/trivy:latest\n+  script:\n+    - trivy filesystem --exit-code 1 --no-progress /\n+  only:\n+    - main\n+    - merge_requests",
          "label": "cicd"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/build.gradle b/build.gradle\nindex 227a903..37bc2yx 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,7 +1,7 @@\n apply plugin: 'java'\n\n repositories {\n-    mavenCentral()\n+    jcenter()\n }\n\n dependencies {\n-    compile 'org.springframework.boot:spring-boot-starter-web:2.2.2'\n+    compile 'org.springframework.boot:spring-boot-starter-web:2.3.4'\n }\ndiff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java\nindex 2ce37ae..399aa1b 100644\n--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java\n+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2002-2012 the original author or authors.\n+ * Copyright 2002-2013 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -19,7 +19,6 @@ package org.springframework.web.servlet.view.document;\n import java.io.OutputStream;\n import java.util.Locale;\n import java.util.Map;\n-\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n \n@@ -34,9 +33,9 @@ import org.springframework.web.servlet.view.AbstractView;\n /**\n  * Convenient superclass for Excel document views.\n  *\n- * <p>This class uses the <i>JExcelAPI</i> instead of <i>POI</i>. More\n- * information on <i>JExcelAPI</i> can be found on their <a\n- * href=\"http://www.andykhan.com/jexcelapi/\" target=\"_blank\">website</a>.\n+ * <p>This class uses the <i>JExcelAPI</i> instead of <i>POI</i>.\n+ * More information on <i>JExcelAPI</i> can be found on their\n+ * <a href=\"http://www.andykhan.com/jexcelapi/\" target=\"_blank\">website</a>.\n  *\n  * <p>Properties:\n  * <ul>\n@@ -58,11 +57,11 @@ import org.springframework.web.servlet.view.AbstractView;\n  *\n  * <pre class=\"code\">\n  * protected void buildExcelDocument(\n- *      Map&lt;String, Object&gt; model, WritableWorkbook workbook,\n- * \t\tHttpServletRequest request, HttpServletResponse response) {\n+ *     Map&lt;String, Object&gt; model, WritableWorkbook workbook,\n+ *     HttpServletRequest request, HttpServletResponse response) {\n  *\n  * \t if (workbook.getNumberOfSheets() == 0) {\n- * \t     workbook.createSheet(&quot;Spring&quot;, 0);\n+ * \t   workbook.createSheet(&quot;Spring&quot;, 0);\n  *   }\n  *\n  * \t WritableSheet sheet = workbook.getSheet(&quot;Spring&quot;);\n@@ -70,7 +69,7 @@ import org.springframework.web.servlet.view.AbstractView;\n  * \t sheet.addCell(label);\n  * }</pre>\n  *\n- * The use of this view is close to the AbstractExcelView class,\n+ * The use of this view is close to the {@link AbstractExcelView} class,\n  * just using the JExcel API instead of the Apache POI API.\n  *\n  * @author Bram Smeets\n@@ -79,7 +78,10 @@ import org.springframework.web.servlet.view.AbstractView;\n  * @since 1.2.5\n  * @see AbstractExcelView\n  * @see AbstractPdfView\n+ * @deprecated as of Spring 4.0, since JExcelAPI is an abandoned project\n+ * (no release since 2009, with serious bugs remaining)\n  */\n+@Deprecated\n public abstract class AbstractJExcelView extends AbstractView {\n \n \t/** The content type for an Excel response */\n",
      "atomicChanges": [
        {
          "change": "diff --git a/build.gradle b/build.gradle\nindex 227a903..37bc2yx 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,7 +1,7 @@\n apply plugin: 'java'\n\n repositories {\n-    mavenCentral()\n+    jcenter()\n }\n\n dependencies {\n-    compile 'org.springframework.boot:spring-boot-starter-web:2.2.2'\n+    compile 'org.springframework.boot:spring-boot-starter-web:2.3.4'\n }",
          "label": "build"
        },
        {
          "change": "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java\nindex 2ce37ae..399aa1b 100644\n--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java\n+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/document/AbstractJExcelView.java\n@@ -1,5 +1,5 @@\n /*\n- * Copyright 2002-2012 the original author or authors.\n+ * Copyright 2002-2013 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -19,7 +19,6 @@ package org.springframework.web.servlet.view.document;\n import java.io.OutputStream;\n import java.util.Locale;\n import java.util.Map;\n-\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n \n@@ -34,9 +33,9 @@ import org.springframework.web.servlet.view.AbstractView;\n /**\n  * Convenient superclass for Excel document views.\n  *\n- * <p>This class uses the <i>JExcelAPI</i> instead of <i>POI</i>. More\n- * information on <i>JExcelAPI</i> can be found on their <a\n- * href=\"http://www.andykhan.com/jexcelapi/\" target=\"_blank\">website</a>.\n+ * <p>This class uses the <i>JExcelAPI</i> instead of <i>POI</i>.\n+ * More information on <i>JExcelAPI</i> can be found on their\n+ * <a href=\"http://www.andykhan.com/jexcelapi/\" target=\"_blank\">website</a>.\n  *\n  * <p>Properties:\n  * <ul>\n@@ -58,11 +57,11 @@ import org.springframework.web.servlet.view.AbstractView;\n  *\n  * <pre class=\"code\">\n  * protected void buildExcelDocument(\n- *      Map&lt;String, Object&gt; model, WritableWorkbook workbook,\n- * \t\tHttpServletRequest request, HttpServletResponse response) {\n+ *     Map&lt;String, Object&gt; model, WritableWorkbook workbook,\n+ *     HttpServletRequest request, HttpServletResponse response) {\n  *\n  * \t if (workbook.getNumberOfSheets() == 0) {\n- * \t     workbook.createSheet(&quot;Spring&quot;, 0);\n+ * \t   workbook.createSheet(&quot;Spring&quot;, 0);\n  *   }\n  *\n  * \t WritableSheet sheet = workbook.getSheet(&quot;Spring&quot;);\n@@ -70,7 +69,7 @@ import org.springframework.web.servlet.view.AbstractView;\n  * \t sheet.addCell(label);\n  * }</pre>\n  *\n- * The use of this view is close to the AbstractExcelView class,\n+ * The use of this view is close to the {@link AbstractExcelView} class,\n  * just using the JExcel API instead of the Apache POI API.\n  *\n  * @author Bram Smeets\n@@ -79,7 +78,10 @@ import org.springframework.web.servlet.view.AbstractView;\n  * @since 1.2.5\n  * @see AbstractExcelView\n  * @see AbstractPdfView\n+ * @deprecated as of Spring 4.0, since JExcelAPI is an abandoned project\n+ * (no release since 2009, with serious bugs remaining)\n  */\n+@Deprecated\n public abstract class AbstractJExcelView extends AbstractView {\n \n \t/** The content type for an Excel response */\n",
          "label": "docs"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 7a8b9c0..1d2e3f4 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -15,1 +15,4 @@ build:\n     - docker build --tag myimage .\n+    - docker build --cache-from myimage:latest --tag myimage .\n+  before_script:\n+    - docker pull myimage:latest || true\ndiff --git a/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java b/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java\nindex 4195f12..42d3cc7 100644\n--- a/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java\n+++ b/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java\n@@ -301,7 +301,6 @@ public class IdeaProject {\n         ipr.getWhenMerged().execute(xmlProject);\n     }\n \n-    // TODO:DAZ Make this a `whenMerged` hook registered by composite build?\n     private void includeModulesFromComposite(Project xmlProject) {\n         // TODO:DAZ Introduce a properly typed ComponentIdentifier for project components in a composite\n         ProjectComponentIdentifier thisProjectId = DefaultProjectComponentIdentifier.newId(project.getRootProject().getName() + \":\" + project.getPath());\ndiff --git a/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java b/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java\nindex 1bc6e23..c4ef98f 100644\n--- a/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java\n+++ b/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java\n@@ -39,7 +39,6 @@ public class GradleConnectionFactory {\n         this.loggingProvider = loggingProvider;\n     }\n \n-    // TODO:DAZ Clean this up: we should not be providing an ignored 'distribution' when using the inline coordinator\n     public DefaultGradleConnection create(Distribution distribution, CompositeConnectionParameters parameters, boolean useDaemonCoordinator) {\n         ConsumerActionExecutor lazyConnection;\n         if (useDaemonCoordinator) {\n",
      "atomicChanges": [
        {
          "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 7a8b9c0..1d2e3f4 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -15,1 +15,4 @@ build:\n     - docker build --tag myimage .\n+    - docker build --cache-from myimage:latest --tag myimage .\n+  before_script:\n+    - docker pull myimage:latest || true",
          "label": "cicd"
        },
        {
          "change": "diff --git a/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java b/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java\nindex 4195f12..42d3cc7 100644\n--- a/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java\n+++ b/subprojects/ide/src/main/groovy/org/gradle/plugins/ide/idea/model/IdeaProject.java\n@@ -301,7 +301,6 @@ public class IdeaProject {\n         ipr.getWhenMerged().execute(xmlProject);\n     }\n \n-    // TODO:DAZ Make this a `whenMerged` hook registered by composite build?\n     private void includeModulesFromComposite(Project xmlProject) {\n         // TODO:DAZ Introduce a properly typed ComponentIdentifier for project components in a composite\n         ProjectComponentIdentifier thisProjectId = DefaultProjectComponentIdentifier.newId(project.getRootProject().getName() + \":\" + project.getPath());\ndiff --git a/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java b/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java\nindex 1bc6e23..c4ef98f 100644\n--- a/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java\n+++ b/subprojects/tooling-api/src/main/java/org/gradle/tooling/internal/connection/GradleConnectionFactory.java\n@@ -39,7 +39,6 @@ public class GradleConnectionFactory {\n         this.loggingProvider = loggingProvider;\n     }\n \n-    // TODO:DAZ Clean this up: we should not be providing an ignored 'distribution' when using the inline coordinator\n     public DefaultGradleConnection create(Distribution distribution, CompositeConnectionParameters parameters, boolean useDaemonCoordinator) {\n         ConsumerActionExecutor lazyConnection;\n         if (useDaemonCoordinator) {\n",
          "label": "docs"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java b/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java\nindex 47f870c6c..0696fed31 100644\n--- a/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java\n+++ b/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java\n@@ -80,7 +80,7 @@ public class KeepAliveTimersTest extends CrateUnitTest {\n         KeepAliveTimers.ResettableTimer timer = futureAndTimer.v2();\n         SettableFuture<Void> future = futureAndTimer.v1();\n         timer.start();\n-        future.get(100, TimeUnit.MILLISECONDS);\n+        future.get(1000, TimeUnit.MILLISECONDS);\n     }\n \n     @Test\n\ndiff --git a/rs/java/android/renderscript/ScriptIntrinsicBlur.java b/rs/java/android/renderscript/ScriptIntrinsicBlur.java\nindex 98499b5..7a702e8 100644\n--- a/rs/java/android/renderscript/ScriptIntrinsicBlur.java\n+++ b/rs/java/android/renderscript/ScriptIntrinsicBlur.java\n@@ -34,7 +34,8 @@ public final class ScriptIntrinsicBlur extends ScriptIntrinsic {\n      * Create an intrinsic for applying a blur to an allocation. The\n      * default radius is 5.0.\n      *\n-     * Supported elements types are {@link Element#U8_4 Element#U8}\n+     * Supported elements types are {@link Element#U8},\n+     * {@link Element#U8_4}.\n      *\n      * @param rs The RenderScript context\n      * @param e Element type for inputs and outputs\n",
      "atomicChanges": [
        {
          "change": "diff --git a/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java b/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java\nindex 47f870c6c..0696fed31 100644\n--- a/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java\n+++ b/sql/src/test/java/io/crate/jobs/KeepAliveTimersTest.java\n@@ -80,7 +80,7 @@ public class KeepAliveTimersTest extends CrateUnitTest {\n         KeepAliveTimers.ResettableTimer timer = futureAndTimer.v2();\n         SettableFuture<Void> future = futureAndTimer.v1();\n         timer.start();\n-        future.get(100, TimeUnit.MILLISECONDS);\n+        future.get(1000, TimeUnit.MILLISECONDS);\n     }\n \n     @Test\n",
          "label": "test"
        },
        {
          "change": "diff --git a/rs/java/android/renderscript/ScriptIntrinsicBlur.java b/rs/java/android/renderscript/ScriptIntrinsicBlur.java\nindex 98499b5..7a702e8 100644\n--- a/rs/java/android/renderscript/ScriptIntrinsicBlur.java\n+++ b/rs/java/android/renderscript/ScriptIntrinsicBlur.java\n@@ -34,7 +34,8 @@ public final class ScriptIntrinsicBlur extends ScriptIntrinsic {\n      * Create an intrinsic for applying a blur to an allocation. The\n      * default radius is 5.0.\n      *\n-     * Supported elements types are {@link Element#U8_4 Element#U8}\n+     * Supported elements types are {@link Element#U8},\n+     * {@link Element#U8_4}.\n      *\n      * @param rs The RenderScript context\n      * @param e Element type for inputs and outputs\n",
          "label": "docs"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/Makefile b/Makefile\nindex 826e814..766f8f0 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -48,9 +48,12 @@ test:\n unit-test:\n    @echo \"Running unit tests\"\n  \n-build:\n+build: test\n    @echo \"Building the project\"\n \n-build-all: clean build\n+test-all: unit-test integration-test\n+\n+build-all: clean test-all build\n    @echo \"Built all components\"\n \n+.PHONY: clean test build test-all build-all\ndiff --git a/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java b/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java\nindex ab142a0..04dba3f 100644\n--- a/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java\n+++ b/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java\n@@ -80,4 +80,12 @@ public class Join<SRC, DST> {\n         return whereCollector.combineWhereConditions(\" AND \", cond1, cond2, condMore);\n     }\n \n+    /**\n+     * Usually you don't need this value; just in case you are mixing custom\n+     * {@link de.greenrobot.dao.query.WhereCondition.StringCondition} into the query, this value allows to reference\n+     * the joined (target) table.\n+     */\n+    public String getTablePrefix() {\n+        return tablePrefix;\n+    }\n }\n",
      "atomicChanges": [
        {
          "change": "diff --git a/Makefile b/Makefile\nindex 826e814..766f8f0 100644\n--- a/Makefile\n+++ b/Makefile\n@@ -48,9 +48,12 @@ test:\n unit-test:\n    @echo \"Running unit tests\"\n  \n-build:\n+build: test\n    @echo \"Building the project\"\n \n-build-all: clean build\n+test-all: unit-test integration-test\n+\n+build-all: clean test-all build\n    @echo \"Built all components\"\n \n+.PHONY: clean test build test-all build-all",
          "label": "cicd"
        },
        {
          "change": "diff --git a/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java b/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java\nindex ab142a0..04dba3f 100644\n--- a/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java\n+++ b/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java\n@@ -80,4 +80,12 @@ public class Join<SRC, DST> {\n         return whereCollector.combineWhereConditions(\" AND \", cond1, cond2, condMore);\n     }\n \n+    /**\n+     * Usually you don't need this value; just in case you are mixing custom\n+     * {@link de.greenrobot.dao.query.WhereCondition.StringCondition} into the query, this value allows to reference\n+     * the joined (target) table.\n+     */\n+    public String getTablePrefix() {\n+        return tablePrefix;\n+    }\n }\n",
          "label": "feat"
        }
      ]
    }
  ]
}