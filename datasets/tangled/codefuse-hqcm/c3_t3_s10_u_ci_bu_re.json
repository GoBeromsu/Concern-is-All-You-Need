{
  "metadata": {
    "num_cases": 10,
    "concerns_per_case": 3,
    "types": [
      "refactor",
      "cicd",
      "build"
    ],
    "allow_same_types": false,
    "seed": 42,
    "source_dataset": "datasets/candidates/codefuse-hqcm/dataset/test.json"
  },
  "cases": [
    {
      "tangleChange": "diff --git a/pom.xml b/pom.xml\nindex 330f26a..2df976a 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -44,6 +44,7 @@\n         <module>shenyu-dist</module>\n         <module>shenyu-alert</module>\n         <module>shenyu-sdk</module>\n+        <module>shenyu-discovery</module>\n     </modules>\n \n     <licenses>\ndiff --git a/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java b/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java\nindex fc7b5be1..50b692d5 100644\n--- a/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java\n+++ b/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java\n@@ -18,7 +18,7 @@\n  */\r\n \r\n /*\r\n- * Copyright (c) 2006, 2010, Oracle and/or its affiliates. All rights reserved.\r\n+ * Copyright (c) 2006, 2011, Oracle and/or its affiliates. All rights reserved.\r\n  */\r\n package org.opensolaris.opengrok.analysis.vb;\r\n \r\n@@ -42,9 +42,9 @@ import org.opensolaris.opengrok.history.Annotation;\n  */\r\n public class VBAnalyzer extends PlainAnalyzer {\r\n \r\n-    private VBSymbolTokenizer cref;\r\n-    private VBXref xref;\r\n-    private Reader dummy = new StringReader(\"\");\r\n+    private final VBSymbolTokenizer cref;\r\n+    private final VBXref xref;\r\n+    private final Reader dummy = new StringReader(\"\");\r\n \r\n     /** Creates a new instance of VBAnalyzer */\r\n     protected VBAnalyzer(FileAnalyzerFactory factory) {\r\n\ndiff --git a/Jenkinsfile b/Jenkinsfile\nindex c3d4e5f..6a7b8c9 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -15,20 +15,6 @@ pipeline {\n             script {\n                 // Your build commands go here\n             }\n         }\n-        stage('Code Coverage') {\n-            when {\n-                anyOf {\n-                    branch 'main'\n-                    branch 'development'\n-                }\n-            }\n-            steps {\n-                script {\n-                    // Commands to generate code coverage report\n-                    sh 'generate-coverage-report.sh'\n-                }\n-            }\n-        }\n         stage('Deploy') {\n             when {\n                 branch 'main'\n             }",
      "atomicChanges": [
        {
          "change": "diff --git a/pom.xml b/pom.xml\nindex 330f26a..2df976a 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -44,6 +44,7 @@\n         <module>shenyu-dist</module>\n         <module>shenyu-alert</module>\n         <module>shenyu-sdk</module>\n+        <module>shenyu-discovery</module>\n     </modules>\n \n     <licenses>",
          "label": "build"
        },
        {
          "change": "diff --git a/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java b/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java\nindex fc7b5be1..50b692d5 100644\n--- a/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java\n+++ b/src/org/opensolaris/opengrok/analysis/vb/VBAnalyzer.java\n@@ -18,7 +18,7 @@\n  */\r\n \r\n /*\r\n- * Copyright (c) 2006, 2010, Oracle and/or its affiliates. All rights reserved.\r\n+ * Copyright (c) 2006, 2011, Oracle and/or its affiliates. All rights reserved.\r\n  */\r\n package org.opensolaris.opengrok.analysis.vb;\r\n \r\n@@ -42,9 +42,9 @@ import org.opensolaris.opengrok.history.Annotation;\n  */\r\n public class VBAnalyzer extends PlainAnalyzer {\r\n \r\n-    private VBSymbolTokenizer cref;\r\n-    private VBXref xref;\r\n-    private Reader dummy = new StringReader(\"\");\r\n+    private final VBSymbolTokenizer cref;\r\n+    private final VBXref xref;\r\n+    private final Reader dummy = new StringReader(\"\");\r\n \r\n     /** Creates a new instance of VBAnalyzer */\r\n     protected VBAnalyzer(FileAnalyzerFactory factory) {\r\n",
          "label": "refactor"
        },
        {
          "change": "diff --git a/Jenkinsfile b/Jenkinsfile\nindex c3d4e5f..6a7b8c9 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -15,20 +15,6 @@ pipeline {\n             script {\n                 // Your build commands go here\n             }\n         }\n-        stage('Code Coverage') {\n-            when {\n-                anyOf {\n-                    branch 'main'\n-                    branch 'development'\n-                }\n-            }\n-            steps {\n-                script {\n-                    // Commands to generate code coverage report\n-                    sh 'generate-coverage-report.sh'\n-                }\n-            }\n-        }\n         stage('Deploy') {\n             when {\n                 branch 'main'\n             }",
          "label": "cicd"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/compiler/src/main/java/org/robovm/compiler/ClassCompiler.java b/compiler/src/main/java/org/robovm/compiler/ClassCompiler.java\nindex 56f367fb4..3603a9117 100644\n--- a/compiler/src/main/java/org/robovm/compiler/ClassCompiler.java\n+++ b/compiler/src/main/java/org/robovm/compiler/ClassCompiler.java\n@@ -335,7 +335,7 @@ public class ClassCompiler {\n                 String triple = config.getTriple();\n                 Target target = Target.lookupTarget(triple);\n                 try (TargetMachine targetMachine = target.createTargetMachine(triple,\n-                        config.getArch().getLlvmCpu(), null, config.isDebug()? CodeGenOptLevel.CodeGenLevelNone: null, null, null)) {\n+                        config.getArch().getLlvmCpu(), null, config.isDebug()? CodeGenOptLevel.CodeGenLevelDefault: null, null, null)) {\n                     targetMachine.setAsmVerbosityDefault(true);\n                     targetMachine.setFunctionSections(true);\n                     targetMachine.setDataSections(true);\n\ndiff --git a/build.gradle b/build.gradle\nindex 227a903..37bc2yx 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,7 +1,7 @@\n apply plugin: 'java'\n\n repositories {\n-    mavenCentral()\n+    jcenter()\n }\n\n dependencies {\n-    compile 'org.springframework.boot:spring-boot-starter-web:2.2.2'\n+    compile 'org.springframework.boot:spring-boot-starter-web:2.3.4'\n }\ndiff --git a/Jenkinsfile b/Jenkinsfile\nindex 68fabd8..c5320e2 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -2,9 +2,14 @@ pipeline {\n     agent any\n     stages {\n         stage('Build') {\n-            steps {\n-                echo 'Building...'\n-                sh 'make'\n+            steps {    \n+                try {\n+                    echo 'Building...'\n+                    sh 'make'\n+                } catch (Exception e) {\n+                    currentBuild.result = 'FAILURE'\n+                    throw e\n+                }    \n             }\n         }\n         stage('Test') {\n@@ -18,8 +20,13 @@ pipeline {\n         }\n         stage('Deploy') {\n             when {\n-                branch 'master'\n+                allOf {\n+                    branch 'master'\n+                    not {\n+                        buildingTag()\n+                    }\n+                }\n             }\n             steps {\n-                echo 'Deploying...'\n+                echo 'Deploying to Prod...'\n                sh './deploy.sh'\n             }\n         }\n     }",
      "atomicChanges": [
        {
          "change": "diff --git a/compiler/src/main/java/org/robovm/compiler/ClassCompiler.java b/compiler/src/main/java/org/robovm/compiler/ClassCompiler.java\nindex 56f367fb4..3603a9117 100644\n--- a/compiler/src/main/java/org/robovm/compiler/ClassCompiler.java\n+++ b/compiler/src/main/java/org/robovm/compiler/ClassCompiler.java\n@@ -335,7 +335,7 @@ public class ClassCompiler {\n                 String triple = config.getTriple();\n                 Target target = Target.lookupTarget(triple);\n                 try (TargetMachine targetMachine = target.createTargetMachine(triple,\n-                        config.getArch().getLlvmCpu(), null, config.isDebug()? CodeGenOptLevel.CodeGenLevelNone: null, null, null)) {\n+                        config.getArch().getLlvmCpu(), null, config.isDebug()? CodeGenOptLevel.CodeGenLevelDefault: null, null, null)) {\n                     targetMachine.setAsmVerbosityDefault(true);\n                     targetMachine.setFunctionSections(true);\n                     targetMachine.setDataSections(true);\n",
          "label": "refactor"
        },
        {
          "change": "diff --git a/build.gradle b/build.gradle\nindex 227a903..37bc2yx 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,7 +1,7 @@\n apply plugin: 'java'\n\n repositories {\n-    mavenCentral()\n+    jcenter()\n }\n\n dependencies {\n-    compile 'org.springframework.boot:spring-boot-starter-web:2.2.2'\n+    compile 'org.springframework.boot:spring-boot-starter-web:2.3.4'\n }",
          "label": "build"
        },
        {
          "change": "diff --git a/Jenkinsfile b/Jenkinsfile\nindex 68fabd8..c5320e2 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -2,9 +2,14 @@ pipeline {\n     agent any\n     stages {\n         stage('Build') {\n-            steps {\n-                echo 'Building...'\n-                sh 'make'\n+            steps {    \n+                try {\n+                    echo 'Building...'\n+                    sh 'make'\n+                } catch (Exception e) {\n+                    currentBuild.result = 'FAILURE'\n+                    throw e\n+                }    \n             }\n         }\n         stage('Test') {\n@@ -18,8 +20,13 @@ pipeline {\n         }\n         stage('Deploy') {\n             when {\n-                branch 'master'\n+                allOf {\n+                    branch 'master'\n+                    not {\n+                        buildingTag()\n+                    }\n+                }\n             }\n             steps {\n-                echo 'Deploying...'\n+                echo 'Deploying to Prod...'\n                sh './deploy.sh'\n             }\n         }\n     }",
          "label": "cicd"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java b/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java\nindex a90a796..e4c934c 100644\n--- a/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java\n@@ -83,7 +83,7 @@ public abstract class OMVRBTreePersistent<K, V> extends OMVRBTree<K, V> implemen\n \r\n \tpublic OMVRBTreePersistent(String iClusterName, final OStreamSerializer iKeySerializer, final OStreamSerializer iValueSerializer) {\r\n \t\t// MINIMIZE I/O USING A LARGER PAGE THAN THE DEFAULT USED IN MEMORY\r\n-\t\tsuper(1024, 0.7f);\r\n+\t\tsuper(OGlobalConfiguration.MVRBTREE_NODE_PAGE_SIZE.getValueAsInteger(), 0.7f);\r\n \t\tconfig();\r\n \r\n \t\tclusterName = iClusterName;\r\n@@ -640,7 +640,7 @@ public abstract class OMVRBTreePersistent<K, V> extends OMVRBTree<K, V> implemen\n \r\n \t\tfinal V previous = super.put(key, value);\r\n \r\n-\t\tif (insertionCounter > optimizeThreshold) {\r\n+\t\tif (optimizeThreshold > -1 && insertionCounter > optimizeThreshold) {\r\n \t\t\tinsertionCounter = 0;\r\n \t\t\toptimize(false);\r\n \t\t} else\r\n\ndiff --git a/docs/pom.xml b/docs/pom.xml\nindex f172775..54bd64c 100644\n--- a/docs/pom.xml\n+++ b/docs/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n     </parent>\n \n     <artifactId>trino-docs</artifactId>\ndiff --git a/Jenkinsfile b/Jenkinsfile\nindex 68fabd8..c5320e2 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -2,9 +2,14 @@ pipeline {\n     agent any\n     stages {\n         stage('Build') {\n-            steps {\n-                echo 'Building...'\n-                sh 'make'\n+            steps {    \n+                try {\n+                    echo 'Building...'\n+                    sh 'make'\n+                } catch (Exception e) {\n+                    currentBuild.result = 'FAILURE'\n+                    throw e\n+                }    \n             }\n         }\n         stage('Test') {\n@@ -18,8 +20,13 @@ pipeline {\n         }\n         stage('Deploy') {\n             when {\n-                branch 'master'\n+                allOf {\n+                    branch 'master'\n+                    not {\n+                        buildingTag()\n+                    }\n+                }\n             }\n             steps {\n-                echo 'Deploying...'\n+                echo 'Deploying to Prod...'\n                sh './deploy.sh'\n             }\n         }\n     }",
      "atomicChanges": [
        {
          "change": "diff --git a/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java b/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java\nindex a90a796..e4c934c 100644\n--- a/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/type/tree/OMVRBTreePersistent.java\n@@ -83,7 +83,7 @@ public abstract class OMVRBTreePersistent<K, V> extends OMVRBTree<K, V> implemen\n \r\n \tpublic OMVRBTreePersistent(String iClusterName, final OStreamSerializer iKeySerializer, final OStreamSerializer iValueSerializer) {\r\n \t\t// MINIMIZE I/O USING A LARGER PAGE THAN THE DEFAULT USED IN MEMORY\r\n-\t\tsuper(1024, 0.7f);\r\n+\t\tsuper(OGlobalConfiguration.MVRBTREE_NODE_PAGE_SIZE.getValueAsInteger(), 0.7f);\r\n \t\tconfig();\r\n \r\n \t\tclusterName = iClusterName;\r\n@@ -640,7 +640,7 @@ public abstract class OMVRBTreePersistent<K, V> extends OMVRBTree<K, V> implemen\n \r\n \t\tfinal V previous = super.put(key, value);\r\n \r\n-\t\tif (insertionCounter > optimizeThreshold) {\r\n+\t\tif (optimizeThreshold > -1 && insertionCounter > optimizeThreshold) {\r\n \t\t\tinsertionCounter = 0;\r\n \t\t\toptimize(false);\r\n \t\t} else\r\n",
          "label": "refactor"
        },
        {
          "change": "diff --git a/docs/pom.xml b/docs/pom.xml\nindex f172775..54bd64c 100644\n--- a/docs/pom.xml\n+++ b/docs/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n     </parent>\n \n     <artifactId>trino-docs</artifactId>",
          "label": "build"
        },
        {
          "change": "diff --git a/Jenkinsfile b/Jenkinsfile\nindex 68fabd8..c5320e2 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -2,9 +2,14 @@ pipeline {\n     agent any\n     stages {\n         stage('Build') {\n-            steps {\n-                echo 'Building...'\n-                sh 'make'\n+            steps {    \n+                try {\n+                    echo 'Building...'\n+                    sh 'make'\n+                } catch (Exception e) {\n+                    currentBuild.result = 'FAILURE'\n+                    throw e\n+                }    \n             }\n         }\n         stage('Test') {\n@@ -18,8 +20,13 @@ pipeline {\n         }\n         stage('Deploy') {\n             when {\n-                branch 'master'\n+                allOf {\n+                    branch 'master'\n+                    not {\n+                        buildingTag()\n+                    }\n+                }\n             }\n             steps {\n-                echo 'Deploying...'\n+                echo 'Deploying to Prod...'\n                sh './deploy.sh'\n             }\n         }\n     }",
          "label": "cicd"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/build.gradle b/build.gradle\nindex 6g74558..897aebc 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,13 +1,13 @@\n apply plugin: 'java'\n apply plugin: 'eclipse'\n \n-group = 'com.example'\n-version = '1.0.0-SNAPSHOT'\n+group = 'com.mycompany'\n+version = '1.0.1'\n \n sourceCompatibility = 1.8\n \n repositories {\n-    mavenCentral()\n+    maven { url \"https://maven.springframework.org/release\" }\n }\n \n dependencies {\n-    testCompile group: 'junit', name: 'junit', version: '4.13.1'\n+    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.4.5'\n }\ndiff --git a/packages/SystemUI/src/com/android/systemui/ImageWallpaper.java b/packages/SystemUI/src/com/android/systemui/ImageWallpaper.java\nindex 79f9650..8d949a5 100644\n--- a/packages/SystemUI/src/com/android/systemui/ImageWallpaper.java\n+++ b/packages/SystemUI/src/com/android/systemui/ImageWallpaper.java\n@@ -485,14 +485,12 @@ public class ImageWallpaper extends WallpaperService {\n \n             glDrawArrays(GL_TRIANGLE_STRIP, 0, 4);\n \n-            if (!mEgl.eglSwapBuffers(mEglDisplay, mEglSurface)) {\n-                throw new RuntimeException(\"Cannot swap buffers\");\n-            }\n+            boolean status = mEgl.eglSwapBuffers(mEglDisplay, mEglSurface);\n             checkEglError();\n \n             finishGL();\n \n-            return true;\n+            return status;\n         }\n \n         private FloatBuffer createMesh(int left, int top, float right, float bottom) {\n\ndiff --git a/CICD/pipeline.yml b/CICD/pipeline.yml\nindex 678f637..892a597 100644\n--- a/CICD/pipeline.yml\n+++ b/CICD/pipeline.yml\n@@ -1,13 +1,22 @@\n stages:\n   - build\n   - test\n-  - deploy\n+  - staging\n+  - production\n \n jobs:\n   build:\n     stage: build\n     script: 'make build'\n \n   test:\n     stage: test\n     script: 'make test'\n+    \n+  staging:\n+    stage: staging\n+    script: 'make deploy-staging'\n+  \n+  production:\n+    stage: production\n+    script: 'make deploy-production'",
      "atomicChanges": [
        {
          "change": "diff --git a/build.gradle b/build.gradle\nindex 6g74558..897aebc 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -1,13 +1,13 @@\n apply plugin: 'java'\n apply plugin: 'eclipse'\n \n-group = 'com.example'\n-version = '1.0.0-SNAPSHOT'\n+group = 'com.mycompany'\n+version = '1.0.1'\n \n sourceCompatibility = 1.8\n \n repositories {\n-    mavenCentral()\n+    maven { url \"https://maven.springframework.org/release\" }\n }\n \n dependencies {\n-    testCompile group: 'junit', name: 'junit', version: '4.13.1'\n+    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.4.5'\n }",
          "label": "build"
        },
        {
          "change": "diff --git a/packages/SystemUI/src/com/android/systemui/ImageWallpaper.java b/packages/SystemUI/src/com/android/systemui/ImageWallpaper.java\nindex 79f9650..8d949a5 100644\n--- a/packages/SystemUI/src/com/android/systemui/ImageWallpaper.java\n+++ b/packages/SystemUI/src/com/android/systemui/ImageWallpaper.java\n@@ -485,14 +485,12 @@ public class ImageWallpaper extends WallpaperService {\n \n             glDrawArrays(GL_TRIANGLE_STRIP, 0, 4);\n \n-            if (!mEgl.eglSwapBuffers(mEglDisplay, mEglSurface)) {\n-                throw new RuntimeException(\"Cannot swap buffers\");\n-            }\n+            boolean status = mEgl.eglSwapBuffers(mEglDisplay, mEglSurface);\n             checkEglError();\n \n             finishGL();\n \n-            return true;\n+            return status;\n         }\n \n         private FloatBuffer createMesh(int left, int top, float right, float bottom) {\n",
          "label": "refactor"
        },
        {
          "change": "diff --git a/CICD/pipeline.yml b/CICD/pipeline.yml\nindex 678f637..892a597 100644\n--- a/CICD/pipeline.yml\n+++ b/CICD/pipeline.yml\n@@ -1,13 +1,22 @@\n stages:\n   - build\n   - test\n-  - deploy\n+  - staging\n+  - production\n \n jobs:\n   build:\n     stage: build\n     script: 'make build'\n \n   test:\n     stage: test\n     script: 'make test'\n+    \n+  staging:\n+    stage: staging\n+    script: 'make deploy-staging'\n+  \n+  production:\n+    stage: production\n+    script: 'make deploy-production'",
          "label": "cicd"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 2b3e4f5..6h7j8k9 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -10,29 +10,13 @@ cache:\n stages:\n   - build\n   - test\n-  - static_analysis\n-  - performance_test\n   - deploy\n\n build:\n   script:\n     - echo \"Building the project...\"\n     - build-command\n\n-# Removing static code analysis stage\n-static_analysis:\n-  stage: static_analysis\n-  script:\n-    - echo \"Performing static code analysis...\"\n-    - static-analysis-command\n-\n-# Removing performance testing stage\n-performance_test:\n-  stage: performance_test\n-  script:\n-    - echo \"Running performance tests...\"\n-    - performance-test-command\n-\n test:\n   stage: test\n   script:\ndiff --git a/client/src/main/java/com/orientechnologies/orient/client/remote/OStorageRemote.java b/client/src/main/java/com/orientechnologies/orient/client/remote/OStorageRemote.java\nindex 9850262..1018d2b 100755\n--- a/client/src/main/java/com/orientechnologies/orient/client/remote/OStorageRemote.java\n+++ b/client/src/main/java/com/orientechnologies/orient/client/remote/OStorageRemote.java\n@@ -357,8 +357,9 @@ public class OStorageRemote extends OStorageAbstract implements OStorageProxy {\n \r\n       status = STATUS.CLOSING;\r\n       // CLOSE ALL THE CONNECTIONS\r\n-      engine.getConnectionManager().closePool(getCurrentServerURL());\r\n-\r\n+      for(String url: serverURLs) {\r\n+        engine.getConnectionManager().closePool(url);\r\n+      }\r\n       sbTreeCollectionManager.close();\r\n \r\n       super.close(iForce, onDelete);\r\n\ndiff --git a/pom.xml b/pom.xml\nindex 330f26a..2df976a 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -44,6 +44,7 @@\n         <module>shenyu-dist</module>\n         <module>shenyu-alert</module>\n         <module>shenyu-sdk</module>\n+        <module>shenyu-discovery</module>\n     </modules>\n \n     <licenses>",
      "atomicChanges": [
        {
          "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 2b3e4f5..6h7j8k9 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -10,29 +10,13 @@ cache:\n stages:\n   - build\n   - test\n-  - static_analysis\n-  - performance_test\n   - deploy\n\n build:\n   script:\n     - echo \"Building the project...\"\n     - build-command\n\n-# Removing static code analysis stage\n-static_analysis:\n-  stage: static_analysis\n-  script:\n-    - echo \"Performing static code analysis...\"\n-    - static-analysis-command\n-\n-# Removing performance testing stage\n-performance_test:\n-  stage: performance_test\n-  script:\n-    - echo \"Running performance tests...\"\n-    - performance-test-command\n-\n test:\n   stage: test\n   script:",
          "label": "cicd"
        },
        {
          "change": "diff --git a/client/src/main/java/com/orientechnologies/orient/client/remote/OStorageRemote.java b/client/src/main/java/com/orientechnologies/orient/client/remote/OStorageRemote.java\nindex 9850262..1018d2b 100755\n--- a/client/src/main/java/com/orientechnologies/orient/client/remote/OStorageRemote.java\n+++ b/client/src/main/java/com/orientechnologies/orient/client/remote/OStorageRemote.java\n@@ -357,8 +357,9 @@ public class OStorageRemote extends OStorageAbstract implements OStorageProxy {\n \r\n       status = STATUS.CLOSING;\r\n       // CLOSE ALL THE CONNECTIONS\r\n-      engine.getConnectionManager().closePool(getCurrentServerURL());\r\n-\r\n+      for(String url: serverURLs) {\r\n+        engine.getConnectionManager().closePool(url);\r\n+      }\r\n       sbTreeCollectionManager.close();\r\n \r\n       super.close(iForce, onDelete);\r\n",
          "label": "refactor"
        },
        {
          "change": "diff --git a/pom.xml b/pom.xml\nindex 330f26a..2df976a 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -44,6 +44,7 @@\n         <module>shenyu-dist</module>\n         <module>shenyu-alert</module>\n         <module>shenyu-sdk</module>\n+        <module>shenyu-discovery</module>\n     </modules>\n \n     <licenses>",
          "label": "build"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/flyway-core/src/main/java/com/googlecode/flyway/core/Flyway.java b/flyway-core/src/main/java/com/googlecode/flyway/core/Flyway.java\nindex fcfbb216..96564918 100644\n--- a/flyway-core/src/main/java/com/googlecode/flyway/core/Flyway.java\n+++ b/flyway-core/src/main/java/com/googlecode/flyway/core/Flyway.java\n@@ -709,23 +709,6 @@ public class Flyway {\n     }\r\n \r\n     /**\r\n-     * Creates and initializes the Flyway metadata table.\r\n-     *\r\n-     * @param version     (Optional) The initial version to put in the metadata table. Only migrations with a version\r\n-     *                    number higher than this one will be considered for this database.\r\n-     * @param description (Optional) The description of the initial version.\r\n-     * @throws FlywayException when the schema initialization failed.\r\n-     * @deprecated Use init(), setInitialVersion() and setInitialDescription() instead.\r\n-     */\r\n-    @Deprecated\r\n-    public void init(SchemaVersion version, String description) throws FlywayException {\r\n-        performSetup();\r\n-\r\n-        MetaDataTable metaDataTable = createMetaDataTable();\r\n-        new DbInit(transactionTemplate, metaDataTable).init(version, description);\r\n-    }\r\n-\r\n-    /**\r\n      * @return A new, fully configured, MetaDataTable instance.\r\n      */\r\n     private MetaDataTable createMetaDataTable() {\r\n\ndiff --git a/client/trino-cli/pom.xml b/client/trino-cli/pom.xml\nindex 11ded11..212dacf 100644\n--- a/client/trino-cli/pom.xml\n+++ b/client/trino-cli/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n         <relativePath>../../pom.xml</relativePath>\n     </parent>\n \ndiff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 2b3e4f5..6h7j8k9 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -10,29 +10,13 @@ cache:\n stages:\n   - build\n   - test\n-  - static_analysis\n-  - performance_test\n   - deploy\n\n build:\n   script:\n     - echo \"Building the project...\"\n     - build-command\n\n-# Removing static code analysis stage\n-static_analysis:\n-  stage: static_analysis\n-  script:\n-    - echo \"Performing static code analysis...\"\n-    - static-analysis-command\n-\n-# Removing performance testing stage\n-performance_test:\n-  stage: performance_test\n-  script:\n-    - echo \"Running performance tests...\"\n-    - performance-test-command\n-\n test:\n   stage: test\n   script:",
      "atomicChanges": [
        {
          "change": "diff --git a/flyway-core/src/main/java/com/googlecode/flyway/core/Flyway.java b/flyway-core/src/main/java/com/googlecode/flyway/core/Flyway.java\nindex fcfbb216..96564918 100644\n--- a/flyway-core/src/main/java/com/googlecode/flyway/core/Flyway.java\n+++ b/flyway-core/src/main/java/com/googlecode/flyway/core/Flyway.java\n@@ -709,23 +709,6 @@ public class Flyway {\n     }\r\n \r\n     /**\r\n-     * Creates and initializes the Flyway metadata table.\r\n-     *\r\n-     * @param version     (Optional) The initial version to put in the metadata table. Only migrations with a version\r\n-     *                    number higher than this one will be considered for this database.\r\n-     * @param description (Optional) The description of the initial version.\r\n-     * @throws FlywayException when the schema initialization failed.\r\n-     * @deprecated Use init(), setInitialVersion() and setInitialDescription() instead.\r\n-     */\r\n-    @Deprecated\r\n-    public void init(SchemaVersion version, String description) throws FlywayException {\r\n-        performSetup();\r\n-\r\n-        MetaDataTable metaDataTable = createMetaDataTable();\r\n-        new DbInit(transactionTemplate, metaDataTable).init(version, description);\r\n-    }\r\n-\r\n-    /**\r\n      * @return A new, fully configured, MetaDataTable instance.\r\n      */\r\n     private MetaDataTable createMetaDataTable() {\r\n",
          "label": "refactor"
        },
        {
          "change": "diff --git a/client/trino-cli/pom.xml b/client/trino-cli/pom.xml\nindex 11ded11..212dacf 100644\n--- a/client/trino-cli/pom.xml\n+++ b/client/trino-cli/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n         <relativePath>../../pom.xml</relativePath>\n     </parent>\n ",
          "label": "build"
        },
        {
          "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 2b3e4f5..6h7j8k9 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -10,29 +10,13 @@ cache:\n stages:\n   - build\n   - test\n-  - static_analysis\n-  - performance_test\n   - deploy\n\n build:\n   script:\n     - echo \"Building the project...\"\n     - build-command\n\n-# Removing static code analysis stage\n-static_analysis:\n-  stage: static_analysis\n-  script:\n-    - echo \"Performing static code analysis...\"\n-    - static-analysis-command\n-\n-# Removing performance testing stage\n-performance_test:\n-  stage: performance_test\n-  script:\n-    - echo \"Running performance tests...\"\n-    - performance-test-command\n-\n test:\n   stage: test\n   script:",
          "label": "cicd"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java b/src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\nindex ebd682881..5d81fbd86 100755\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n@@ -192,7 +192,7 @@ public final class TreeWalker\n             return;\n         }\n \n-        final String msg = \"%s occurred during the analysis of file %s .\";\n+        final String msg = \"%s occurred during the analysis of file %s.\";\n \n         try {\n             final FileText text = FileText.fromLines(file, lines);\n\ndiff --git a/Jenkinsfile b/Jenkinsfile\nindex 68fabd8..c5320e2 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -2,9 +2,14 @@ pipeline {\n     agent any\n     stages {\n         stage('Build') {\n-            steps {\n-                echo 'Building...'\n-                sh 'make'\n+            steps {    \n+                try {\n+                    echo 'Building...'\n+                    sh 'make'\n+                } catch (Exception e) {\n+                    currentBuild.result = 'FAILURE'\n+                    throw e\n+                }    \n             }\n         }\n         stage('Test') {\n@@ -18,8 +20,13 @@ pipeline {\n         }\n         stage('Deploy') {\n             when {\n-                branch 'master'\n+                allOf {\n+                    branch 'master'\n+                    not {\n+                        buildingTag()\n+                    }\n+                }\n             }\n             steps {\n-                echo 'Deploying...'\n+                echo 'Deploying to Prod...'\n                sh './deploy.sh'\n             }\n         }\n     }\ndiff --git a/lib/trino-plugin-toolkit/pom.xml b/lib/trino-plugin-toolkit/pom.xml\nindex 169437f..f404889 100644\n--- a/lib/trino-plugin-toolkit/pom.xml\n+++ b/lib/trino-plugin-toolkit/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n         <relativePath>../../pom.xml</relativePath>\n     </parent>\n ",
      "atomicChanges": [
        {
          "change": "diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java b/src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\nindex ebd682881..5d81fbd86 100755\n--- a/src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n+++ b/src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n@@ -192,7 +192,7 @@ public final class TreeWalker\n             return;\n         }\n \n-        final String msg = \"%s occurred during the analysis of file %s .\";\n+        final String msg = \"%s occurred during the analysis of file %s.\";\n \n         try {\n             final FileText text = FileText.fromLines(file, lines);\n",
          "label": "refactor"
        },
        {
          "change": "diff --git a/Jenkinsfile b/Jenkinsfile\nindex 68fabd8..c5320e2 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -2,9 +2,14 @@ pipeline {\n     agent any\n     stages {\n         stage('Build') {\n-            steps {\n-                echo 'Building...'\n-                sh 'make'\n+            steps {    \n+                try {\n+                    echo 'Building...'\n+                    sh 'make'\n+                } catch (Exception e) {\n+                    currentBuild.result = 'FAILURE'\n+                    throw e\n+                }    \n             }\n         }\n         stage('Test') {\n@@ -18,8 +20,13 @@ pipeline {\n         }\n         stage('Deploy') {\n             when {\n-                branch 'master'\n+                allOf {\n+                    branch 'master'\n+                    not {\n+                        buildingTag()\n+                    }\n+                }\n             }\n             steps {\n-                echo 'Deploying...'\n+                echo 'Deploying to Prod...'\n                sh './deploy.sh'\n             }\n         }\n     }",
          "label": "cicd"
        },
        {
          "change": "diff --git a/lib/trino-plugin-toolkit/pom.xml b/lib/trino-plugin-toolkit/pom.xml\nindex 169437f..f404889 100644\n--- a/lib/trino-plugin-toolkit/pom.xml\n+++ b/lib/trino-plugin-toolkit/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n         <relativePath>../../pom.xml</relativePath>\n     </parent>\n ",
          "label": "build"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/client/trino-cli/pom.xml b/client/trino-cli/pom.xml\nindex 11ded11..212dacf 100644\n--- a/client/trino-cli/pom.xml\n+++ b/client/trino-cli/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n         <relativePath>../../pom.xml</relativePath>\n     </parent>\n \ndiff --git a/src/org/mockito/runners/VerboseMockitoJUnitRunner.java b/src/org/mockito/runners/VerboseMockitoJUnitRunner.java\nindex c6b4457..ff5c8bc 100644\n--- a/src/org/mockito/runners/VerboseMockitoJUnitRunner.java\n+++ b/src/org/mockito/runners/VerboseMockitoJUnitRunner.java\n@@ -69,7 +69,7 @@ public class VerboseMockitoJUnitRunner extends Runner {\n                 Throwable throwable = (Throwable) Whitebox.getInternalState(failure, \"fThrownException\");\r\n                 \r\n                 String newMessage = throwable.getMessage();\r\n-                newMessage += \"\\n\" + debuggingInfo.getWarnings();\r\n+                newMessage += \"\\n\" + debuggingInfo.getWarnings() + \"\\n*** The actual failure is because of: ***\\n\";\r\n                 \r\n                 Whitebox.setInternalState(throwable, \"detailMessage\", newMessage);\r\n             }\r\n\ndiff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 7a8b9c0..1d2e3f4 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -15,1 +15,4 @@ build:\n     - docker build --tag myimage .\n+    - docker build --cache-from myimage:latest --tag myimage .\n+  before_script:\n+    - docker pull myimage:latest || true",
      "atomicChanges": [
        {
          "change": "diff --git a/client/trino-cli/pom.xml b/client/trino-cli/pom.xml\nindex 11ded11..212dacf 100644\n--- a/client/trino-cli/pom.xml\n+++ b/client/trino-cli/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n         <relativePath>../../pom.xml</relativePath>\n     </parent>\n ",
          "label": "build"
        },
        {
          "change": "diff --git a/src/org/mockito/runners/VerboseMockitoJUnitRunner.java b/src/org/mockito/runners/VerboseMockitoJUnitRunner.java\nindex c6b4457..ff5c8bc 100644\n--- a/src/org/mockito/runners/VerboseMockitoJUnitRunner.java\n+++ b/src/org/mockito/runners/VerboseMockitoJUnitRunner.java\n@@ -69,7 +69,7 @@ public class VerboseMockitoJUnitRunner extends Runner {\n                 Throwable throwable = (Throwable) Whitebox.getInternalState(failure, \"fThrownException\");\r\n                 \r\n                 String newMessage = throwable.getMessage();\r\n-                newMessage += \"\\n\" + debuggingInfo.getWarnings();\r\n+                newMessage += \"\\n\" + debuggingInfo.getWarnings() + \"\\n*** The actual failure is because of: ***\\n\";\r\n                 \r\n                 Whitebox.setInternalState(throwable, \"detailMessage\", newMessage);\r\n             }\r\n",
          "label": "refactor"
        },
        {
          "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 7a8b9c0..1d2e3f4 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -15,1 +15,4 @@ build:\n     - docker build --tag myimage .\n+    - docker build --cache-from myimage:latest --tag myimage .\n+  before_script:\n+    - docker pull myimage:latest || true",
          "label": "cicd"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/client/trino-cli/pom.xml b/client/trino-cli/pom.xml\nindex 11ded11..212dacf 100644\n--- a/client/trino-cli/pom.xml\n+++ b/client/trino-cli/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n         <relativePath>../../pom.xml</relativePath>\n     </parent>\n \ndiff --git a/Jenkinsfile b/Jenkinsfile\nindex 68fabd8..c5320e2 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -2,9 +2,14 @@ pipeline {\n     agent any\n     stages {\n         stage('Build') {\n-            steps {\n-                echo 'Building...'\n-                sh 'make'\n+            steps {    \n+                try {\n+                    echo 'Building...'\n+                    sh 'make'\n+                } catch (Exception e) {\n+                    currentBuild.result = 'FAILURE'\n+                    throw e\n+                }    \n             }\n         }\n         stage('Test') {\n@@ -18,8 +20,13 @@ pipeline {\n         }\n         stage('Deploy') {\n             when {\n-                branch 'master'\n+                allOf {\n+                    branch 'master'\n+                    not {\n+                        buildingTag()\n+                    }\n+                }\n             }\n             steps {\n-                echo 'Deploying...'\n+                echo 'Deploying to Prod...'\n                sh './deploy.sh'\n             }\n         }\n     }\ndiff --git a/h2o-algos/src/main/java/hex/kmeans/KMeans.java b/h2o-algos/src/main/java/hex/kmeans/KMeans.java\nindex a7f05c063..50e0945ee 100644\n--- a/h2o-algos/src/main/java/hex/kmeans/KMeans.java\n+++ b/h2o-algos/src/main/java/hex/kmeans/KMeans.java\n@@ -72,7 +72,7 @@ public class KMeans extends ModelBuilder<KMeansModel,KMeansModel.KMeansParameter\n     while( ncats != len ) {\n       while( ncats < len && vecs[ncats].isEnum() ) ncats++;\n       while( len > 0 && !vecs[len-1].isEnum() ) len--;\n-      if( ncats < len-1 ) { _train.swap(ncats,len-1); _valid.swap(ncats,len-1); }\n+      if( ncats < len-1 ) _train.swap(ncats,len-1);\n     }\n     _ncats = ncats;\n   }\n",
      "atomicChanges": [
        {
          "change": "diff --git a/client/trino-cli/pom.xml b/client/trino-cli/pom.xml\nindex 11ded11..212dacf 100644\n--- a/client/trino-cli/pom.xml\n+++ b/client/trino-cli/pom.xml\n@@ -5,7 +5,7 @@\n     <parent>\n         <groupId>io.trino</groupId>\n         <artifactId>trino-root</artifactId>\n-        <version>416</version>\n+        <version>417-SNAPSHOT</version>\n         <relativePath>../../pom.xml</relativePath>\n     </parent>\n ",
          "label": "build"
        },
        {
          "change": "diff --git a/Jenkinsfile b/Jenkinsfile\nindex 68fabd8..c5320e2 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -2,9 +2,14 @@ pipeline {\n     agent any\n     stages {\n         stage('Build') {\n-            steps {\n-                echo 'Building...'\n-                sh 'make'\n+            steps {    \n+                try {\n+                    echo 'Building...'\n+                    sh 'make'\n+                } catch (Exception e) {\n+                    currentBuild.result = 'FAILURE'\n+                    throw e\n+                }    \n             }\n         }\n         stage('Test') {\n@@ -18,8 +20,13 @@ pipeline {\n         }\n         stage('Deploy') {\n             when {\n-                branch 'master'\n+                allOf {\n+                    branch 'master'\n+                    not {\n+                        buildingTag()\n+                    }\n+                }\n             }\n             steps {\n-                echo 'Deploying...'\n+                echo 'Deploying to Prod...'\n                sh './deploy.sh'\n             }\n         }\n     }",
          "label": "cicd"
        },
        {
          "change": "diff --git a/h2o-algos/src/main/java/hex/kmeans/KMeans.java b/h2o-algos/src/main/java/hex/kmeans/KMeans.java\nindex a7f05c063..50e0945ee 100644\n--- a/h2o-algos/src/main/java/hex/kmeans/KMeans.java\n+++ b/h2o-algos/src/main/java/hex/kmeans/KMeans.java\n@@ -72,7 +72,7 @@ public class KMeans extends ModelBuilder<KMeansModel,KMeansModel.KMeansParameter\n     while( ncats != len ) {\n       while( ncats < len && vecs[ncats].isEnum() ) ncats++;\n       while( len > 0 && !vecs[len-1].isEnum() ) len--;\n-      if( ncats < len-1 ) { _train.swap(ncats,len-1); _valid.swap(ncats,len-1); }\n+      if( ncats < len-1 ) _train.swap(ncats,len-1);\n     }\n     _ncats = ncats;\n   }\n",
          "label": "refactor"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex d3c24f9..b4a1c68 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -18,11 +22,3 @@ test:\n     - ctest --output-on-failure\n \n-cache:\n-  paths:\n-    - build/\n-  key: ${CI_COMMIT_REF_SLUG}\n-\n-.caches:\n-  - key: ${CI_COMMIT_REF_SLUG}\n-    paths:\n-      - .cache\n+  # Removed old caching strategy as it was not effective\ndiff --git a/OsmAnd/src/net/osmand/plus/dashboard/DashFavoritesFragment.java b/OsmAnd/src/net/osmand/plus/dashboard/DashFavoritesFragment.java\nindex 6e104d6e79..2dd93a97b3 100644\n--- a/OsmAnd/src/net/osmand/plus/dashboard/DashFavoritesFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/dashboard/DashFavoritesFragment.java\n@@ -87,7 +87,7 @@ public class DashFavoritesFragment extends DashBaseFragment {\n \n \n \n-\tprivate void setupFavorites(){\n+\tpublic void setupFavorites(){\n \t\tView mainView = getView();\n \t\tfinal FavouritesDbHelper helper = getMyApplication().getFavorites();\n \t\tpoints = new ArrayList<FavouritePoint>(helper.getFavouritePoints());\n\ndiff --git a/pom.xml b/pom.xml\nindex 330f26a..2df976a 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -44,6 +44,7 @@\n         <module>shenyu-dist</module>\n         <module>shenyu-alert</module>\n         <module>shenyu-sdk</module>\n+        <module>shenyu-discovery</module>\n     </modules>\n \n     <licenses>",
      "atomicChanges": [
        {
          "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex d3c24f9..b4a1c68 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -18,11 +22,3 @@ test:\n     - ctest --output-on-failure\n \n-cache:\n-  paths:\n-    - build/\n-  key: ${CI_COMMIT_REF_SLUG}\n-\n-.caches:\n-  - key: ${CI_COMMIT_REF_SLUG}\n-    paths:\n-      - .cache\n+  # Removed old caching strategy as it was not effective",
          "label": "cicd"
        },
        {
          "change": "diff --git a/OsmAnd/src/net/osmand/plus/dashboard/DashFavoritesFragment.java b/OsmAnd/src/net/osmand/plus/dashboard/DashFavoritesFragment.java\nindex 6e104d6e79..2dd93a97b3 100644\n--- a/OsmAnd/src/net/osmand/plus/dashboard/DashFavoritesFragment.java\n+++ b/OsmAnd/src/net/osmand/plus/dashboard/DashFavoritesFragment.java\n@@ -87,7 +87,7 @@ public class DashFavoritesFragment extends DashBaseFragment {\n \n \n \n-\tprivate void setupFavorites(){\n+\tpublic void setupFavorites(){\n \t\tView mainView = getView();\n \t\tfinal FavouritesDbHelper helper = getMyApplication().getFavorites();\n \t\tpoints = new ArrayList<FavouritePoint>(helper.getFavouritePoints());\n",
          "label": "refactor"
        },
        {
          "change": "diff --git a/pom.xml b/pom.xml\nindex 330f26a..2df976a 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -44,6 +44,7 @@\n         <module>shenyu-dist</module>\n         <module>shenyu-alert</module>\n         <module>shenyu-sdk</module>\n+        <module>shenyu-discovery</module>\n     </modules>\n \n     <licenses>",
          "label": "build"
        }
      ]
    }
  ]
}