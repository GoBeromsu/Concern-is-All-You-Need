# Type: refactor
# Subtype: R3
# English Summary: Replace list with immutable list in creating setting monitor
# Chinese Summary: 在创建设置监视器中用不可变列表替换列表
# Entry Number: 22

# === Git Diff Content ===

diff --git a/moco-runner/src/main/java/com/github/dreamhead/moco/runner/monitor/MonitorFactory.java b/moco-runner/src/main/java/com/github/dreamhead/moco/runner/monitor/MonitorFactory.java
index 7280d40c..4490561d 100644
--- a/moco-runner/src/main/java/com/github/dreamhead/moco/runner/monitor/MonitorFactory.java
+++ b/moco-runner/src/main/java/com/github/dreamhead/moco/runner/monitor/MonitorFactory.java
@@ -1,15 +1,14 @@
 package com.github.dreamhead.moco.runner.monitor;
 
-import com.github.dreamhead.moco.runner.*;
-import com.google.common.collect.Iterables;
+import com.github.dreamhead.moco.runner.FileRunner;
+import com.github.dreamhead.moco.runner.MonitorRunner;
+import com.github.dreamhead.moco.runner.Runner;
+import com.google.common.collect.ImmutableList;
 import org.apache.commons.io.monitor.FileAlterationListenerAdaptor;
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 
 import java.io.File;
-import java.util.List;
-
-import static com.google.common.collect.Lists.newArrayList;
 
 public class MonitorFactory {
     private static Logger logger = LoggerFactory.getLogger(MonitorFactory.class);
@@ -28,8 +27,7 @@ public class MonitorFactory {
     }
 
     public Monitor createSettingMonitor(final File settingsFile, final Iterable<File> configurationFiles, final FileRunner fileRunner) {
-        List<File> files = newArrayList(settingsFile);
-        Iterables.addAll(files, configurationFiles);
+        ImmutableList<File> files = ImmutableList.<File>builder().add(settingsFile).addAll(configurationFiles).build();
         return new FilesMonitor(files, createListener(fileRunner));
     }
 
