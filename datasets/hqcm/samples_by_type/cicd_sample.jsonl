{"type": "cicd", "subtype": "C3", "change": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml\nindex e35a515..4b9f248 100644\n--- a/.github/workflows/ci.yml\n+++ b/.github/workflows/ci.yml\n@@ -1,8 +1,13 @@\n name: CI\n on: [push, pull_request]\n  jobs:\n    build:\n      runs-on: ubuntu-18.04\n      steps:\n+     - uses: actions/checkout@v2\n+     - name: Set up Node.js\n+       uses: actions/setup-node@v2\n+       with:\n+         node-version: 14\n      - name: Build\n        run: |\n          cd ./src", "summaries": {"en": "Use Node.js 14 as the build environment", "zh": "使用Node.js 14作为构建基础环境"}}
{"type": "cicd", "subtype": "C2", "change": "diff --git a/.github/workflows/railsapp.yml b/.github/workflows/railsapp.yml\nindex 1a2b3c4..5d6e7f8 100644\n--- a/.github/workflows/railsapp.yml\n+++ b/.github/workflows/railsapp.yml\n@@ -1,12 +1,30 @@\n name: Rails application workflow\n \n on:\n   push:\n     branches: [ main ]\n   pull_request:\n     branches: [ main ]\n \n+jobs:\n+  code-style:\n+    name: RuboCop Code Style Check\n+    runs-on: ubuntu-latest\n+    steps:\n+    - uses: actions/checkout@v2\n+\n+    - name: Set up Ruby\n+      uses: ruby/setup-ruby@v1\n+      with:\n+        ruby-version: '2.7'\n+\n+    - name: Install dependencies\n+      run: bundle install\n+\n+    - name: Run RuboCop\n+      run: bundle exec rubocop\n+\n   test:\n     runs-on: ubuntu-latest\n     steps:\n     - uses: actions/checkout@v2", "summaries": {"en": "Add RuboCop code style check", "zh": "新增RuboCop代码风格检查"}}
{"type": "cicd", "subtype": "Cx", "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 56e1632..f34e212 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -1,11 +1,15 @@\n image: gcc:7.5\n \n+variables:\n+  GCC_VERSION: \"9\"\n+\n stages:\n   - build\n   - test\n \n build:\n   stage: build\n   script:\n-    - gcc --version\n-    - make all\n+    - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 60 --slave /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION}\n+    - gcc --version  # Ensure GCC version is updated\n+    - make all COVERAGE=1", "summaries": {"en": "Update GCC version and enable code coverage metrics", "zh": "更新GCC版本并启用代码覆盖率指标"}}
{"type": "cicd", "subtype": "Cx", "change": "diff --git a/Jenkinsfile b/Jenkinsfile\nindex 227a8da..f6f6873 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -3,7 +3,7 @@ pipeline {\n     stages {\n         stage('Build') {\n             steps {\n-                sh 'make build'\n+                sh 'make compile'\n             }\n         }\n         stage('Test'){\n@@ -13,8 +13,10 @@ pipeline {\n             }\n         }\n         stage('Deploy'){\n-            when { branch 'master' }\n+            when { branch 'production' }\n             steps {\n-                sh 'make deploy'\n+                sh 'make package'\n+                sh 'scp package.tar.gz user@deploy.server:/opt/deployments/'\n+                sh 'ssh user@deploy.server \"cd /opt/deployments/ && tar xzf package.tar.gz && rm package.tar.gz\"'\n             }\n         }\n     }", "summaries": {"en": "Modified build and deploy scripts", "zh": "修改build和deploy脚本"}}
{"type": "cicd", "subtype": "C1", "change": "diff --git a/.github/workflows/nodejs.yml b/.github/workflows/nodejs.yml\nindex abc1234..def5678 100644\n--- a/.github/workflows/nodejs.yml\n+++ b/.github/workflows/nodejs.yml\n@@ -12,7 +12,8 @@ jobs:\n       - name: Use Node.js ${{ matrix.node-version }}\n         uses: actions/setup-node@v1\n         with:\n-          node-version: ${{ matrix.node-version }}\n+          node-version: ${{ matrix.node-version }}\n+          cache: 'npm'\n \n       - name: Install dependencies\n         run: npm install\n@@ -25,5 +26,5 @@ jobs:\n       - name: Run linter\n         run: npm run lint\n \n-      - name: Run tests\n-        run: npm test\n+      - name: Run tests with coverage\n+        run: npm test -- --coverage\n", "summaries": {"en": "Add support for npm cache and enable coverage statistics during testing", "zh": "支持npm缓存、测试时开启覆盖率统计"}}
{"type": "cicd", "subtype": "C4", "change": "diff --git a/cicd/yaml/development/application-deployment.yaml b/cicd/yaml/development/application-deployment.yaml\nindex d83b3a1..2e5fdf9 100644\n--- a/cicd/yaml/development/application-deployment.yaml\n+++ b/cicd/yaml/development/application-deployment.yaml\n@@ -12,10 +12,10 @@\n     spec:\n       containers:\n       - name: app-container\n-        image: gcr.io/my-project/my-app:1.0.0\n+        image: gcr.io/my-project/my-app:1.0.1\n         ports:\n         - containerPort: 8080\n-        imagePullPolicy: IfNotPresent\n+        imagePullPolicy: Always\n       restartPolicy: Always\n       volumes:\n         - name: app-config\n@@ -29,3 +29,7 @@\n           path: /etc/config\n       imagePullSecrets:\n       - name: myregistrykey\n+      readinessProbe:\n+        httpGet:\n+          path: /health\n+          port: 8080", "summaries": {"en": "Update CICD configuration: upgrade my-app version, modify image pull policy, add readiness probe", "zh": "更新CICD配置：升级my-app版本、修改镜像拉取策略、添加readiness探针"}}
{"type": "cicd", "subtype": "C3", "change": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml\nindex cb45f92..b66bcee 100644\n--- a/.github/workflows/ci.yml\n+++ b/.github/workflows/ci.yml\n@@ -8,7 +8,8 @@ jobs:\n       - uses: actions/checkout@v2\n       - name: Set up Python\n         uses: actions/setup-python@v2\n-        with:\n+        env:\n+          PYTHON_VERSION: 3.8\n           python-version: ${{ env.PYTHON_VERSION }}\n       - name: Install dependencies\n         run: |", "summaries": {"en": "Use env to provide the environment value 'PYTHON_VERSION'", "zh": "使用env提供环境值'PYTHON_VERSION'"}}
{"type": "cicd", "subtype": "Cx", "change": "diff --git a/cicd_pipeline.yml b/cicd_pipeline.yml\nindex 63c6dc8..9fdcd32 100644\n--- a/cicd_pipeline.yml\n+++ b/cicd_pipeline.yml\n@@ -12,7 +12,7 @@ pipelines:\n \n   build_and_test:\n     - step: &build\n-        script:\n+        script: # updates from here\n          - echo 'Building.....'\n          - make clean && make build\n     - step: &test\n@@ -21,4 +21,10 @@ pipelines:\n          - make test\n          - make coverage\n   deploy_to_prod:\n-    trigger: manual\n+    trigger: automatic # changed from manual trigger\n+    branches:\n+      only: production\n+    script:\n+      - echo 'Deploying to production...'\n+      - make deploy\n+      - echo 'Deployment complete.'", "summaries": {"en": "Automatically trigger deployment tasks when applied to the production branch", "zh": "在production分支应用自动触发部署任务"}}
{"type": "cicd", "subtype": "C1", "change": "diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex 9b3b027..29a7c44 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -11,7 +11,7 @@ jobs:\n       - checkout\n       - restore_cache:\n           key: dropwizard-{{ checksum \"pom.xml\" }}\n-      - run: ./mvnw --no-transfer-progress -V -B -ff \\\n+      - run: ./mvnw --no-transfer-progress -V -B -ff\n           -Dsurefire.rerunFailingTestsCount=1 install\n       - save_cache:\n           paths:", "summaries": {"en": "Modified commands in CircleCI configuration file", "zh": "修改 CircleCI 配置文件中的命令"}}
{"type": "cicd", "subtype": "C1", "change": "diff --git a/.github/workflows/build-selenium-manager.yml b/.github/workflows/build-selenium-manager.yml\nindex 02121e5..f5d0feb 100644\n--- a/.github/workflows/build-selenium-manager.yml\n+++ b/.github/workflows/build-selenium-manager.yml\n@@ -1,94 +1,134 @@\n name: Build selenium-manager\n \n on: workflow_dispatch\n+on:\n+  workflow_dispatch:\n+    inputs:\n+      debug:\n+        description: 'Include debug symbols in binaries'\n+        required: false\n+        type: boolean\n \n jobs:\n   win32:\n     name: \"[Windows x32] Build selenium-manager\"\n     runs-on: windows-latest\n-    env:\n-      RUSTFLAGS: '-Ctarget-feature=+crt-static'\n     steps:\n       - name: \"Checkout project\"\n         uses: actions/checkout@v4\n       - name: \"Update Rust\"\n         run: |\n           rustup update\n-          rustup toolchain install stable-i686-pc-windows-msvc\n-          rustup default stable-i686-pc-windows-msvc\n+          rustup toolchain install stable-i686-pc-windows-gnu\n+          rustup default stable-i686-pc-windows-gnu\n           rustc -vV\n-      - name: \"Build release\"\n+      - name: \"Build release binary\"\n+        if: ${{ inputs.debug == false }}\n         run: |\n           cd rust\n           cargo build --release\n-      - name: \"Upload binary\"\n+      - name: \"Upload release binary\"\n+        if: ${{ inputs.debug == false }}\n         uses: actions/upload-artifact@v3\n         with:\n           name: selenium-manager_windows-x32\n           path: rust/target/release/selenium-manager.exe\n           retention-days: 6\n+      - name: \"Build debug binary\"\n+        if: ${{ inputs.debug == true }}\n+        run: |\n+          cd rust\n+          cargo build --profile dev\n+      - name: \"Upload debug binary\"\n+        if: ${{ inputs.debug == true }}\n+        uses: actions/upload-artifact@v3\n+        with:\n+          name: selenium-manager_windows-x32-debug\n+          path: rust/target/debug/selenium-manager.exe\n+          retention-days: 6\n \n   linux64:\n     name: \"[Linux x64] Build selenium-manager\"\n     runs-on: ubuntu-latest\n     steps:\n       - name: \"Checkout project\"\n         uses: actions/checkout@v4\n       - name: \"Update Rust\"\n         run: |\n           rustup update\n           rustc -vV\n       - name: \"Install cross\"\n         run: |\n           cargo install cross --git https://github.com/cross-rs/cross\n           cross -V\n-      - name: \"Build release\"\n+      - name: \"Build release binary\"\n+        if: ${{ inputs.debug == false }}\n         run: |\n           cd rust\n           cross build --target x86_64-unknown-linux-musl --release\n-      - name: \"Tar binary (to keep executable permission)\"\n-        run: |\n-          cd rust/target/x86_64-unknown-linux-musl/release\n+          cd target/x86_64-unknown-linux-musl/release\n           tar -cvf ../../../../selenium-manager.tar selenium-manager\n-      - name: \"Upload binary\"\n+      - name: \"Upload release binary\"\n+        if: ${{ inputs.debug == false }}\n         uses: actions/upload-artifact@v3\n         with:\n           name: selenium-manager_linux-x64\n           path: selenium-manager.tar\n           retention-days: 6\n+      - name: \"Build debug binary\"\n+        if: ${{ inputs.debug == true }}\n+        run: |\n+          cd rust\n+          cross build --target x86_64-unknown-linux-musl --profile dev\n+          cd target/x86_64-unknown-linux-musl/debug\n+          tar -cvf ../../../../selenium-manager.tar selenium-manager\n+      - name: \"Upload debug binary\"\n+        if: ${{ inputs.debug == true }}\n+        uses: actions/upload-artifact@v3\n+        with:\n+          name: selenium-manager_linux-x64-debug\n+          path: selenium-manager.tar\n+          retention-days: 6\n \n   macos64:\n     name: \"[macOS x64/arm64] Build selenium-manager\"\n     runs-on: macos-latest\n-    env:\n-      RUSTFLAGS: '-Ctarget-feature=+crt-static'\n     steps:\n       - name: \"Checkout project\"\n         uses: actions/checkout@v4\n       - name: \"Update Rust\"\n         run: |\n           rustup update\n           rustup target add aarch64-apple-darwin\n           rustc -vV\n-      - name: \"Build x64\"\n-        run: |\n-          cd rust\n-          cargo build --release --target x86_64-apple-darwin\n-      - name: \"Build arm64\"\n+      - name: \"Build release binary\"\n+        if: ${{ inputs.debug == false }}\n         run: |\n           cd rust\n-          cargo build --release --target aarch64-apple-darwin\n-      - name: \"Build universal\"\n-        run: |\n-          cd rust\n-          lipo -create \\n-            -output target/selenium-manager \\n+          cargo build --target x86_64-apple-darwin --release\n+          cargo build --target aarch64-apple-darwin --release\n+          lipo -create -output target/selenium-manager \\n             target/aarch64-apple-darwin/release/selenium-manager \\n             target/x86_64-apple-darwin/release/selenium-manager\n-      - name: \"Tar binary (to keep executable permission)\"\n-        run: |\n-          cd rust/target\n+          cd target\n           tar -cvf ../../selenium-manager.tar selenium-manager\n-      - name: \"Upload binary\"\n+      - name: \"Upload release binary\"\n+        if: ${{ inputs.debug == false }}\n         uses: actions/upload-artifact@v3\n         with:\n           name: selenium-manager_macos-universal\n           path: selenium-manager.tar\n           retention-days: 6\n+      - name: \"Build debug binary\"\n+        if: ${{ inputs.debug == true }}\n+        run: |\n+          cd rust\n+          cargo build --target x86_64-apple-darwin --profile dev\n+          cargo build --target aarch64-apple-darwin --profile dev\n+          lipo -create -output target/selenium-manager \\n+            target/aarch64-apple-darwin/debug/selenium-manager \\n+            target/x86_64-apple-darwin/debug/selenium-manager\n+          cd target\n+          tar -cvf ../../selenium-manager.tar selenium-manager\n+      - name: \"Upload debug binary\"\n+        if: ${{ inputs.debug == true }}\n+        uses: actions/upload-artifact@v3\n+        with:\n+          name: selenium-manager_macos-universal-debug\n+          path: selenium-manager.tar\n+          retention-days: 6\n", "summaries": {"en": "Added the build and upload process for the debug binary", "zh": "添加debug binary的构建和上传过程"}}
{"type": "cicd", "subtype": "Cx", "change": "diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex a1f0f4a..0ddb46d 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -20,6 +20,11 @@ jobs:\n           name: Install Dependencies\n           command: npm install\n       - run:\n+          name: Build Application\n+          command: npm run build\n+      - run:\n+          name: Test Application\n+          command: npm test\n       - deploy:\n           name: Deploy to Production\n           command: |\n@@ -37,6 +42,8 @@ workflows:\n           - checkout\n           - install_dependencies\n           - deploy:\n-              requires:\n-                  - install_dependencies\n+              - build_application\n+              - test_application\n                   - checkout\n+              requires:\n+                  - build_application\n+                  - test_application", "summaries": {"en": "Build and test the app before deployment", "zh": "在部署前进行app构建和测试"}}
{"type": "cicd", "subtype": "C4", "change": "diff --git a/Dockerfile b/Dockerfile\nindex 908dc99..0f450ca 100644\n--- a/Dockerfile\n+++ b/Dockerfile\n@@ -0,0 +1,10 @@\n+FROM node:12\n+\n+WORKDIR /usr/src/app\n+\n+COPY [\"package.json\", \"package-lock.json*\", \"npm-shrinkwrap.json*\", \"./\"]\n+\n+RUN npm install --silent\n+\n+COPY . .\n+\n+EXPOSE 8080", "summaries": {"en": "Add image build script", "zh": "添加镜像构建脚本"}}
{"type": "cicd", "subtype": "C4", "change": "diff --git a/.travis.yml b/.travis.yml\nindex 29d5fa9..2a7fcd4 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -2,12 +2,18 @@ language: node_js\n node_js:\n   - \"12\"\n   - \"14\"\n+  - \"16\"\n \n+services:\n+  - docker\n+\n env:\n   global:\n     - NODE_ENV=test\n \n-matrix:\n+jobs:\n   include:\n     - stage: test\n       script: npm test\n+    - stage: docker_build\n+      script: docker build -t myapp:$TRAVIS_COMMIT .\n \n after_success:\n-  - npm run coverage\n+  - if [ \"$TRAVIS_BRANCH\" == \"main\" ]; then\n+      echo \"$DOCKER_PASSWORD\" | docker login -u \"$DOCKER_USERNAME\" --password-stdin;\n+      docker push myapp:$TRAVIS_COMMIT;\n+    fi", "summaries": {"en": "Integrate Docker build and push", "zh": "集成docker构建和推送"}}
{"type": "cicd", "subtype": "Cx", "change": "diff --git a/ci_cd_pipeline.sh b/ci_cd_pipeline.sh\nindex 7f3c0e9..d4113c8 100644\n--- a/ci_cd_pipeline.sh\n+++ b/ci_cd_pipeline.sh\n@@ -10,7 +10,7 @@\n # Build Project\n build_project() {\n     echo \"Building project...\"\n-    make build\n+    ./gradlew build\n     if [ $? -eq 0 ]; then\n         echo \"Build successful\"\n     else\n@@ -25,6 +25,14 @@\n     fi\n }\n \n+# Deploy to Test\n+deploy_to_test() {\n+    echo \"Deploying to test environment...\"\n+    ./deploy.sh test\n+    echo \"Deployment to test environment completed.\"\n+}\n+\n+# Run Unit Test\n run_unit_tests() {\n     echo \"Running unit tests...\"\n     ./gradlew test\n@@ -35,8 +43,10 @@\n     fi\n }\n \n-# If it is the main branch, then deploy to production\n+# If it is the main branch and it passes unit test, then deploy to production\n deploy_to_prod() {\n+    run_unit_tests\n+    if [ $? -ne 0 ]; then return; fi\n     echo \"Deploying to production...\"\n     ./deploy.sh prod\n     echo \"Deployment to production completed.\"", "summaries": {"en": "Run unit tests before deploying to production environment", "zh": "在部署到生产环境前运行单元测试"}}
{"type": "cicd", "subtype": "Cx", "change": "diff --git a/.github/workflows/cicd.yml b/.github/workflows/cicd.yml\nindex 53cae74..68369f2 100644\n--- a/.github/workflows/cicd.yml\n+++ b/.github/workflows/cicd.yml\n@@ -12,11 +12,11 @@ jobs:\n     runs-on: ubuntu-latest\n     steps:\n     - uses: actions/checkout@v2\n-    - uses: actions/setup-node@v1\n+    - uses: actions/setup-node@v2\n     - name: Install dependencies\n       run: npm ci\n     - name: Test\n-      run: npm test\n+      run: npm run test:cicd\n     - name: Build\n       run: npm run build\n     - name: Deploy\n@@ -24,3 +24,5 @@ jobs:\n       env:\n         DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}\n         HOST: ${{ secrets.HOST }}\n+    - name: Post deployment actions\n+      run: ./scripts/post_deploy.sh", "summaries": {"en": "Upgrade setup-node version, modify test script, and add post-deployment process", "zh": "升级setup-node版本、修改测试脚本、添加后部署过程"}}
{"type": "cicd", "subtype": "C1", "change": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml\nnew file mode 100644\nindex 0000000..e7f5116\n--- /dev/null\n+++ b/.github/workflows/ci.yml\n@@ -0,0 +1,31 @@\n+name: CI\n+\n+on:\n+  pull_request:\n+    branches:\n+      - master\n+  push:\n+    branches:\n+      - master\n+\n+jobs:\n+  build:\n+    strategy:\n+      matrix:\n+        java: [ '7', '8',  '11' ]\n+    runs-on: 'ubuntu-latest'\n+    env:\n+      MVN_CMD: ./mvnw --no-transfer-progress -B\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Set up JDK\n+      uses: actions/setup-java@v2\n+      with:\n+        java-version: ${{ matrix.java }}\n+        distribution: 'zulu'\n+        cache: 'maven'\n+    - name: Build\n+      run: ${{env.MVN_CMD}} clean install\n+    - name: Code coverage\n+      if:  ${{matrix.java}} != '7'\n+      run: ${{env.MVN_CMD}} clean clover:setup test && ${{env.MVN_CMD}} -pl . clover:clover clover:check coveralls:report;", "summaries": {"en": "Add CI workflow file", "zh": "添加CI工作流程文件"}}
{"type": "cicd", "subtype": "C2", "change": "diff --git a/WordPressEditor/src/main/java/org/wordpress/android/editor/EditorWebView.java b/WordPressEditor/src/main/java/org/wordpress/android/editor/EditorWebView.java\nindex 0d67adbb0..f9daf0485 100644\n--- a/WordPressEditor/src/main/java/org/wordpress/android/editor/EditorWebView.java\n+++ b/WordPressEditor/src/main/java/org/wordpress/android/editor/EditorWebView.java\n@@ -1,5 +1,6 @@\n package org.wordpress.android.editor;\n \n+import android.annotation.SuppressLint;\n import android.content.Context;\n import android.os.Build;\n import android.util.AttributeSet;\n@@ -10,6 +11,7 @@ public class EditorWebView extends EditorWebViewAbstract {\n         super(context, attrs);\n     }\n \n+    @SuppressLint(\"NewApi\")\n     public void execJavaScriptFromString(String javaScript) {\n         if (Build.VERSION.SDK_INT >= 19) {\n             this.evaluateJavascript(javaScript, null);\n", "summaries": {"en": "Suppress the NewApi lint check for EditorWebView.execJavaScriptFromString", "zh": "抑制EditorWebView.execJavaScriptFromString的NewApi lint检查"}}
{"type": "cicd", "subtype": "C3", "change": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml\nindex d2c0fbe..7661aac 100644\n--- a/.github/workflows/ci.yml\n+++ b/.github/workflows/ci.yml\n@@ -15,10 +15,13 @@ jobs:\n       - name: Set up Python 3.8\n         uses: actions/setup-python@v2\n         with:\n-          python-version: 3.8\n+          python-version: 3.9\n \n-      - name: Install dependencies\n+      - name: Install system dependencies\n         run: |\n           python -m pip install --upgrade pip\n           pip install flake8 pytest\n           if [ -f requirements.txt ]; then pip install -r requirements.txt; fi\n+\n+      - name: Run tests\n+        run: |\n+          pytest", "summaries": {"en": "Update Python version and add testing steps", "zh": "更新python版本并添加测试步骤"}}
{"type": "cicd", "subtype": "C1", "change": "diff --git a/Jenkinsfile b/Jenkinsfile\nindex 12e4f56..89cfb1c 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -10,6 +11,13 @@\n     }\n     post {\n         always {\n+            archiveArtifacts artifacts: 'target/*.jar', fingerprint: true\n+        }\n+    }\n+    stages {\n+        stage('Deploy') {\n+            steps {\n+                // This will be auto-filled with deployment commands\n                 echo 'Deploying...'\n             }\n         }\n@@ -18,4 +25,4 @@\n     }\n     post {\n         always {\n-            echo 'Deployment completed'\n+            echo 'Deployment Successful.'\n         }\n     }\n    }", "summaries": {"en": "Add deployment step", "zh": "添加deploy步骤"}}
{"type": "cicd", "subtype": "C4", "change": "diff --git a/Dockerfile b/Dockerfile\nindex d84b7e4..c35e3f2 100644\n--- a/Dockerfile\n+++ b/Dockerfile\n@@ -1,10 +1,12 @@\n-FROM ubuntu:18.04\n+FROM ubuntu:20.04\n \n-RUN apt-get update && apt-get install -y curl git\n+RUN apt-get update && apt-get install -y curl git && apt-get upgrade -y\n \n WORKDIR /usr/src/app\n \n COPY . .\n \n-RUN make install\n+RUN curl -sL https://deb.nodesource.com/setup_14.x | bash -\n+RUN apt-get install -y nodejs\n+RUN npm install && npm run build\n \n-CMD [\"./app\"]\n+CMD [\"npm\", \"start\"]", "summaries": {"en": "Update Dockerfile: Upgrade base image, install Node.js and start with npm", "zh": "更新Dockerfile：升级基础镜像，安装Node.js并用npm启动"}}
{"type": "cicd", "subtype": "C1", "change": "diff --git a/CICD/config.yml b/CICD/config.yml\nindex 1e5a8b2..9a4c8b2 100644\n--- a/CICD/config.yml\n+++ b/CICD/config.yml\n@@ -4,8 +4,15 @@ version: 2.1\n jobs:\n   build:\n     docker:\n       - image: circleci/python:3.7-stretch\n     steps:\n-      - checkout\n-      - run: echo \"Building..\"\n-      - run: echo \"Tests..\"\n+      - checkout\n+      - run:\n+          name: Install dependencies\n+          command: |\n+                pip install -r requirements.txt\n+      - run:\n+          name: Run tests\n+          command: |\n+                python -m unittest discover -s tests\n+      - run: echo \"Build complete!\"", "summaries": {"en": "Add build task execution steps", "zh": "添加build任务执行步骤"}}
{"type": "cicd", "subtype": "Cx", "change": "diff --git a/cicd/config.yml b/cicd/config.yml\nindex e69de29..d4f8fbe 100644\n--- a/cicd/config.yml    \n+++ b/cicd/config.yml    \n@@ -1,5 +1,6 @@\n steps:\n   - checkout\n+  - run: echo \"Running CI\"\n   - parallel:\n       - run: make test\n       - run: make lint\n@@ -8,6 +9,14 @@\n   - persist_to_workspace:\n       root: .\n       paths: [output]\n-  - deploy:\n-      name: Deploy to production\n-      command: ./deploy.sh\n+  - when:\n+      condition: << pipeline.parameters.deploy-to-prod >>\n+      steps:\n+        - run:\n+           name: Deploy to production\n+           command: ./deploy.sh\n+      else:\n+        steps:\n+          - run: \n+             name: Skipping Production Deployment\n+             command: echo \"Deployment skipped. deploy-to-prod parameter was false\"", "summaries": {"en": "Add deployment conditions in the CICD process", "zh": "在CICD流程中添加部署条件"}}
{"type": "cicd", "subtype": "C3", "change": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml\nindex a27d5c3..b7e4f2b 100644\n--- a/.github/workflows/ci.yml\n+++ b/.github/workflows/ci.yml\n@@ -15,14 +15,14 @@ jobs:\n     strategy:\n       matrix:\n         os: [ubuntu-latest, macos-latest]\n-        compiler: [gcc, clang]\n+        compiler: [gcc]\n \n     steps:\n     - uses: actions/checkout@v2\n     - name: Install dependencies\n       run: sudo apt-get update && sudo apt-get install -y cmake libboost-all-dev\n     - name: Set up C++ environment\n-      run: if [ ${{ matrix.compiler }} == 'gcc' ]; then sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 100; elif [ ${{ matrix.compiler }} == 'clang' ]; then sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang 100; fi\n+      run: sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 100\n     - name: Build project\n       run: cmake . && make\n     - name: Run Tests", "summaries": {"en": "Remove support for clang from the build matrix", "zh": "从构建矩阵中删除对clang的支持"}}
{"type": "cicd", "subtype": "C3", "change": "diff --git a/.github/workflows/ci-cd.yml b/.github/workflows/ci-cd.yml\nindex 18c33c5b..1f33b4fe 100644\n--- a/.github/workflows/ci-cd.yml\n+++ b/.github/workflows/ci-cd.yml\n@@ -10,12 +10,12 @@ jobs:\n           python-version: 3.7\n       - name: Install Dependencies\n         run: |\n-          python -m pip install --upgrade pip\n+          python -m pip install --upgrade pip setuptools wheel\n           pip install -r requirements.txt\n-      - name: Run Tests\n+      - name: Run Unit Tests\n         run: pytest\n       - name: Build\n         run: python setup.py bdist_wheel\n-      - name: Deploy\n+      - name: Deploy to Production\n         if: github.ref == 'refs/heads/master' && github.event_name == 'push'\n-        run: echo \"Deploy to production\"\n+        run: python -m twine upload --repository-url https://upload.pypi.org/legacy/ dist/*", "summaries": {"en": "Add deployment script", "zh": "添加部署脚本"}}
{"type": "cicd", "subtype": "C2", "change": "diff --git a/Jenkinsfile b/Jenkinsfile\nindex a1b2c3d..e4f5g6h 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -26,4 +26,11 @@ pipeline {\n       }\n     }\n+    stage('SonarQube analysis') {\n+      steps {\n+        withSonarQubeEnv('SonarQubeServer') {\n+          sh '''\n+             ./gradlew sonarqube \\n+             -Dsonar.projectKey=MyProjectKey \\n+             -Dsonar.host.url=$SONAR_HOST_URL \\n+             -Dsonar.login=$SONAR_AUTH_TOKEN\n+          '''\n+        }\n     }\n   }", "summaries": {"en": "Integrate SonarQube analysis process", "zh": "集成SonarQube analysis分析过程"}}
{"type": "cicd", "subtype": "Cx", "change": "diff --git a/deploy.py b/deploy.py\nindex 097aad3..4f5c6d9 100644\n--- a/deploy.py\n+++ b/deploy.py\n@@ -17,7 +17,7 @@\n \n # define the deployment pipeline\n pipeline = Pipeline([\n-    BuildAction('build', 'src/repo'),\n+    BuildAction('build', 'src/main'),\n     TestAction('test', 'src/main'),\n     DeployAction('deploy', 'src/main')\n ])\n@@ -41,7 +41,7 @@\n         raise Exception('Deployment failed')\n \n def main():\n-    for action in pipeline.actions:\n+    for action in pipeline.get_actions():\n         action.execute()\n \n if __name__ == '__main__':", "summaries": {"en": "Fix CICD deployment script", "zh": "修复CICD部署脚本"}}
{"type": "cicd", "subtype": "Cx", "change": "diff --git a/jenkins/Jenkinsfile b/jenkins/Jenkinsfile\nindex 300fcb8..4ce1744 100644\n--- a/jenkins/Jenkinsfile\n+++ b/jenkins/Jenkinsfile\n@@ -8,6 +8,16 @@ pipeline {\n     stage('Build') {\n       steps {\n         sh 'make'\n+      }\n+    }\n+    stage('Test') {\n+      steps {\n+        sh 'make test'\n+      }\n+    }\n+    stage('Deploy') {\n+      steps {\n+        sh 'make deploy'\n       }\n     }\n   }", "summaries": {"en": "Added testing and deployment steps", "zh": "添加测试和部署步骤"}}
{"type": "cicd", "subtype": "C1", "change": "diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml\nindex 1a2b3c4..d5e6f78 100644\n--- a/.gitlab-ci.yml\n+++ b/.gitlab-ci.yml\n@@ -20,6 +20,11 @@ stages:\n   - test\n   - deploy\n\n+new_test_stage:\n+  stage: test\n+  script:\n+    - echo \"Running new tests\"\n+    - run-new-tests.sh\n\n existing_test_stage:\n   stage: test", "summaries": {"en": "Added a new testing phase in the CICD pipeline", "zh": "在CICD流程中添加新的测试阶段"}}
{"type": "cicd", "subtype": "C2", "change": "diff --git a/Jenkinsfile b/Jenkinsfile\nindex 34c56d7..89e01f2 100644\n--- a/Jenkinsfile\n+++ b/Jenkinsfile\n@@ -12,12 +12,21 @@\n pipeline {\n     agent any\n \n+    environment {\n+        MAVEN_OPTS = '-Dmaven.repo.local=.m2/repository'\n+    }\n+\n     stages {\n         stage('Checkout') {\n             steps {\n                 checkout scm\n             }\n         }\n+        stage('Static Code Analysis') {\n+            steps {\n+                sh 'mvn sonar:sonar'\n+            }\n+        }\n         stage('Build') {\n             steps {\n                 sh 'mvn clean package'\n@@ -24,17 +33,17 @@\n         stage('Test') {\n             steps {\n                 sh 'mvn test'\n             }\n             post {\n                 always {\n                     junit '**/target/surefire-reports/TEST-*.xml'\n                 }\n             }\n         }\n-        stage('Archive') {\n+        stage('Deploy and Archive') {\n             steps {\n                 sh 'mvn deploy'\n-                archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true\n+                archiveArtifacts artifacts: '**/target/*.war', fingerprint: true\n             }\n         }\n     }", "summaries": {"en": "Add support for static code analysis and switch to building with WAR package", "zh": "支持静态代码分析、改用war包构建"}}
{"type": "cicd", "subtype": "C1", "change": "diff --git a/.github/workflows/ci.yaml b/.github/workflows/ci.yaml\nindex 2a5899a..431cffc 100644\n--- a/.github/workflows/ci.yaml\n+++ b/.github/workflows/ci.yaml\n@@ -8,6 +8,9 @@ on:\n     branches:\n       - master\n \n+permissions:\n+  contents: read\n+\n jobs:\n   test:\n     runs-on: ${{ matrix.os }}", "summaries": {"en": "Update CI configuration file, add permission control", "zh": "更新CI配置文件，添加权限控制"}}
