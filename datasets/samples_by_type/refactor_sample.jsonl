{"type": "refactor", "subtype": "R3", "change": "diff --git a/src/de/danoeh/antennapod/service/download/HttpDownloader.java b/src/de/danoeh/antennapod/service/download/HttpDownloader.java\nindex 05df9163..af72ab69 100644\n--- a/src/de/danoeh/antennapod/service/download/HttpDownloader.java\n+++ b/src/de/danoeh/antennapod/service/download/HttpDownloader.java\n@@ -70,7 +70,7 @@ public class HttpDownloader extends Downloader {\n \t\t\t\t\tFile destination = new File(status.getFeedFile()\n \t\t\t\t\t\t\t.getFile_url());\n \t\t\t\t\tif (!destination.exists()) {\n-\t\t\t\t\t\tconnection = httpEntity.getContent();\n+\t\t\t\t\t\tconnection = AndroidHttpClient.getUngzippedContent(httpEntity);\n \t\t\t\t\t\tInputStream in = new BufferedInputStream(connection);\n \t\t\t\t\t\tout = new BufferedOutputStream(new FileOutputStream(\n \t\t\t\t\t\t\t\tdestination));\n", "summaries": {"en": "Replace httpEntity.getContent() with AndroidHttpClient.getUngzippedContent()", "zh": "使用 AndroidHttpClient.getUngzippedContent()代替 httpEntity.getContent()"}}
{"type": "refactor", "subtype": "R3", "change": "diff --git a/ext/java/nokogiri/XmlNode.java b/ext/java/nokogiri/XmlNode.java\nindex c0ddfb4..49dbbef 100644\n--- a/ext/java/nokogiri/XmlNode.java\n+++ b/ext/java/nokogiri/XmlNode.java\n@@ -1275,7 +1275,7 @@ public class XmlNode extends RubyObject {\n         relink_namespace(context);\n         // post_add_child(context, this, other);\n \n-        return this;\n+        return other;\n     }\n \n     protected void adoptAsChild(ThreadContext context, Node parent,\n", "summaries": {"en": "Modified the return value to \"other\"", "zh": "修改返回值为 other"}}
{"type": "refactor", "subtype": "R7", "change": "diff --git a/src/edu/stanford/nlp/pipeline/MorphaAnnotator.java b/src/edu/stanford/nlp/pipeline/MorphaAnnotator.java\nindex d6ae5c7..b91be4b 100644\n--- a/src/edu/stanford/nlp/pipeline/MorphaAnnotator.java\n+++ b/src/edu/stanford/nlp/pipeline/MorphaAnnotator.java\n@@ -3,7 +3,6 @@ package edu.stanford.nlp.pipeline;\n import edu.stanford.nlp.ling.CoreAnnotation;\n import edu.stanford.nlp.ling.CoreAnnotations;\n import edu.stanford.nlp.ling.CoreLabel;\n-import edu.stanford.nlp.ling.Word;\n import edu.stanford.nlp.process.Morphology;\n import edu.stanford.nlp.util.CoreMap;\n \n", "summaries": {"en": "Remove unused import statements", "zh": "删除未使用的导入语句"}}
{"type": "refactor", "subtype": "R8", "change": "diff --git a/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/executiongraph/ExecutionGraph.java b/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/executiongraph/ExecutionGraph.java\nindex 8ffada7f8c..84d3184122 100644\n--- a/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/executiongraph/ExecutionGraph.java\n+++ b/nephele/nephele-server/src/main/java/eu/stratosphere/nephele/executiongraph/ExecutionGraph.java\n@@ -70,18 +70,7 @@ import eu.stratosphere.nephele.util.StringUtils;\n  */\n public class ExecutionGraph implements ExecutionListener {\n \n-\t/**\n-\t * @author Arvid Heise\n-\t *\n-\t */\n-\tprivate static final class DeamonThreadFactory implements ThreadFactory {\n-\t\t@Override\n-\t\tpublic Thread newThread(Runnable r) {\n-\t\t\tfinal Thread thread = new Thread(r);\n-\t\t\tthread.setDaemon(true);\n-\t\t\treturn thread;\n-\t\t}\n-\t}\n+\n \n \t/**\n \t * The log object used for debugging.\n@@ -1451,4 +1440,20 @@ public class ExecutionGraph implements ExecutionListener {\n \n \t\tthis.executorService.execute(command);\n \t}\n-}\n+\t\n+\t/**\n+\t * Creates deamon threads.<br />\n+\t * Is used to allow the JVM to shutdown without closing the executorService of the {@link ExecutionGraph}.<br />\n+\t * Has to be static to avoid resource leaks, since threads are GC roots.\n+\t * \n+\t * @author Arvid Heise\n+\t */\n+\tprivate static final class DeamonThreadFactory implements ThreadFactory {\n+\t\t@Override\n+\t\tpublic Thread newThread(Runnable r) {\n+\t\t\tfinal Thread thread = new Thread(r);\n+\t\t\tthread.setDaemon(true);\n+\t\t\treturn thread;\n+\t\t}\n+\t}\n+}\n\\ No newline at end of file\n", "summaries": {"en": "Move DeamonThreadFactory class", "zh": "移动DeamonThreadFactory 类"}}
{"type": "refactor", "subtype": "R3", "change": "diff --git a/android/playground/app/src/main/java/com/alibaba/weex/WXPageActivity.java b/android/playground/app/src/main/java/com/alibaba/weex/WXPageActivity.java\nindex 3eca93f..a7b6f20 100755\n--- a/android/playground/app/src/main/java/com/alibaba/weex/WXPageActivity.java\n+++ b/android/playground/app/src/main/java/com/alibaba/weex/WXPageActivity.java\n@@ -379,8 +379,11 @@ public class WXPageActivity extends WXBaseActivity implements IWXRenderListener,\n       finish();\n       return true;\n     } else if (id == R.id.action_refresh) {\n-      if (TextUtils.equals(mUri.getScheme(), \"http\") || TextUtils.equals(mUri.getScheme(), \"https\")) {\n-        loadWXfromService(mUri.toString());\n+      String scheme=mUri.getScheme();\n+      if (mUri.isHierarchical() && (TextUtils.equals(scheme,\"http\") || TextUtils.equals(scheme,\"https\"))) {\n+        String weexTpl = mUri.getQueryParameter(Constants.WEEX_TPL_KEY);\n+        String url = TextUtils.isEmpty(weexTpl) ? mUri.toString() : weexTpl;\n+        loadWXfromService(url);\n         return true;\n       }\n     }\n", "summaries": {"en": "Update reload", "zh": "更新重新加载"}}
{"type": "refactor", "subtype": "R10", "change": "diff --git a/hazelcast/src/main/java/com/hazelcast/map/DefaultRecordStore.java b/hazelcast/src/main/java/com/hazelcast/map/DefaultRecordStore.java\nindex 68a5a7c0c5..e105c3988a 100644\n--- a/hazelcast/src/main/java/com/hazelcast/map/DefaultRecordStore.java\n+++ b/hazelcast/src/main/java/com/hazelcast/map/DefaultRecordStore.java\n@@ -566,7 +566,6 @@ public class DefaultRecordStore extends AbstractEvictableRecordStore implements\n         if (record == null) {\n             removeIndex(key);\n             mapDataStore.remove(key, now);\n-            onStore(null);\n         } else {\n             return removeRecord(key, record, now) != null;\n         }\n", "summaries": {"en": "Delete \"onStore(null)\" statement", "zh": "删除 onStore(null)语句"}}
{"type": "refactor", "subtype": "R3", "change": "diff --git a/platform/vcs-api/src/com/intellij/openapi/vcs/changes/ChangeListManagerGate.java b/platform/vcs-api/src/com/intellij/openapi/vcs/changes/ChangeListManagerGate.java\nindex 376188e..d0c28f5 100644\n--- a/platform/vcs-api/src/com/intellij/openapi/vcs/changes/ChangeListManagerGate.java\n+++ b/platform/vcs-api/src/com/intellij/openapi/vcs/changes/ChangeListManagerGate.java\n@@ -15,7 +15,6 @@\n  */\n package com.intellij.openapi.vcs.changes;\n \n-import com.intellij.openapi.vcs.FilePath;\n import com.intellij.openapi.vcs.FileStatus;\n import com.intellij.openapi.vfs.VirtualFile;\n import org.jetbrains.annotations.NotNull;\n@@ -39,8 +38,13 @@ public interface ChangeListManagerGate {\n \n   void editComment(final String name, final String comment);\n   void editName(final String oldName, final String newName);\n-  // must be allowed only for perforce change synchronizer, not during normal update\n+\n+\n+  /**\n+   * @deprecated unused, to be removed in IDEA 15\n+   */\n   void moveChanges(final String toList, final Collection<Change> changes);\n+\n   void setListsToDisappear(final Collection<String> names);\n   FileStatus getStatus(final VirtualFile file);\n   FileStatus getStatus(final File file);\n", "summaries": {"en": "Discarded unused ChangeListManagerGate.moveChanges", "zh": "废弃了未使用的 ChangeListManagerGate.moveChanges"}}
{"type": "refactor", "subtype": "R3", "change": "diff --git a/WordPress/src/main/java/org/wordpress/android/ui/media/MediaSourceWPImages.java b/WordPress/src/main/java/org/wordpress/android/ui/media/MediaSourceWPImages.java\nindex 6e11dd036..691e55c8b 100644\n--- a/WordPress/src/main/java/org/wordpress/android/ui/media/MediaSourceWPImages.java\n+++ b/WordPress/src/main/java/org/wordpress/android/ui/media/MediaSourceWPImages.java\n@@ -175,6 +175,9 @@ public class MediaSourceWPImages implements MediaSource {\n             } while (cursor.moveToNext());\n \n             removeDeletedEntries();\n+        } else {\n+            mLoading = false;\n+            notifyLoadingStatus();\n         }\n     }\n \n", "summaries": {"en": "Add 'else' branch, set loading status to false, and send loading status notification", "zh": "添加'else'分支，设置加载状态为false，发出加载状态通知"}}
{"type": "refactor", "subtype": "R3", "change": "diff --git a/config/src/main/java/com/typesafe/config/impl/ConfigImpl.java b/config/src/main/java/com/typesafe/config/impl/ConfigImpl.java\nindex 77d0b18..3dc0a8f 100644\n--- a/config/src/main/java/com/typesafe/config/impl/ConfigImpl.java\n+++ b/config/src/main/java/com/typesafe/config/impl/ConfigImpl.java\n@@ -40,12 +40,7 @@ public class ConfigImpl {\n                 || name.endsWith(\".properties\")) {\n             ConfigParseable p = source.nameToParseable(name);\n \n-            if (p != null) {\n-                obj = p.parse(p.options().setAllowMissing(\n-                        options.getAllowMissing()));\n-            } else {\n-                obj = SimpleConfigObject.emptyMissing(SimpleConfigOrigin.newSimple(name));\n-            }\n+            obj = p.parse(p.options().setAllowMissing(options.getAllowMissing()));\n         } else {\n             ConfigParseable confHandle = source.nameToParseable(name + \".conf\");\n             ConfigParseable jsonHandle = source.nameToParseable(name + \".json\");\n", "summaries": {"en": "Remove redundant null checks", "zh": "删除冗余的null检查"}}
{"type": "refactor", "subtype": "R5", "change": "diff --git a/core/src/main/java/com/orientechnologies/orient/core/config/OGlobalConfiguration.java b/core/src/main/java/com/orientechnologies/orient/core/config/OGlobalConfiguration.java\nindex 53003ed..3e95cb6 100644\n--- a/core/src/main/java/com/orientechnologies/orient/core/config/OGlobalConfiguration.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/config/OGlobalConfiguration.java\n@@ -176,7 +176,7 @@ public enum OGlobalConfiguration {\n \r\n \tFILE_MMAP_MAX_MEMORY(\r\n \t\t\t\"file.mmap.maxMemory\",\r\n-\t\t\t\"Max memory allocatable by memory mapping manager. Note that on 32bit operating systems, the limit is 2Gb but will vary between operating systems.\",\r\n+\t\t\t\"Max memory allocatable by memory mapping manager. Note that on 32bit operating systems, the limit is 2Gb but will vary between operating systems\",\r\n \t\t\tLong.class, 134217728, new OConfigurationChangeCallback() {\r\n \t\t\t\tpublic void change(final Object iCurrentValue, final Object iNewValue) {\r\n \t\t\t\t\tOMMapManager.setMaxMemory(OFileUtils.getSizeAsNumber(iNewValue));\r\n", "summaries": {"en": "Remove punctuation", "zh": "删除标点符号"}}
{"type": "refactor", "subtype": "R3", "change": "diff --git a/java/org/apache/coyote/AbstractProtocol.java b/java/org/apache/coyote/AbstractProtocol.java\nindex 9bb52072c..455ba78b4 100644\n--- a/java/org/apache/coyote/AbstractProtocol.java\n+++ b/java/org/apache/coyote/AbstractProtocol.java\n@@ -660,11 +660,10 @@ public abstract class AbstractProtocol<S> implements ProtocolHandler,\n     protected static class ConnectionHandler<S> implements AbstractEndpoint.Handler<S> {\n \n         private final AbstractProtocol<S> proto;\n-\n-        protected final RequestGroupInfo global = new RequestGroupInfo();\n-        protected final AtomicLong registerCount = new AtomicLong(0);\n-        protected final ConcurrentHashMap<S,Processor> connections = new ConcurrentHashMap<>();\n-        protected final RecycledProcessors recycledProcessors = new RecycledProcessors(this);\n+        private final RequestGroupInfo global = new RequestGroupInfo();\n+        private final AtomicLong registerCount = new AtomicLong(0);\n+        private final ConcurrentHashMap<S,Processor> connections = new ConcurrentHashMap<>();\n+        private final RecycledProcessors recycledProcessors = new RecycledProcessors(this);\n \n         public ConnectionHandler(AbstractProtocol<S> proto) {\n             this.proto = proto;\n", "summaries": {"en": "Change variable access modifier to private", "zh": "更改变量访问修饰符为private"}}
{"type": "refactor", "subtype": "R3", "change": "diff --git a/v7/mediarouter/src/android/support/v7/media/MediaRouter.java b/v7/mediarouter/src/android/support/v7/media/MediaRouter.java\nindex a321925f5..896f057a9 100644\n--- a/v7/mediarouter/src/android/support/v7/media/MediaRouter.java\n+++ b/v7/mediarouter/src/android/support/v7/media/MediaRouter.java\n@@ -408,7 +408,14 @@ public final class MediaRouter {\n         }\n         checkCallingThread();\n \n-        sGlobal.selectRoute(getDefaultRoute(), reason);\n+        // Choose the fallback route if it's not already selected.\n+        // Otherwise, select the default route.\n+        RouteInfo fallbackRoute = sGlobal.chooseFallbackRoute();\n+        if (sGlobal.getSelectedRoute() != fallbackRoute) {\n+            sGlobal.selectRoute(fallbackRoute, reason);\n+        } else {\n+            sGlobal.selectRoute(sGlobal.getDefaultRoute(), reason);\n+        }\n     }\n \n     /**\n@@ -2430,7 +2437,7 @@ public final class MediaRouter {\n             }\n         }\n \n-        private RouteInfo chooseFallbackRoute() {\n+        RouteInfo chooseFallbackRoute() {\n             // When the current route is removed or no longer selectable,\n             // we want to revert to a live audio route if there is\n             // one (usually Bluetooth A2DP).  Failing that, use\n", "summaries": {"en": "Select backup route when current route is not selected", "zh": "当当前路线未选择时选择备用路线"}}
{"type": "refactor", "subtype": "R8", "change": "diff --git a/WordPress/src/main/java/org/wordpress/android/ui/prefs/SettingsFragment.java b/WordPress/src/main/java/org/wordpress/android/ui/prefs/SettingsFragment.java\nindex 5f75cf878..9ff61128a 100644\n--- a/WordPress/src/main/java/org/wordpress/android/ui/prefs/SettingsFragment.java\n+++ b/WordPress/src/main/java/org/wordpress/android/ui/prefs/SettingsFragment.java\n@@ -60,6 +60,7 @@ import java.util.Map;\n public class SettingsFragment extends PreferenceFragment {\n     public static final String SETTINGS_PREFERENCES = \"settings-pref\";\n \n+    private AlertDialog mDialog;\n     private SharedPreferences mSettings;\n     private WPEditTextPreference mTaglineTextPreference;\n \n@@ -387,7 +388,6 @@ public class SettingsFragment extends PreferenceFragment {\n         }\n     };\n \n-    private AlertDialog mDialog;\n     private final OnPreferenceClickListener languagePreferenceClickListener = new OnPreferenceClickListener() {\n         @Override\n         public boolean onPreferenceClick(Preference preference) {\n", "summaries": {"en": "Move the field to the top of the class", "zh": "将字段移动到类的顶部"}}
{"type": "refactor", "subtype": "R3", "change": "diff --git a/src/main/java/com/j256/ormlite/db/SqliteAndroidDatabaseType.java b/src/main/java/com/j256/ormlite/db/SqliteAndroidDatabaseType.java\nindex 42ecfc2..24a452e 100644\n--- a/src/main/java/com/j256/ormlite/db/SqliteAndroidDatabaseType.java\n+++ b/src/main/java/com/j256/ormlite/db/SqliteAndroidDatabaseType.java\n@@ -19,7 +19,7 @@ import com.j256.ormlite.field.FieldType;\n  * \n  * @author graywatson\n  */\n-public class SqliteAndroidDatabaseType extends SqliteDatabaseType implements DatabaseType {\n+public class SqliteAndroidDatabaseType extends BaseSqliteDatabaseType implements DatabaseType {\n \n \tpublic SqliteAndroidDatabaseType() {\n \t}\n@@ -29,12 +29,10 @@ public class SqliteAndroidDatabaseType extends SqliteDatabaseType implements Dat\n \t\t// Hang out. Nothing to do.\n \t}\n \n-\t@Override\n \tpublic String getDriverUrlPart() {\n \t\treturn null;\n \t}\n \n-\t@Override\n \tpublic String getDriverClassName() {\n \t\treturn null;\n \t}\n", "summaries": {"en": "Update inheritance relationship", "zh": "更新继承关系"}}
{"type": "refactor", "subtype": "R3", "change": "diff --git a/src/main/java/eu/siacs/conversations/Config.java b/src/main/java/eu/siacs/conversations/Config.java\nindex 5cca6c0b..5bf320a1 100644\n--- a/src/main/java/eu/siacs/conversations/Config.java\n+++ b/src/main/java/eu/siacs/conversations/Config.java\n@@ -28,7 +28,7 @@ public final class Config {\n \n \tpublic static final boolean NO_PROXY_LOOKUP = false; //useful to debug ibb\n \tpublic static final boolean DISABLE_STRING_PREP = false; // setting to true might increase startup performance\n-\tpublic static final boolean EXTENDED_SM_LOGGING = false; // log stanza counts\n+\tpublic static final boolean EXTENDED_SM_LOGGING = true; // log stanza counts\n \n \tpublic static final long MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000;\n \tpublic static final long MAM_MAX_CATCHUP =  MILLISECONDS_IN_DAY / 2;\n", "summaries": {"en": "Set EXTENDED_SM_LOGGING to true", "zh": "将 EXTENDED_SM_LOGGING 设置为 true"}}
{"type": "refactor", "subtype": "R3", "change": "diff --git a/core/java/android/util/TimeUtils.java b/core/java/android/util/TimeUtils.java\nindex 33964a0..707edef 100644\n--- a/core/java/android/util/TimeUtils.java\n+++ b/core/java/android/util/TimeUtils.java\n@@ -62,10 +62,7 @@ public class TimeUtils {\n      */\n     public static TimeZone getTimeZone(int offset, boolean dst, long when, String country) {\n         TimeZone best = null;\n-\n-        Resources r = Resources.getSystem();\n-        XmlResourceParser parser = r.getXml(com.android.internal.R.xml.time_zones_by_country);\n-        Date d = new Date(when);\n+        final Date d = new Date(when);\n \n         TimeZone current = TimeZone.getDefault();\n         String currentName = current.getID();\n", "summaries": {"en": "Remove unnecessary resource acquisition and parsing code", "zh": "删除无用的资源获取和解析代码"}}
{"type": "refactor", "subtype": "R4", "change": "diff --git a/server/src/main/java/com/orientechnologies/orient/server/network/protocol/http/command/get/OServerCommandGetQuery.java b/server/src/main/java/com/orientechnologies/orient/server/network/protocol/http/command/get/OServerCommandGetQuery.java\nindex 46eae63..40c3652 100644\n--- a/server/src/main/java/com/orientechnologies/orient/server/network/protocol/http/command/get/OServerCommandGetQuery.java\n+++ b/server/src/main/java/com/orientechnologies/orient/server/network/protocol/http/command/get/OServerCommandGetQuery.java\n@@ -44,10 +44,9 @@ public class OServerCommandGetQuery extends OServerCommandAuthenticatedDbAbstrac\n         \"Syntax error: query/<database>/sql/<query-text>[/<limit>][/<fetchPlan>].<br>Limit is optional and is set to 20 by default. Set to 0 to have no limits.\");\r\n \r\n     final int limit = urlParts.length > 4 ? Integer.parseInt(urlParts[4]) : 20;\r\n-\r\n     String fetchPlan = urlParts.length > 5 ? urlParts[5] : null;\r\n-\r\n     final String text = urlParts[3];\r\n+    final String accept = iRequest.getHeader(\"accept\");\r\n \r\n     iRequest.data.commandInfo = \"Query\";\r\n     iRequest.data.commandDetail = text;\r\n@@ -71,7 +70,7 @@ public class OServerCommandGetQuery extends OServerCommandAuthenticatedDbAbstrac\n         additionalContent.put(\"warnings\", tips);\r\n       }\r\n \r\n-      iResponse.writeRecords(response, fetchPlan, null, null, additionalContent);\r\n+      iResponse.writeRecords(response, fetchPlan, null, accept, additionalContent);\r\n \r\n     } finally {\r\n       if (db != null)\r\n", "summaries": {"en": "Set the response data format to accept", "zh": "指定响应数据格式为accept"}}
{"type": "refactor", "subtype": "R10", "change": "diff --git a/core/java/android/view/KeyEvent.java b/core/java/android/view/KeyEvent.java\nindex 05e202b..2d1016a 100644\n--- a/core/java/android/view/KeyEvent.java\n+++ b/core/java/android/view/KeyEvent.java\n@@ -1685,10 +1685,6 @@ public class KeyEvent extends InputEvent implements Parcelable {\n             case KeyEvent.KEYCODE_BRIGHTNESS_DOWN:\n             case KeyEvent.KEYCODE_BRIGHTNESS_UP:\n             case KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK:\n-            case KeyEvent.KEYCODE_DPAD_UP:\n-            case KeyEvent.KEYCODE_DPAD_RIGHT:\n-            case KeyEvent.KEYCODE_DPAD_DOWN:\n-            case KeyEvent.KEYCODE_DPAD_LEFT:\n                 return true;\n         }\n \n", "summaries": {"en": "Delete the up, down, left, and right button events in the KeyEvent class", "zh": "删除 KeyEvent 类中的上下左右按键事件"}}
{"type": "refactor", "subtype": "R3", "change": "diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelView.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelView.java\nindex 56e3032..f8bd793 100644\n--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelView.java\n+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelView.java\n@@ -626,6 +626,7 @@ public class NotificationPanelView extends PanelView implements\n                         && shouldQuickSettingsIntercept(mInitialTouchX, mInitialTouchY, h)) {\n                     mQsTracking = true;\n                     onQsExpansionStarted();\n+                    notifyExpandingFinished();\n                     mInitialHeightOnTouch = mQsExpansionHeight;\n                     mInitialTouchY = y;\n                     mInitialTouchX = x;\n@@ -825,9 +826,7 @@ public class NotificationPanelView extends PanelView implements\n             mInitialTouchX = event.getY();\n \n             // If we interrupt an expansion gesture here, make sure to update the state correctly.\n-            if (mIsExpanding) {\n-                onExpandingFinished();\n-            }\n+            notifyExpandingFinished();\n         }\n     }\n \n@@ -970,7 +969,6 @@ public class NotificationPanelView extends PanelView implements\n     private void onQsExpansionStarted(int overscrollAmount) {\n         cancelQsAnimation();\n         cancelHeightAnimator();\n-        notifyExpandingFinished();\n \n         // Reset scroll position and apply that position to the expanded height.\n         float height = mQsExpansionHeight - mScrollView.getScrollY() - overscrollAmount;\n", "summaries": {"en": "Fix the state issue in the panel", "zh": "修复面板中的状态问题"}}
{"type": "refactor", "subtype": "R10", "change": "diff --git a/subprojects/language-java/src/main/java/org/gradle/api/internal/tasks/compile/DefaultJavaCompileSpec.java b/subprojects/language-java/src/main/java/org/gradle/api/internal/tasks/compile/DefaultJavaCompileSpec.java\nindex e6909ea..9c0e12d 100644\n--- a/subprojects/language-java/src/main/java/org/gradle/api/internal/tasks/compile/DefaultJavaCompileSpec.java\n+++ b/subprojects/language-java/src/main/java/org/gradle/api/internal/tasks/compile/DefaultJavaCompileSpec.java\n@@ -23,7 +23,6 @@ import java.io.File;\n public class DefaultJavaCompileSpec extends DefaultJvmLanguageCompileSpec implements JavaCompileSpec {\n     private CompileOptions compileOptions;\n     private File dependencyCacheDir;\n-    private File destinationDir;\n     private String sourceCompatibility;\n     private String targetCompatibility;\n \n@@ -43,14 +42,6 @@ public class DefaultJavaCompileSpec extends DefaultJvmLanguageCompileSpec implem\n         this.dependencyCacheDir = dependencyCacheDir;\n     }\n \n-    public File getDestinationDir() {\n-        return destinationDir;\n-    }\n-\n-    public void setDestinationDir(File destinationDir) {\n-        this.destinationDir = destinationDir;\n-    }\n-\n     public String getSourceCompatibility() {\n         return sourceCompatibility;\n     }\n", "summaries": {"en": "Remove unnecessary Java parameters", "zh": "删除不必要的 Java 参数"}}
{"type": "refactor", "subtype": "R10", "change": "diff --git a/frontend-maven-plugin/src/main/java/com/github/eirslett/maven/plugins/frontend/Utils.java b/frontend-maven-plugin/src/main/java/com/github/eirslett/maven/plugins/frontend/Utils.java\nindex 29db578..7fcd794 100644\n--- a/frontend-maven-plugin/src/main/java/com/github/eirslett/maven/plugins/frontend/Utils.java\n+++ b/frontend-maven-plugin/src/main/java/com/github/eirslett/maven/plugins/frontend/Utils.java\n@@ -47,12 +47,10 @@ final class Utils {\n \n         public void run(){\n             BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));\n-            String result = \"\";\n             String line;\n             try {\n                 while((line = reader.readLine()) != null) {\n-                    result += line + \"\\n\";\n-                    log.info(result);\n+                    log.info(line);\n                 }\n             } catch (IOException e) {\n \n", "summaries": {"en": "Delete variable result", "zh": "删除变量result"}}
{"type": "refactor", "subtype": "R3", "change": "diff --git a/moco-runner/src/main/java/com/github/dreamhead/moco/runner/monitor/MonitorFactory.java b/moco-runner/src/main/java/com/github/dreamhead/moco/runner/monitor/MonitorFactory.java\nindex 7280d40c..4490561d 100644\n--- a/moco-runner/src/main/java/com/github/dreamhead/moco/runner/monitor/MonitorFactory.java\n+++ b/moco-runner/src/main/java/com/github/dreamhead/moco/runner/monitor/MonitorFactory.java\n@@ -1,15 +1,14 @@\n package com.github.dreamhead.moco.runner.monitor;\n \n-import com.github.dreamhead.moco.runner.*;\n-import com.google.common.collect.Iterables;\n+import com.github.dreamhead.moco.runner.FileRunner;\n+import com.github.dreamhead.moco.runner.MonitorRunner;\n+import com.github.dreamhead.moco.runner.Runner;\n+import com.google.common.collect.ImmutableList;\n import org.apache.commons.io.monitor.FileAlterationListenerAdaptor;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import java.io.File;\n-import java.util.List;\n-\n-import static com.google.common.collect.Lists.newArrayList;\n \n public class MonitorFactory {\n     private static Logger logger = LoggerFactory.getLogger(MonitorFactory.class);\n@@ -28,8 +27,7 @@ public class MonitorFactory {\n     }\n \n     public Monitor createSettingMonitor(final File settingsFile, final Iterable<File> configurationFiles, final FileRunner fileRunner) {\n-        List<File> files = newArrayList(settingsFile);\n-        Iterables.addAll(files, configurationFiles);\n+        ImmutableList<File> files = ImmutableList.<File>builder().add(settingsFile).addAll(configurationFiles).build();\n         return new FilesMonitor(files, createListener(fileRunner));\n     }\n \n", "summaries": {"en": "Replace list with immutable list in creating setting monitor", "zh": "在创建设置监视器中用不可变列表替换列表"}}
{"type": "refactor", "subtype": "R10", "change": "diff --git a/presto-tests/src/main/java/com/facebook/presto/tests/H2QueryRunner.java b/presto-tests/src/main/java/com/facebook/presto/tests/H2QueryRunner.java\nindex d7d6c43..c992ec3 100644\n--- a/presto-tests/src/main/java/com/facebook/presto/tests/H2QueryRunner.java\n+++ b/presto-tests/src/main/java/com/facebook/presto/tests/H2QueryRunner.java\n@@ -27,7 +27,6 @@ import com.google.common.base.Joiner;\n import com.google.common.base.Predicate;\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.Iterables;\n-import io.airlift.log.Logging;\n import org.intellij.lang.annotations.Language;\n import org.skife.jdbi.v2.DBI;\n import org.skife.jdbi.v2.Handle;\n@@ -69,8 +68,6 @@ public class H2QueryRunner\n \n     public H2QueryRunner()\n     {\n-        Logging.initialize();\n-\n         handle = DBI.open(\"jdbc:h2:mem:test\" + System.nanoTime());\n         TpchMetadata tpchMetadata = new TpchMetadata(\"\");\n \n", "summaries": {"en": "Delete Logging initialization", "zh": "删除 Logging 初始化"}}
{"type": "refactor", "subtype": "R10", "change": "diff --git a/plugins/groovy/src/org/jetbrains/plugins/groovy/mvc/projectView/AbstractMvcPsiNodeDescriptor.java b/plugins/groovy/src/org/jetbrains/plugins/groovy/mvc/projectView/AbstractMvcPsiNodeDescriptor.java\nindex d378f68..cee1d3f 100644\n--- a/plugins/groovy/src/org/jetbrains/plugins/groovy/mvc/projectView/AbstractMvcPsiNodeDescriptor.java\n+++ b/plugins/groovy/src/org/jetbrains/plugins/groovy/mvc/projectView/AbstractMvcPsiNodeDescriptor.java\n@@ -17,7 +17,7 @@ package org.jetbrains.plugins.groovy.mvc.projectView;\n \n import com.intellij.ide.projectView.PresentationData;\n import com.intellij.ide.projectView.ViewSettings;\n-import com.intellij.ide.projectView.impl.nodes.AbstractPsiBasedNode;\n+import com.intellij.ide.projectView.impl.nodes.BasePsiNode;\n import com.intellij.navigation.ItemPresentation;\n import com.intellij.navigation.NavigationItem;\n import com.intellij.openapi.module.Module;\n@@ -34,7 +34,7 @@ import org.jetbrains.annotations.Nullable;\n /**\n  * @author Dmitry Krasilschikov\n  */\n-public abstract class AbstractMvcPsiNodeDescriptor extends AbstractPsiBasedNode<PsiElement> {\n+public abstract class AbstractMvcPsiNodeDescriptor extends BasePsiNode<PsiElement> {\n   public static final int FOLDER = 100;\n   public static final int FILE = 110;\n   public static final int CLASS = 5;\n@@ -74,12 +74,6 @@ public abstract class AbstractMvcPsiNodeDescriptor extends AbstractPsiBasedNode<\n     return super.contains(file);\n   }\n \n-  @Override\n-  @Nullable\n-  protected PsiElement extractPsiFromValue() {\n-    return getValue();\n-  }\n-\n   @Nullable\n   @Override\n   public String toTestString(@Nullable Queryable.PrintInfo printInfo) {\n", "summaries": {"en": "Remove extractPsiFromValue() method", "zh": "移除 extractPsiFromValue() 方法"}}
{"type": "refactor", "subtype": "R6", "change": "diff --git a/compiler/src/main/java/com/raizlabs/android/dbflow/processor/validator/ColumnValidator.java b/compiler/src/main/java/com/raizlabs/android/dbflow/processor/validator/ColumnValidator.java\nindex 86536e9..773955b 100644\n--- a/compiler/src/main/java/com/raizlabs/android/dbflow/processor/validator/ColumnValidator.java\n+++ b/compiler/src/main/java/com/raizlabs/android/dbflow/processor/validator/ColumnValidator.java\n@@ -30,8 +30,8 @@ public class ColumnValidator implements Validator<ColumnDefinition> {\n \n             if(columnDefinition.column.name().length() > 0) {\n                 success = false;\n-                processorManager.logError(\"Foreign Key cannot specify the column() field. \" +\n-                        \"Use a @ForeignKeyReference(columnName = {NAME} instead\");\n+                processorManager.logError(\"Foreign Key %1s cannot specify the column() field. \" +\n+                        \"Use a @ForeignKeyReference(columnName = {NAME} instead\", columnDefinition.columnFieldName);\n             }\n \n         } else if (columnType == Column.NORMAL) {\n", "summaries": {"en": "Modified error log information", "zh": "修改错误日志信息"}}
{"type": "refactor", "subtype": "R3", "change": "diff --git a/src/main/java/com/xtremelabs/robolectric/ShadowLogger.java b/src/main/java/com/xtremelabs/robolectric/ShadowLogger.java\nindex da3dfec..d311c87 100644\n--- a/src/main/java/com/xtremelabs/robolectric/ShadowLogger.java\n+++ b/src/main/java/com/xtremelabs/robolectric/ShadowLogger.java\n@@ -83,7 +83,7 @@ public class ShadowLogger {\n         debug, error, info, verbose, warning, wtf\n     }\n \n-    static class LogItem {\n+    public static class LogItem {\n         public final LogType type;\n         public final String tag;\n         public final String msg;\n", "summaries": {"en": "Change the access modifier of LogItem class to public", "zh": "更改LogItem类的访问权限修饰符为public"}}
{"type": "refactor", "subtype": "R3", "change": "diff --git a/keystore/java/android/security/keystore/AndroidKeyStoreSpi.java b/keystore/java/android/security/keystore/AndroidKeyStoreSpi.java\nindex 701bd67..05ddef6 100644\n--- a/keystore/java/android/security/keystore/AndroidKeyStoreSpi.java\n+++ b/keystore/java/android/security/keystore/AndroidKeyStoreSpi.java\n@@ -674,12 +674,13 @@ public class AndroidKeyStoreSpi extends KeyStoreSpi {\n \n     @Override\n     public void engineDeleteEntry(String alias) throws KeyStoreException {\n-        if (!isKeyEntry(alias) && !isCertificateEntry(alias)) {\n+        if (!engineContainsAlias(alias)) {\n             return;\n         }\n+        // At least one entry corresponding to this alias exists in keystore\n \n         if (!Credentials.deleteAllTypesForAlias(mKeyStore, alias)) {\n-            throw new KeyStoreException(\"No such entry \" + alias);\n+            throw new KeyStoreException(\"Failed to delete entry: \" + alias);\n         }\n     }\n \n@@ -849,9 +850,7 @@ public class AndroidKeyStoreSpi extends KeyStoreSpi {\n             throw new KeyStoreException(\"entry == null\");\n         }\n \n-        if (engineContainsAlias(alias)) {\n-            engineDeleteEntry(alias);\n-        }\n+        Credentials.deleteAllTypesForAlias(mKeyStore, alias);\n \n         if (entry instanceof KeyStore.TrustedCertificateEntry) {\n             KeyStore.TrustedCertificateEntry trE = (KeyStore.TrustedCertificateEntry) entry;\n", "summaries": {"en": "Delete all keys of the specified alias", "zh": "删除指定alias的所有密钥"}}
{"type": "refactor", "subtype": "R10", "change": "diff --git a/src/main/java/org/jboss/netty/channel/socket/nio/NioProviderMetadata.java b/src/main/java/org/jboss/netty/channel/socket/nio/NioProviderMetadata.java\nindex 678b72e..0a46cf7 100644\n--- a/src/main/java/org/jboss/netty/channel/socket/nio/NioProviderMetadata.java\n+++ b/src/main/java/org/jboss/netty/channel/socket/nio/NioProviderMetadata.java\n@@ -134,11 +134,11 @@ class NioProviderMetadata {\n         os = os.toLowerCase();\n         vendor = vendor.toLowerCase();\n \n-        System.out.println(version);\n-        System.out.println(vminfo);\n-        System.out.println(os);\n-        System.out.println(vendor);\n-        System.out.println(provider);\n+//        System.out.println(version);\n+//        System.out.println(vminfo);\n+//        System.out.println(os);\n+//        System.out.println(vendor);\n+//        System.out.println(provider);\n \n         // Sun JVM\n         if (vendor.indexOf(\"sun\") >= 0) {\n", "summaries": {"en": "Removed println statements for debugging purposes", "zh": "注释掉了用于调试目的的println语句"}}
{"type": "refactor", "subtype": "R10", "change": "diff --git a/indexing-service/src/main/java/io/druid/indexing/common/index/EventReceiverFirehoseFactory.java b/indexing-service/src/main/java/io/druid/indexing/common/index/EventReceiverFirehoseFactory.java\nindex b9e420f..225d1b0 100644\n--- a/indexing-service/src/main/java/io/druid/indexing/common/index/EventReceiverFirehoseFactory.java\n+++ b/indexing-service/src/main/java/io/druid/indexing/common/index/EventReceiverFirehoseFactory.java\n@@ -86,7 +86,6 @@ public class EventReceiverFirehoseFactory implements FirehoseFactory\n     if (chatHandlerProvider.isPresent()) {\n       log.info(\"Found chathandler of class[%s]\", chatHandlerProvider.get().getClass().getName());\n       chatHandlerProvider.get().register(serviceName, firehose);\n-      chatHandlerProvider.get().register(serviceName.replaceAll(\".*:\", \"\"), firehose); // rofl\n     } else {\n       log.info(\"No chathandler detected\");\n     }\n", "summaries": {"en": "Remove duplicate registration of the service", "zh": "删除服务的重复注册"}}
{"type": "refactor", "subtype": "R4", "change": "diff --git a/core/server/src/main/java/alluxio/web/WebInterfaceAbstractMetricsServlet.java b/core/server/src/main/java/alluxio/web/WebInterfaceAbstractMetricsServlet.java\nindex be8f424..c668d16 100644\n--- a/core/server/src/main/java/alluxio/web/WebInterfaceAbstractMetricsServlet.java\n+++ b/core/server/src/main/java/alluxio/web/WebInterfaceAbstractMetricsServlet.java\n@@ -27,6 +27,7 @@ import javax.servlet.http.HttpServletRequest;\n  * Abstract class that provides a common method for parsing metrics data.\n  */\n public abstract class WebInterfaceAbstractMetricsServlet extends HttpServlet {\n+  private static final long serialVersionUID = -849266423481584779L;\n \n   protected ObjectMapper mObjectMapper;\n \n", "summaries": {"en": "Add serialVersionUID constant", "zh": "添加 serialVersionUID 常量"}}
