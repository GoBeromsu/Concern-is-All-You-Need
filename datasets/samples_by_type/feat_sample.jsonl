{"type": "feat", "subtype": "E1", "change": "diff --git a/src/main/java/com/ning/http/client/resumable/ResumableAsyncHandler.java b/src/main/java/com/ning/http/client/resumable/ResumableAsyncHandler.java\nindex 5a6416a..f11ad2c 100644\n--- a/src/main/java/com/ning/http/client/resumable/ResumableAsyncHandler.java\n+++ b/src/main/java/com/ning/http/client/resumable/ResumableAsyncHandler.java\n@@ -196,7 +196,9 @@ public class ResumableAsyncHandler<T> implements AsyncHandler<T> {\n         }\n \n         RequestBuilder builder = new RequestBuilder(request);\n-        builder.setHeader(\"Range\", \"bytes=\" + byteTransferred.get() + \"-\");\n+        if (byteTransferred.get() != 0) {\n+            builder.setHeader(\"Range\", \"bytes=\" + byteTransferred.get() + \"-\");\n+        }\n         return builder.build();\n     }\n \n", "summaries": {"en": "Add conditional judgment to avoid incorrect header information in Range", "zh": "添加条件判断，避免 Range 头部信息错误"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/modules/activiti-webapp-kickstart/src/main/java/org/activiti/kickstart/service/KickstartServiceImpl.java b/modules/activiti-webapp-kickstart/src/main/java/org/activiti/kickstart/service/KickstartServiceImpl.java\nindex e9c91918b..00b7c4fa9 100644\n--- a/modules/activiti-webapp-kickstart/src/main/java/org/activiti/kickstart/service/KickstartServiceImpl.java\n+++ b/modules/activiti-webapp-kickstart/src/main/java/org/activiti/kickstart/service/KickstartServiceImpl.java\n@@ -133,7 +133,7 @@ public class KickstartServiceImpl implements KickstartService {\n       .processDefinitionId(id)\n       .singleResult();\n \n-    // Get BPMN 2.0 XML file from database and parse it with JAXB\n+    // Get BPMN 2.0 XML file for this process defintion from database and parse it with JAXB\n     InputStream is = null;\n     Definitions definitions = null;\n     try {\n@@ -256,11 +256,9 @@ public class KickstartServiceImpl implements KickstartService {\n \n   protected TaskDto convertUserTaskToTaskDto(String deploymentId, UserTask userTask) {\n     TaskDto task = new TaskDto();\n-\n-    // task name\n+    \n+    task.setId(userTask.getId());\n     task.setName(userTask.getName());\n-\n-    // task description\n     if (!userTask.getDocumentation().isEmpty()) {\n       task.setDescription(userTask.getDocumentation().get(0).getText());\n     }\n", "summaries": {"en": "Add task ID in TaskDto of KickStartService", "zh": "在 KickStartService 的 TaskDto 中添加任务 ID"}}
{"type": "feat", "subtype": "E1", "change": "diff --git a/WordPress/src/main/java/org/wordpress/android/widgets/SuggestionAutoCompleteText.java b/WordPress/src/main/java/org/wordpress/android/widgets/SuggestionAutoCompleteText.java\nindex e1d1fb06a..ac9209905 100644\n--- a/WordPress/src/main/java/org/wordpress/android/widgets/SuggestionAutoCompleteText.java\n+++ b/WordPress/src/main/java/org/wordpress/android/widgets/SuggestionAutoCompleteText.java\n@@ -41,8 +41,10 @@ public class SuggestionAutoCompleteText extends MultiAutoCompleteTextView {\n             return;\n         }\n         String text = getAutoSaveTextHelper().loadString(this);\n-        setText(text);\n-        setSelection(text.length());\n+        if (!text.isEmpty()) {\n+            setText(text);\n+            setSelection(text.length());\n+        }\n     }\n \n     @Override\n", "summaries": {"en": "If the text is not empty, set the text and cursor position", "zh": "如果文本不为空，则设置文本和光标位置"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/app/src/main/java/me/zhanghai/android/douya/util/UrlUtils.java b/app/src/main/java/me/zhanghai/android/douya/util/UrlUtils.java\nindex f339955..3a4fde9 100644\n--- a/app/src/main/java/me/zhanghai/android/douya/util/UrlUtils.java\n+++ b/app/src/main/java/me/zhanghai/android/douya/util/UrlUtils.java\n@@ -42,11 +42,10 @@ public class UrlUtils {\n \n     private static CustomTabsIntent makeCustomTabsIntent(Context context) {\n         return new CustomTabsIntent.Builder()\n+                .addDefaultShareMenuItem()\n                 .enableUrlBarHiding()\n                 .setToolbarColor(ViewUtils.getColorFromAttrRes(R.attr.colorPrimary, 0, context))\n                 .setShowTitle(true)\n-                // TODO: Add share\n-                //.addMenuItem()\n                 .build();\n     }\n }\n", "summaries": {"en": "Add default share menu item", "zh": "添加默认分享菜单项"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/src/org/zaproxy/zap/utils/SortedComboBoxModel.java b/src/org/zaproxy/zap/utils/SortedComboBoxModel.java\nindex adda311d..d1ba35c0 100644\n--- a/src/org/zaproxy/zap/utils/SortedComboBoxModel.java\n+++ b/src/org/zaproxy/zap/utils/SortedComboBoxModel.java\n@@ -67,4 +67,21 @@ public class SortedComboBoxModel<E extends Comparable<E>> extends DefaultComboBo\n \tpublic void insertElementAt(E element, int index) {\n \t\taddElement( element );\n \t}\n+\n+\t/**\n+\t * Notifies the listeners that the given {@code element} of the combo box model was changed.\n+\t * <p>\n+\t * The call to this method has no effect if the given {@code element} doesn't exist in the combo box model.\n+\t * </p>\n+\t * \n+\t * @param element the element that was changed.\n+\t * @since 2.3.0\n+\t */\n+\tpublic void elementChanged(E element) {\n+\t\tint idx = getIndexOf(element);\n+\t\tif (idx < 0) {\n+\t\t\treturn;\n+\t\t}\n+\t\tsuper.fireContentsChanged(this, idx, idx);\n+\t}\n }\n", "summaries": {"en": "Added new method `elementChanged()` to notify listeners when an element has been updated", "zh": "增加新方法elementChanged()，用于通知监听器元素已更改"}}
{"type": "feat", "subtype": "E2", "change": "diff --git a/h2o-algos/src/main/java/hex/tree/gbm/GBM.java b/h2o-algos/src/main/java/hex/tree/gbm/GBM.java\nindex 20fcf2841..7169f8982 100755\n--- a/h2o-algos/src/main/java/hex/tree/gbm/GBM.java\n+++ b/h2o-algos/src/main/java/hex/tree/gbm/GBM.java\n@@ -97,9 +97,11 @@ public class GBM extends SharedTree<GBMModel,GBMModel.GBMParameters,GBMModel.GBM\n     case bernoulli:\n       if( _nclass != 2 /*&& !couldBeBool(_response)*/)\n         error(\"_distribution\", \"Binomial requires the response to be a 2-class categorical\");\n-      else if( _response != null ) \n+      else if( _response != null ) {\n         // Bernoulli: initial prediction is log( mean(y)/(1-mean(y)) )\n         _initialPrediction = Math.log(mean / (1.0 - mean));\n+        if (_offset != null) throw H2O.unimpl(\"Newton-Raphson iteration needed.\");\n+      }\n       break;\n     case multinomial:\n       if (!isClassifier()) error(\"_distribution\", \"Multinomial requires an enum response.\");\n", "summaries": {"en": "Fixed errors in the GBM class", "zh": "修改 GBM 类中的错误"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/appPaginator/catelogLinear.java b/UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/appPaginator/catelogLinear.java\nindex f67f580..e09ca8f 100644\n--- a/UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/appPaginator/catelogLinear.java\n+++ b/UltimateRecyclerView/ultimaterecyclerview/src/main/java/com/marshalchen/ultimaterecyclerview/appPaginator/catelogLinear.java\n@@ -62,6 +62,8 @@ public abstract class catelogLinear<adapter extends easyRegularAdapter, binder e\n \n     protected abstract void onClickItem(final String route);\n \n+    protected abstract void onClickItem(final long route_id);\n+\n     protected abstract int getColumn();\n \n     protected abstract adapter getAdatperWithdata();\n", "summaries": {"en": "Added a new abstract method onClickItem", "zh": "添加了一个新的抽象方法onClickItem"}}
{"type": "feat", "subtype": "E2", "change": "diff --git a/java/idea-ui/src/com/intellij/platform/templates/PlainModuleTemplatesFactory.java b/java/idea-ui/src/com/intellij/platform/templates/PlainModuleTemplatesFactory.java\nindex 2457b3b..fb8d72e 100644\n--- a/java/idea-ui/src/com/intellij/platform/templates/PlainModuleTemplatesFactory.java\n+++ b/java/idea-ui/src/com/intellij/platform/templates/PlainModuleTemplatesFactory.java\n@@ -54,7 +54,10 @@ public class PlainModuleTemplatesFactory implements ProjectTemplatesFactory {\n   @Override\n   public ProjectTemplate[] createTemplates(final String group, WizardContext context) {\n     if (OTHER_GROUP.equals(group)) {\n-      return context.isCreatingNewProject() ? new ProjectTemplate[] { new PlainModuleTemplate(new EmptyModuleBuilder() {\n+      if (!context.isCreatingNewProject()) {\n+        return ProjectTemplate.EMPTY_ARRAY;\n+      }\n+      return new ProjectTemplate[]{new PlainModuleTemplate(new EmptyModuleBuilder() {\n         @Override\n         public String getPresentableName() {\n           return \"Empty Project\";\n@@ -64,7 +67,7 @@ public class PlainModuleTemplatesFactory implements ProjectTemplatesFactory {\n         public String getDescription() {\n           return \"Empty project without modules. Use it to create free-style module structure.\";\n         }\n-      })} : ProjectTemplate.EMPTY_ARRAY;\n+      })};\n     }\n     ModuleBuilder[] builders = context.getAllBuilders();\n     return ContainerUtil.mapNotNull(builders, new NullableFunction<ModuleBuilder, ProjectTemplate>() {\n", "summaries": {"en": "Removed empty projects from template list", "zh": "从模板列表中删除了空项目"}}
{"type": "feat", "subtype": "E1", "change": "diff --git a/h2o-core/src/main/java/hex/Model.java b/h2o-core/src/main/java/hex/Model.java\nindex b65a43339..7b80479c1 100644\n--- a/h2o-core/src/main/java/hex/Model.java\n+++ b/h2o-core/src/main/java/hex/Model.java\n@@ -430,8 +430,9 @@ public abstract class Model<M extends Model<M,P,O>, P extends Model.Parameters,\n   public double score(double [] data){ return ArrayUtils.maxIndex(score0(data, new float[_output.nclasses()]));  }\n \n   @Override protected Futures remove_impl( Futures fs ) {\n-    for( Key k : _output._model_metrics )\n-      k.remove(fs);\n+    if (_output._model_metrics != null)\n+      for( Key k : _output._model_metrics )\n+        k.remove(fs);\n     return fs;\n   }\n \n", "summaries": {"en": "Add NPE check", "zh": "添加 NPE 检查"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/fml/common/cpw/mods/fml/common/registry/EntityRegistry.java b/fml/common/cpw/mods/fml/common/registry/EntityRegistry.java\nindex bf9d90cb0..df2c6bab4 100644\n--- a/fml/common/cpw/mods/fml/common/registry/EntityRegistry.java\n+++ b/fml/common/cpw/mods/fml/common/registry/EntityRegistry.java\n@@ -171,7 +171,18 @@ public class EntityRegistry\n     {\n         if (EntityList.field_75626_c.containsKey(entityClass))\n         {\n-            FMLLog.warning(\"The mod %s tried to register the entity class %s which was already registered - if you wish to override default naming for FML mod entities, register it here first\", Loader.instance().activeModContainer().getModId(), entityClass);\n+            ModContainer activeModContainer = Loader.instance().activeModContainer();\n+            String modId = \"unknown\";\n+            if (activeModContainer != null)\n+            {\n+                modId = activeModContainer.getModId();\n+            }\n+            else\n+            {\n+                FMLLog.severe(\"There is a rogue mod trying to register entities from outside the context of mod loading. This is incredibly dangerous and should be stopped.\");\n+                Thread.dumpStack();\n+            }\n+            FMLLog.warning(\"The mod %s tried to register the entity class %s which was already registered - if you wish to override default naming for FML mod entities, register it here first\", modId, entityClass);\n             return;\n         }\n         id = instance().validateAndClaimId(id);\n", "summaries": {"en": "Fix for attempting to register entities outside of modloading", "zh": "修复尝试在modloading之外注册实体的mod"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/RangeFilterBuilder.java b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/RangeFilterBuilder.java\nindex 6dae3f5..1495296 100644\n--- a/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/RangeFilterBuilder.java\n+++ b/modules/elasticsearch/src/main/java/org/elasticsearch/index/query/xcontent/RangeFilterBuilder.java\n@@ -314,6 +314,15 @@ public class RangeFilterBuilder extends BaseFilterBuilder {\n     }\n \n     /**\n+     * The to part of the filter query. Null indicates unbounded.\n+     */\n+    public RangeFilterBuilder lte(Object to) {\n+        this.to = to;\n+        this.includeUpper = true;\n+        return this;\n+    }\n+\n+    /**\n      * Should the lower bound be included or not. Defaults to <tt>true</tt>.\n      */\n     public RangeFilterBuilder includeLower(boolean includeLower) {\n", "summaries": {"en": "Add lte method in RangeFilterBuilder class", "zh": "在RangeFilterBuilder类中添加lte方法"}}
{"type": "feat", "subtype": "E2", "change": "diff --git a/plugins/coverage/src/com/intellij/execution/coverage/CoverageJavaRunConfigurationExtension.java b/plugins/coverage/src/com/intellij/execution/coverage/CoverageJavaRunConfigurationExtension.java\nindex 9a0d593..1310a9b 100644\n--- a/plugins/coverage/src/com/intellij/execution/coverage/CoverageJavaRunConfigurationExtension.java\n+++ b/plugins/coverage/src/com/intellij/execution/coverage/CoverageJavaRunConfigurationExtension.java\n@@ -197,8 +197,9 @@ public class CoverageJavaRunConfigurationExtension extends RunConfigurationExten\n   }\n \n   @Override\n-  public boolean isListenerDisabled(RunConfigurationBase configuration, Object listener) {\n+  public boolean isListenerDisabled(RunConfigurationBase configuration, Object listener, RunnerSettings runnerSettings) {\n     if (listener instanceof CoverageListener) {\n+      if (!(runnerSettings.getData() instanceof CoverageRunnerData)) return true;\n       final CoverageEnabledConfiguration coverageEnabledConfiguration = CoverageEnabledConfiguration.getOrCreate(configuration);\n       return !(coverageEnabledConfiguration.getCoverageRunner() instanceof IDEACoverageRunner);\n     }\n", "summaries": {"en": "Disable listener when no coverage is enabled", "zh": "当没有覆盖启用时禁用监听器"}}
{"type": "feat", "subtype": "E1", "change": "diff --git a/java/java-impl/src/com/intellij/codeInsight/completion/JavaCompletionContributor.java b/java/java-impl/src/com/intellij/codeInsight/completion/JavaCompletionContributor.java\nindex b98ad7a..083649a 100644\n--- a/java/java-impl/src/com/intellij/codeInsight/completion/JavaCompletionContributor.java\n+++ b/java/java-impl/src/com/intellij/codeInsight/completion/JavaCompletionContributor.java\n@@ -381,7 +381,10 @@ public class JavaCompletionContributor extends CompletionContributor {\n   static boolean isClassNamePossible(CompletionParameters parameters) {\n     boolean isSecondCompletion = parameters.getInvocationCount() >= 2;\n \n-    final PsiElement parent = parameters.getPosition().getParent();\n+    PsiElement position = parameters.getPosition();\n+    if (JavaCompletionData.isInstanceofPlace(position)) return false;\n+\n+    final PsiElement parent = position.getParent();\n     if (!(parent instanceof PsiJavaCodeReferenceElement)) return isSecondCompletion;\n     if (((PsiJavaCodeReferenceElement)parent).getQualifier() != null) return isSecondCompletion;\n \n@@ -406,7 +409,7 @@ public class JavaCompletionContributor extends CompletionContributor {\n       return false;\n     }\n \n-    if (JavaCompletionData.isAfterPrimitiveOrArrayType(parameters.getPosition())) {\n+    if (JavaCompletionData.isAfterPrimitiveOrArrayType(position)) {\n       return false;\n     }\n     \n", "summaries": {"en": "When displaying all classes in the automatic pop-up window, do not do it at the instanceof location (very slow)", "zh": "在自动弹出窗口中显示所有类时，不要在instanceof位置这样做（非常慢）"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/policy/src/com/android/internal/policy/impl/keyguard/CameraWidgetFrame.java b/policy/src/com/android/internal/policy/impl/keyguard/CameraWidgetFrame.java\nindex dbd9999..0f5817a 100644\n--- a/policy/src/com/android/internal/policy/impl/keyguard/CameraWidgetFrame.java\n+++ b/policy/src/com/android/internal/policy/impl/keyguard/CameraWidgetFrame.java\n@@ -188,6 +188,16 @@ public class CameraWidgetFrame extends KeyguardWidgetFrame implements View.OnCli\n         return iv;\n     }\n \n+    @Override\n+    public void setPivotX(float pivotX) {\n+        // don't pivot me\n+    }\n+\n+    @Override\n+    public void setPivotY(float pivotY) {\n+        // don't pivot me\n+    }\n+\n     public void render() {\n         final Throwable[] thrown = new Throwable[1];\n         final Bitmap[] offscreen = new Bitmap[1];\n", "summaries": {"en": "Rewritten setPivotX() and setPivotY() methods and left empty", "zh": "重写setPivotX()和setPivotY()方法并留空"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/core/java/android/app/Notification.java b/core/java/android/app/Notification.java\nindex fb28ae3..b66e95b 100644\n--- a/core/java/android/app/Notification.java\n+++ b/core/java/android/app/Notification.java\n@@ -1719,6 +1719,9 @@ public class Notification implements Parcelable\n             extras.putBoolean(EXTRA_PROGRESS_INDETERMINATE, mProgressIndeterminate);\n             extras.putBoolean(EXTRA_SHOW_CHRONOMETER, mUseChronometer);\n             extras.putBoolean(EXTRA_SHOW_WHEN, mShowWhen);\n+            if (mLargeIcon != null) {\n+                extras.putParcelable(EXTRA_LARGE_ICON, mLargeIcon);\n+            }\n         }\n \n         /**\n", "summaries": {"en": "Store mLargeIcon in extras", "zh": "在extras中存储mLargeIcon"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java\nindex 50a6428..485fcc2 100644\n--- a/src/com/google/javascript/jscomp/Compiler.java\n+++ b/src/com/google/javascript/jscomp/Compiler.java\n@@ -2619,6 +2619,8 @@ public class Compiler extends AbstractCompiler implements ErrorHandler {\n   }\n \n   private void processNewScript(JsAst ast, Node originalRoot) {\n+    languageMode = options.getLanguageIn();\n+\n     Node js = ast.getAstRoot(this);\n     Preconditions.checkNotNull(js);\n \n", "summaries": {"en": "Add language mode", "zh": "添加语言模式"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/servers/src/main/java/tachyon/worker/block/meta/TempBlockMeta.java b/servers/src/main/java/tachyon/worker/block/meta/TempBlockMeta.java\nindex 075574e..2a7873f 100644\n--- a/servers/src/main/java/tachyon/worker/block/meta/TempBlockMeta.java\n+++ b/servers/src/main/java/tachyon/worker/block/meta/TempBlockMeta.java\n@@ -4,9 +4,9 @@\n  * copyright ownership. The ASF licenses this file to You under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance with the License. You may obtain a\n  * copy of the License at\n- * \n+ *\n  * http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software distributed under the License\n  * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n  * or implied. See the License for the specific language governing permissions and limitations under\n@@ -33,6 +33,10 @@ public class TempBlockMeta extends BlockMetaBase {\n     return CommonUtils.concatPath(mDir.getDirPath(), mUserId, mBlockId);\n   }\n \n+  public String getCommitPath() {\n+    return CommonUtils.concatPath(mDir.getDirPath(), mBlockId);\n+  }\n+\n   public void setBlockSize(long newSize) {\n     mBlockSize = newSize;\n   }\n", "summaries": {"en": "Added getCommitPath() function to obtain the path of the temporary block", "zh": "添加了getCommitPath()函数来获取临时块的路径"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/presto-main/src/main/java/com/facebook/presto/byteCode/Scope.java b/presto-main/src/main/java/com/facebook/presto/byteCode/Scope.java\nindex 0b78b84..c1d4d0c 100644\n--- a/presto-main/src/main/java/com/facebook/presto/byteCode/Scope.java\n+++ b/presto-main/src/main/java/com/facebook/presto/byteCode/Scope.java\n@@ -13,6 +13,7 @@\n  */\n package com.facebook.presto.byteCode;\n \n+import com.facebook.presto.byteCode.expression.ByteCodeExpression;\n import com.google.common.collect.ImmutableList;\n import org.objectweb.asm.Type;\n \n@@ -102,4 +103,11 @@ public class Scope\n \n         return variable;\n     }\n+\n+    public Variable declareVariable(String variableName, ByteCodeBlock block, ByteCodeExpression initialValue)\n+    {\n+        Variable variable = declareVariable(initialValue.getType(), variableName);\n+        block.append(variable.set(initialValue));\n+        return variable;\n+    }\n }\n", "summaries": {"en": "Added a new method declareVariable()", "zh": "添加了一个新的方法 declareVariable()"}}
{"type": "feat", "subtype": "E2", "change": "diff --git a/WordPress/src/main/java/org/wordpress/android/models/SiteSettingsModel.java b/WordPress/src/main/java/org/wordpress/android/models/SiteSettingsModel.java\nindex 24f2a81ed..71f15d8be 100644\n--- a/WordPress/src/main/java/org/wordpress/android/models/SiteSettingsModel.java\n+++ b/WordPress/src/main/java/org/wordpress/android/models/SiteSettingsModel.java\n@@ -293,12 +293,16 @@ public class SiteSettingsModel {\n         values.put(WHITELIST_COLUMN_NAME, commentAutoApprovalKnownUsers);\n \n         String moderationKeys = \"\";\n-        for (String key : holdForModeration) {\n-            moderationKeys += key + \"\\n\";\n+        if (holdForModeration != null) {\n+            for (String key : holdForModeration) {\n+                moderationKeys += key + \"\\n\";\n+            }\n         }\n         String blacklistKeys = \"\";\n-        for (String key : blacklist) {\n-            blacklistKeys += key + \"\\n\";\n+        if (blacklist != null) {\n+            for (String key : blacklist) {\n+                blacklistKeys += key + \"\\n\";\n+            }\n         }\n         values.put(MODERATION_KEYS_COLUMN_NAME, moderationKeys);\n         values.put(BLACKLIST_KEYS_COLUMN_NAME, blacklistKeys);\n", "summaries": {"en": "Avoid potential NullPointerException when saving site settings", "zh": "保存站点设置时避免潜在的NullPointerException"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/SeriesGuide/src/com/battlelancer/seriesguide/getglueapi/GetGlue.java b/SeriesGuide/src/com/battlelancer/seriesguide/getglueapi/GetGlue.java\nindex 19b5c6b0c..ec99f814c 100644\n--- a/SeriesGuide/src/com/battlelancer/seriesguide/getglueapi/GetGlue.java\n+++ b/SeriesGuide/src/com/battlelancer/seriesguide/getglueapi/GetGlue.java\n@@ -7,6 +7,8 @@ import oauth.signpost.OAuth;\n import oauth.signpost.OAuthConsumer;\r\n import oauth.signpost.commonshttp.CommonsHttpOAuthConsumer;\r\n \r\n+import org.apache.http.HttpResponse;\r\n+import org.apache.http.HttpStatus;\r\n import org.apache.http.client.HttpClient;\r\n import org.apache.http.client.methods.HttpGet;\r\n import org.apache.http.impl.client.DefaultHttpClient;\r\n@@ -73,10 +75,13 @@ public class GetGlue {\n \r\n         // send the request\r\n         HttpClient httpClient = new DefaultHttpClient();\r\n-        httpClient.execute(request);\r\n-        // HttpResponse response = httpClient.execute(request);\r\n+        HttpResponse response = httpClient.execute(request);\r\n \r\n-        // TODO: improve error handling\r\n+        int statuscode = response.getStatusLine().getStatusCode();\r\n+        if (statuscode != HttpStatus.SC_OK) {\r\n+            throw new Exception(\"Unexpected server response \" + response.getStatusLine() + \" for \"\r\n+                    + request.getRequestLine());\r\n+        }\r\n     }\r\n \r\n     public static void clearCredentials(SharedPreferences prefs) {\r\n", "summaries": {"en": "Improved error handling for GetGlue requests", "zh": "稍微改进GetGlue请求错误处理"}}
{"type": "feat", "subtype": "E1", "change": "diff --git a/grails-core/src/main/groovy/org/codehaus/groovy/grails/commons/DefaultGrailsCodecClass.java b/grails-core/src/main/groovy/org/codehaus/groovy/grails/commons/DefaultGrailsCodecClass.java\nindex 50ead26109..fd7b042508 100644\n--- a/grails-core/src/main/groovy/org/codehaus/groovy/grails/commons/DefaultGrailsCodecClass.java\n+++ b/grails-core/src/main/groovy/org/codehaus/groovy/grails/commons/DefaultGrailsCodecClass.java\n@@ -64,6 +64,9 @@ public class DefaultGrailsCodecClass extends AbstractInjectableGrailsClass imple\n \n     private void initializeCodec() {\n         Integer orderSetting = (Integer)getPropertyOrStaticPropertyOrFieldValue(\"order\", Integer.class);\n+        if(orderSetting != null) {\n+            order = orderSetting;\n+        }\n         if(Encoder.class.isAssignableFrom(getClazz())) {\n             encoder = (Encoder)getReferenceInstance();\n             autowireCodecBean(encoder);\n", "summaries": {"en": "If orderSetting is not empty, set order value to orderSetting", "zh": "如果orderSetting不为空，则设置order值为orderSetting"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/src/com/google/javascript/refactoring/RefactoringDriver.java b/src/com/google/javascript/refactoring/RefactoringDriver.java\nindex 1b574d8..b42296a 100644\n--- a/src/com/google/javascript/refactoring/RefactoringDriver.java\n+++ b/src/com/google/javascript/refactoring/RefactoringDriver.java\n@@ -92,6 +92,7 @@ public final class RefactoringDriver {\n     options.setCheckSymbols(true);\n     options.setCheckTypes(true);\n     options.setClosurePass(true);\n+    options.setGenerateExports(true);\n     options.setPreserveGoogRequires(true);\n \n     options.setWarningLevel(DiagnosticGroups.MISSING_REQUIRE, CheckLevel.ERROR);\n", "summaries": {"en": "Added option to generate export", "zh": "添加了生成导出的选项"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/OStringSerializerHelper.java b/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/OStringSerializerHelper.java\nindex 68ff13f..61837c9 100644\n--- a/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/OStringSerializerHelper.java\n+++ b/core/src/main/java/com/orientechnologies/orient/core/serialization/serializer/OStringSerializerHelper.java\n@@ -15,6 +15,7 @@\n  */\r\n package com.orientechnologies.orient.core.serialization.serializer;\r\n \r\n+import java.math.BigDecimal;\r\n import java.util.ArrayList;\r\n import java.util.Collection;\r\n import java.util.Collections;\r\n@@ -84,6 +85,11 @@ public abstract class OStringSerializerHelper {\n \t\t\t\treturn iValue;\r\n \t\t\treturn new Boolean(getStringContent(iValue));\r\n \r\n+\t\tcase DECIMAL:\r\n+\t\t\tif (iValue instanceof BigDecimal)\r\n+\t\t\t\treturn iValue;\r\n+\t\t\treturn new BigDecimal(getStringContent(iValue));\r\n+\r\n \t\tcase FLOAT:\r\n \t\t\tif (iValue instanceof Float)\r\n \t\t\t\treturn iValue;\r\n", "summaries": {"en": "Add support for BigDecimal type", "zh": "添加 BigDecimal 类型的支持"}}
{"type": "feat", "subtype": "E1", "change": "diff --git a/core/client/src/main/java/alluxio/client/file/FileSystemContext.java b/core/client/src/main/java/alluxio/client/file/FileSystemContext.java\nindex f82f85a..a5c9786 100644\n--- a/core/client/src/main/java/alluxio/client/file/FileSystemContext.java\n+++ b/core/client/src/main/java/alluxio/client/file/FileSystemContext.java\n@@ -16,6 +16,7 @@ import alluxio.client.block.AlluxioBlockStore;\n import alluxio.client.block.BlockMasterClient;\n import alluxio.client.block.BlockStoreContext;\n import alluxio.exception.AlluxioException;\n+import alluxio.exception.ExceptionMessage;\n import alluxio.resource.CloseableResource;\n import alluxio.util.IdUtils;\n import alluxio.util.network.NetworkAddressUtils;\n@@ -132,6 +133,9 @@ public enum FileSystemContext {\n     } catch (AlluxioException e) {\n       throw new IOException(e);\n     }\n+    if (infos.isEmpty()) {\n+      throw new IOException(ExceptionMessage.NO_WORKER_AVAILABLE.getMessage());\n+    }\n \n     // Convert the worker infos into net addresses, if there are local addresses, only keep those\n     List<WorkerNetAddress> workerNetAddresses = new ArrayList<>();\n", "summaries": {"en": "If there is no available worker when requesting a worker, throw an exception", "zh": "如果请求工人时没有可用的工人，则抛出异常"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java\nindex e2f6bf3..5dfda92 100644\n--- a/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java\n+++ b/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java\n@@ -27,7 +27,10 @@\n \r\n package com.badlogic.gdx.scenes.scene2d.ui;\r\n \r\n-import java.util.List;\r\n+import com.esotericsoftware.tablelayout.BaseTableLayout.Debug;\r\n+import com.esotericsoftware.tablelayout.Cell;\r\n+import com.esotericsoftware.tablelayout.Toolkit;\r\n+import com.esotericsoftware.tablelayout.Value;\r\n \r\n import com.badlogic.gdx.graphics.Color;\r\n import com.badlogic.gdx.graphics.g2d.SpriteBatch;\r\n@@ -42,10 +45,8 @@ import com.badlogic.gdx.scenes.scene2d.utils.Align;\n import com.badlogic.gdx.scenes.scene2d.utils.Drawable;\r\n import com.badlogic.gdx.scenes.scene2d.utils.ScissorStack;\r\n import com.badlogic.gdx.utils.Array;\r\n-import com.esotericsoftware.tablelayout.BaseTableLayout.Debug;\r\n-import com.esotericsoftware.tablelayout.Cell;\r\n-import com.esotericsoftware.tablelayout.Toolkit;\r\n-import com.esotericsoftware.tablelayout.Value;\r\n+\r\n+import java.util.List;\r\n \r\n /** A group that sizes and positions children using table constraints. By default, {@link #getTouchable()} is\r\n  * {@link Touchable#childrenOnly}.\r\n@@ -434,6 +435,16 @@ public class Table extends WidgetGroup {\n \t\treturn layout.getPadRight();\r\n \t}\r\n \r\n+\t/** Returns {@link #getPadLeft()} plus {@link #getPadRight()}. */\r\n+\tpublic float getPadX () {\r\n+\t\treturn layout.getPadLeft() + layout.getPadRight();\r\n+\t}\r\n+\r\n+\t/** Returns {@link #getPadTop()} plus {@link #getPadBottom()}. */\r\n+\tpublic float getPadY () {\r\n+\t\treturn layout.getPadTop() + layout.getPadBottom();\r\n+\t}\r\n+\r\n \tpublic int getAlign () {\r\n \t\treturn layout.getAlign();\r\n \t}\r\n", "summaries": {"en": "Added getPadX/Y to Table", "zh": "Table，添加 getPadX/Y"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/v4/java/android/support/v4/widget/DrawerLayout.java b/v4/java/android/support/v4/widget/DrawerLayout.java\nindex e3e596535..bab235b5a 100644\n--- a/v4/java/android/support/v4/widget/DrawerLayout.java\n+++ b/v4/java/android/support/v4/widget/DrawerLayout.java\n@@ -258,7 +258,7 @@ public class DrawerLayout extends ViewGroup {\n \n     public DrawerLayout(Context context, AttributeSet attrs, int defStyle) {\n         super(context, attrs, defStyle);\n-\n+        setDescendantFocusability(ViewGroup.FOCUS_AFTER_DESCENDANTS);\n         final float density = getResources().getDisplayMetrics().density;\n         mMinDrawerMargin = (int) (MIN_DRAWER_MARGIN * density + 0.5f);\n         final float minVel = MIN_FLING_VELOCITY * density;\n", "summaries": {"en": "Set the focusability of descendants to FOCUS_AFTER_DESCENDANTS in the constructor of DrawerLayout", "zh": "在DrawerLayout的构造函数中设置后代的焦点可用性为FOCUS_AFTER_DESCENDANTS"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/opentripplanner-routing/src/main/java/org/opentripplanner/routing/trippattern/TripTimes.java b/opentripplanner-routing/src/main/java/org/opentripplanner/routing/trippattern/TripTimes.java\nindex 92a716baa..af8ccba1f 100644\n--- a/opentripplanner-routing/src/main/java/org/opentripplanner/routing/trippattern/TripTimes.java\n+++ b/opentripplanner-routing/src/main/java/org/opentripplanner/routing/trippattern/TripTimes.java\n@@ -90,6 +90,14 @@ public abstract class TripTimes {\n     public int getArrivalDelay(int hop) {\n         return getArrivalTime(hop) - getScheduledTripTimes().getArrivalTime(hop); \n     }\n+    \n+    /** \n+     * @return true if this TripTimes represents an unmodified, scheduled trip from a published \n+     * timetable or false if it is a updated, cancelled, or otherwise modified one.\n+     */\n+    public boolean isScheduled() {\n+        return this.getScheduledTripTimes() == this;\n+    }\n \n     /** Builds a string concisely representing all departure and arrival times in this TripTimes. */\n     public String dumpTimes() {\n", "summaries": {"en": "Added method isScheduled() to determine if TripTimes is within the schedule", "zh": "添加方法isScheduled()，用于判断TripTimes是否是计划内的"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/translator/src/org/jetbrains/k2js/translate/operation/OperatorTable.java b/translator/src/org/jetbrains/k2js/translate/operation/OperatorTable.java\nindex 865e2b7..bcc4d88 100644\n--- a/translator/src/org/jetbrains/k2js/translate/operation/OperatorTable.java\n+++ b/translator/src/org/jetbrains/k2js/translate/operation/OperatorTable.java\n@@ -40,6 +40,7 @@ public final class OperatorTable {\n         binaryOperatorsMap.put(JetTokens.LTEQ, JsBinaryOperator.LTE);\n         binaryOperatorsMap.put(JetTokens.EQEQ, JsBinaryOperator.REF_EQ);\n         binaryOperatorsMap.put(JetTokens.ANDAND, JsBinaryOperator.AND);\n+        binaryOperatorsMap.put(JetTokens.OROR, JsBinaryOperator.OR);\n         binaryOperatorsMap.put(JetTokens.EXCLEQ, JsBinaryOperator.NEQ);\n         binaryOperatorsMap.put(JetTokens.PERC, JsBinaryOperator.MOD);\n         binaryOperatorsMap.put(JetTokens.PLUSEQ, JsBinaryOperator.ASG_ADD);\n", "summaries": {"en": "Added mapping for logical operator OR", "zh": "添加了逻辑运算符OR的映射"}}
{"type": "feat", "subtype": "Ex", "change": "diff --git a/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java b/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java\nindex 13301fb..edefb13 100644\n--- a/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java\n+++ b/packages/SettingsProvider/src/com/android/providers/settings/DatabaseHelper.java\n@@ -70,7 +70,7 @@ public class DatabaseHelper extends SQLiteOpenHelper {\n     // database gets upgraded properly. At a minimum, please confirm that 'upgradeVersion'\n     // is properly propagated through your change.  Not doing so will result in a loss of user\n     // settings.\n-    private static final int DATABASE_VERSION = 107;\n+    private static final int DATABASE_VERSION = 108;\n \n     private Context mContext;\n     private int mUserHandle;\n@@ -1714,6 +1714,25 @@ public class DatabaseHelper extends SQLiteOpenHelper {\n             upgradeVersion = 107;\n         }\n \n+        if (upgradeVersion < 108) {\n+            // Reset the auto-brightness setting to default since the behavior\n+            // of the feature is now quite different and is being presented to\n+            // the user in a new way as \"adaptive brightness\".\n+            db.beginTransaction();\n+            SQLiteStatement stmt = null;\n+            try {\n+                stmt = db.compileStatement(\"INSERT OR REPLACE INTO system(name,value)\"\n+                        + \" VALUES(?,?);\");\n+                loadBooleanSetting(stmt, Settings.System.SCREEN_BRIGHTNESS_MODE,\n+                        R.bool.def_screen_brightness_automatic_mode);\n+                db.setTransactionSuccessful();\n+            } finally {\n+                db.endTransaction();\n+                if (stmt != null) stmt.close();\n+            }\n+            upgradeVersion = 108;\n+        }\n+\n         // *** Remember to update DATABASE_VERSION above!\n \n         if (upgradeVersion != currentVersion) {\n", "summaries": {"en": "Update database version and adjust auto-brightness strategy for low versions (<108)", "zh": "更新数据库版本并在低版本（<108）时调整auto-brightness策略"}}
{"type": "feat", "subtype": "E1", "change": "diff --git a/platform/lang-impl/src/com/intellij/codeInsight/daemon/impl/ShowIntentionsPass.java b/platform/lang-impl/src/com/intellij/codeInsight/daemon/impl/ShowIntentionsPass.java\nindex a40300a..394fdde 100644\n--- a/platform/lang-impl/src/com/intellij/codeInsight/daemon/impl/ShowIntentionsPass.java\n+++ b/platform/lang-impl/src/com/intellij/codeInsight/daemon/impl/ShowIntentionsPass.java\n@@ -325,7 +325,9 @@ public class ShowIntentionsPass extends TextEditorHighlightingPass {\n           intentionOffset = offset - 1;\n         }\n       }\n-      collectIntentionsFromDoNotShowLeveledInspections(project, hostFile, intentionElement, intentionOffset, intentions);\n+      if (intentionElement != null && intentionElement.getManager().isInProject(intentionElement)) {\n+        collectIntentionsFromDoNotShowLeveledInspections(project, hostFile, intentionElement, intentionOffset, intentions);\n+      }\n     }\n \n     final int line = hostDocument.getLineNumber(offset);\n", "summaries": {"en": "Add validation for intentionElement", "zh": "添加对intentionElement相关校验"}}
