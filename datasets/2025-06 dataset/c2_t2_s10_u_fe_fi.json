{
  "metadata": {
    "num_cases": 10,
    "concerns_per_case": 2,
    "types": [
      "feat",
      "fix"
    ],
    "allow_same_types": false,
    "seed": 42,
    "source_dataset": "datasets/candidates/codefuse-hqcm/dataset/test.json"
  },
  "cases": [
    {
      "tangleChange": "diff --git a/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java b/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\nindex e8337f6..0ab86e4 100644\n--- a/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\n+++ b/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\n@@ -122,9 +122,16 @@ public class SELinuxPolicyInstallReceiver extends ConfigUpdateInstallReceiver {\n     }\n \n     private void setEnforcingMode(Context context) {\n-        boolean mode = Settings.Global.getInt(context.getContentResolver(),\n-            Settings.Global.SELINUX_STATUS, 0) == 1;\n-        SELinux.setSELinuxEnforce(mode);\n+        String mode = Settings.Global.getString(context.getContentResolver(),\n+            Settings.Global.SELINUX_STATUS);\n+        if (mode.equals(\"1\")) {\n+            Slog.i(TAG, \"Setting enforcing mode\");\n+            SystemProperties.set(\"persist.selinux.enforcing\", mode);\n+        } else if (mode.equals(\"0\")) {\n+            Slog.i(TAG, \"Tried to set permissive mode, ignoring\");\n+        } else {\n+            Slog.e(TAG, \"Got invalid enforcing mode: \" + mode);\n+        }\n     }\n \n     @Override\n\ndiff --git a/core/java/android/os/Bundle.java b/core/java/android/os/Bundle.java\nindex c5c5372..133debb 100644\n--- a/core/java/android/os/Bundle.java\n+++ b/core/java/android/os/Bundle.java\n@@ -211,8 +211,9 @@ public final class Bundle extends BaseBundle implements Cloneable, Parcelable {\n                     } else if (obj instanceof Parcelable[]) {\n                         Parcelable[] array = (Parcelable[]) obj;\n                         for (int n = array.length - 1; n >= 0; n--) {\n-                            if ((array[n].describeContents()\n-                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0) {\n+                            Parcelable p = array[n];\n+                            if (p != null && ((p.describeContents()\n+                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0)) {\n                                 fdFound = true;\n                                 break;\n                             }\n",
      "atomicChanges": [
        {
          "change": "diff --git a/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java b/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\nindex e8337f6..0ab86e4 100644\n--- a/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\n+++ b/services/java/com/android/server/updates/SELinuxPolicyInstallReceiver.java\n@@ -122,9 +122,16 @@ public class SELinuxPolicyInstallReceiver extends ConfigUpdateInstallReceiver {\n     }\n \n     private void setEnforcingMode(Context context) {\n-        boolean mode = Settings.Global.getInt(context.getContentResolver(),\n-            Settings.Global.SELINUX_STATUS, 0) == 1;\n-        SELinux.setSELinuxEnforce(mode);\n+        String mode = Settings.Global.getString(context.getContentResolver(),\n+            Settings.Global.SELINUX_STATUS);\n+        if (mode.equals(\"1\")) {\n+            Slog.i(TAG, \"Setting enforcing mode\");\n+            SystemProperties.set(\"persist.selinux.enforcing\", mode);\n+        } else if (mode.equals(\"0\")) {\n+            Slog.i(TAG, \"Tried to set permissive mode, ignoring\");\n+        } else {\n+            Slog.e(TAG, \"Got invalid enforcing mode: \" + mode);\n+        }\n     }\n \n     @Override\n",
          "label": "feat"
        },
        {
          "change": "diff --git a/core/java/android/os/Bundle.java b/core/java/android/os/Bundle.java\nindex c5c5372..133debb 100644\n--- a/core/java/android/os/Bundle.java\n+++ b/core/java/android/os/Bundle.java\n@@ -211,8 +211,9 @@ public final class Bundle extends BaseBundle implements Cloneable, Parcelable {\n                     } else if (obj instanceof Parcelable[]) {\n                         Parcelable[] array = (Parcelable[]) obj;\n                         for (int n = array.length - 1; n >= 0; n--) {\n-                            if ((array[n].describeContents()\n-                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0) {\n+                            Parcelable p = array[n];\n+                            if (p != null && ((p.describeContents()\n+                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0)) {\n                                 fdFound = true;\n                                 break;\n                             }\n",
          "label": "fix"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/deeplearning4j-core/src/main/java/org/deeplearning4j/clustering/cluster/Point.java b/deeplearning4j-core/src/main/java/org/deeplearning4j/clustering/cluster/Point.java\nindex 6704791..35ed2c3 100644\n--- a/deeplearning4j-core/src/main/java/org/deeplearning4j/clustering/cluster/Point.java\n+++ b/deeplearning4j-core/src/main/java/org/deeplearning4j/clustering/cluster/Point.java\n@@ -93,6 +93,16 @@ public class Point implements INDArray {\n \t\tthis.array = array;\n \t}\n \n+\t/**\n+\t * The rank of the ndarray (the number of dimensions\n+\t *\n+\t * @return the rank for the ndarray\n+\t */\n+\t@Override\n+\tpublic int rank() {\n+\t\treturn array.rank();\n+\t}\n+\n \t@Override\n \tpublic int stride(int dimension) {\n \t\treturn array.stride(dimension);\n\ndiff --git a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\nindex 402d63fff..a05c4a877 100644\n--- a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n+++ b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n@@ -37,7 +37,7 @@ public class AppCompatTextView extends TextView {\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs) {\n-        this(context, attrs, 0);\n+        this(context, attrs, android.R.attr.textViewStyle);\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs, int defStyle) {\n",
      "atomicChanges": [
        {
          "change": "diff --git a/deeplearning4j-core/src/main/java/org/deeplearning4j/clustering/cluster/Point.java b/deeplearning4j-core/src/main/java/org/deeplearning4j/clustering/cluster/Point.java\nindex 6704791..35ed2c3 100644\n--- a/deeplearning4j-core/src/main/java/org/deeplearning4j/clustering/cluster/Point.java\n+++ b/deeplearning4j-core/src/main/java/org/deeplearning4j/clustering/cluster/Point.java\n@@ -93,6 +93,16 @@ public class Point implements INDArray {\n \t\tthis.array = array;\n \t}\n \n+\t/**\n+\t * The rank of the ndarray (the number of dimensions\n+\t *\n+\t * @return the rank for the ndarray\n+\t */\n+\t@Override\n+\tpublic int rank() {\n+\t\treturn array.rank();\n+\t}\n+\n \t@Override\n \tpublic int stride(int dimension) {\n \t\treturn array.stride(dimension);\n",
          "label": "feat"
        },
        {
          "change": "diff --git a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\nindex 402d63fff..a05c4a877 100644\n--- a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n+++ b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n@@ -37,7 +37,7 @@ public class AppCompatTextView extends TextView {\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs) {\n-        this(context, attrs, 0);\n+        this(context, attrs, android.R.attr.textViewStyle);\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs, int defStyle) {\n",
          "label": "fix"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/camel-core/src/main/java/org/apache/camel/component/file/FileConsumer.java b/camel-core/src/main/java/org/apache/camel/component/file/FileConsumer.java\nindex f96c605c05..df3fe20eb3 100644\n--- a/camel-core/src/main/java/org/apache/camel/component/file/FileConsumer.java\n+++ b/camel-core/src/main/java/org/apache/camel/component/file/FileConsumer.java\n@@ -253,7 +253,9 @@ public class FileConsumer extends ScheduledPollConsumer {\n             return false;\n         } else if (endpoint.isIdempotent() && endpoint.getIdempotentRepository().contains(file.getPath())) {\n             // use file.getPath as key for the idempotent repository to support files with same name but in different folders\n-            LOG.warn(\"FileConsumer is idempotent and the file has been consumed before. Will skip this file: \" + file);\n+            if (LOG.isTraceEnabled()) {\n+                LOG.trace(\"FileConsumer is idempotent and the file has been consumed before. Will skip this file: \" + file);\n+            }\n             return false;\n         }\n \n\ndiff --git a/platform/util/src/com/intellij/openapi/util/MultiValuesMap.java b/platform/util/src/com/intellij/openapi/util/MultiValuesMap.java\nindex 03037b2..ee0b7d8 100644\n--- a/platform/util/src/com/intellij/openapi/util/MultiValuesMap.java\n+++ b/platform/util/src/com/intellij/openapi/util/MultiValuesMap.java\n@@ -71,7 +71,7 @@ public class MultiValuesMap<K, V>{\n   }\n \n   public void remove(K key, V value) {\n-    if (!myBaseMap.containsKey(key)) return;\n+    if (myBaseMap.get(key) == null) return;\n     final Collection<V> values = myBaseMap.get(key);\n     values.remove(value);\n     if (values.isEmpty()) {\n",
      "atomicChanges": [
        {
          "change": "diff --git a/camel-core/src/main/java/org/apache/camel/component/file/FileConsumer.java b/camel-core/src/main/java/org/apache/camel/component/file/FileConsumer.java\nindex f96c605c05..df3fe20eb3 100644\n--- a/camel-core/src/main/java/org/apache/camel/component/file/FileConsumer.java\n+++ b/camel-core/src/main/java/org/apache/camel/component/file/FileConsumer.java\n@@ -253,7 +253,9 @@ public class FileConsumer extends ScheduledPollConsumer {\n             return false;\n         } else if (endpoint.isIdempotent() && endpoint.getIdempotentRepository().contains(file.getPath())) {\n             // use file.getPath as key for the idempotent repository to support files with same name but in different folders\n-            LOG.warn(\"FileConsumer is idempotent and the file has been consumed before. Will skip this file: \" + file);\n+            if (LOG.isTraceEnabled()) {\n+                LOG.trace(\"FileConsumer is idempotent and the file has been consumed before. Will skip this file: \" + file);\n+            }\n             return false;\n         }\n \n",
          "label": "feat"
        },
        {
          "change": "diff --git a/platform/util/src/com/intellij/openapi/util/MultiValuesMap.java b/platform/util/src/com/intellij/openapi/util/MultiValuesMap.java\nindex 03037b2..ee0b7d8 100644\n--- a/platform/util/src/com/intellij/openapi/util/MultiValuesMap.java\n+++ b/platform/util/src/com/intellij/openapi/util/MultiValuesMap.java\n@@ -71,7 +71,7 @@ public class MultiValuesMap<K, V>{\n   }\n \n   public void remove(K key, V value) {\n-    if (!myBaseMap.containsKey(key)) return;\n+    if (myBaseMap.get(key) == null) return;\n     final Collection<V> values = myBaseMap.get(key);\n     values.remove(value);\n     if (values.isEmpty()) {\n",
          "label": "fix"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/platform/platform-api/src/com/intellij/openapi/fileChooser/FileChooserDescriptorFactory.java b/platform/platform-api/src/com/intellij/openapi/fileChooser/FileChooserDescriptorFactory.java\nindex 7c57825..1f18421 100644\n--- a/platform/platform-api/src/com/intellij/openapi/fileChooser/FileChooserDescriptorFactory.java\n+++ b/platform/platform-api/src/com/intellij/openapi/fileChooser/FileChooserDescriptorFactory.java\n@@ -95,4 +95,12 @@ public class FileChooserDescriptorFactory {\n       }\n     });\n   }\n+\n+  /**\n+   * @deprecated not very useful (to be removed in IDEA 15)\n+   */\n+  @SuppressWarnings(\"UnusedDeclaration\")\n+  public static FileChooserDescriptor getDirectoryChooserDescriptor(String objectName) {\n+    return createSingleFolderDescriptor().withTitle(\"Select \" + objectName);\n+  }\n }\n\ndiff --git a/services/core/java/com/android/server/am/ActivityManagerService.java b/services/core/java/com/android/server/am/ActivityManagerService.java\nindex 79cb60e..a435de7 100755\n--- a/services/core/java/com/android/server/am/ActivityManagerService.java\n+++ b/services/core/java/com/android/server/am/ActivityManagerService.java\n@@ -8054,7 +8054,7 @@ public final class ActivityManagerService extends ActivityManagerNative\n                 checkedGrants = true;\n             }\n             userId = handleIncomingUser(callingPid, callingUid, userId,\n-                    false, ALLOW_NON_FULL_IN_PROFILE,\n+                    false, ALLOW_NON_FULL,\n                     \"checkContentProviderPermissionLocked \" + cpi.authority, null);\n             if (userId != tmpTargetUserId) {\n                 // When we actually went to determine the final targer user ID, this ended\n",
      "atomicChanges": [
        {
          "change": "diff --git a/platform/platform-api/src/com/intellij/openapi/fileChooser/FileChooserDescriptorFactory.java b/platform/platform-api/src/com/intellij/openapi/fileChooser/FileChooserDescriptorFactory.java\nindex 7c57825..1f18421 100644\n--- a/platform/platform-api/src/com/intellij/openapi/fileChooser/FileChooserDescriptorFactory.java\n+++ b/platform/platform-api/src/com/intellij/openapi/fileChooser/FileChooserDescriptorFactory.java\n@@ -95,4 +95,12 @@ public class FileChooserDescriptorFactory {\n       }\n     });\n   }\n+\n+  /**\n+   * @deprecated not very useful (to be removed in IDEA 15)\n+   */\n+  @SuppressWarnings(\"UnusedDeclaration\")\n+  public static FileChooserDescriptor getDirectoryChooserDescriptor(String objectName) {\n+    return createSingleFolderDescriptor().withTitle(\"Select \" + objectName);\n+  }\n }\n",
          "label": "feat"
        },
        {
          "change": "diff --git a/services/core/java/com/android/server/am/ActivityManagerService.java b/services/core/java/com/android/server/am/ActivityManagerService.java\nindex 79cb60e..a435de7 100755\n--- a/services/core/java/com/android/server/am/ActivityManagerService.java\n+++ b/services/core/java/com/android/server/am/ActivityManagerService.java\n@@ -8054,7 +8054,7 @@ public final class ActivityManagerService extends ActivityManagerNative\n                 checkedGrants = true;\n             }\n             userId = handleIncomingUser(callingPid, callingUid, userId,\n-                    false, ALLOW_NON_FULL_IN_PROFILE,\n+                    false, ALLOW_NON_FULL,\n                     \"checkContentProviderPermissionLocked \" + cpi.authority, null);\n             if (userId != tmpTargetUserId) {\n                 // When we actually went to determine the final targer user ID, this ended\n",
          "label": "fix"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/src/com/facebook/buck/rules/KnownBuildRuleTypes.java b/src/com/facebook/buck/rules/KnownBuildRuleTypes.java\nindex bf18a3c..287b2fa 100644\n--- a/src/com/facebook/buck/rules/KnownBuildRuleTypes.java\n+++ b/src/com/facebook/buck/rules/KnownBuildRuleTypes.java\n@@ -606,7 +606,8 @@ public class KnownBuildRuleTypes {\n                     cxxLibraryDescription,\n                     /* cpp2 */ true),\n                 new ThriftPythonEnhancer(thriftBuckConfig, ThriftPythonEnhancer.Type.NORMAL),\n-                new ThriftPythonEnhancer(thriftBuckConfig, ThriftPythonEnhancer.Type.TWISTED))));\n+                new ThriftPythonEnhancer(thriftBuckConfig, ThriftPythonEnhancer.Type.TWISTED),\n+                new ThriftPythonEnhancer(thriftBuckConfig, ThriftPythonEnhancer.Type.ASYNCIO))));\n     builder.register(new XcodePostbuildScriptDescription());\n     builder.register(new XcodePrebuildScriptDescription());\n     builder.register(new XcodeWorkspaceConfigDescription());\n\ndiff --git a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\nindex cf4aa61..ae18e12 100644\n--- a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n+++ b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n@@ -118,9 +118,9 @@ public class CSVDataFetcher extends BaseDataFetcher {\n         }\n \n         this.numOutcomes = labels.size();\n+        this.totalExamples = l.size();\n+        \n         all = DataSet.merge(l);\n-\n-\n     }\n \n \n",
      "atomicChanges": [
        {
          "change": "diff --git a/src/com/facebook/buck/rules/KnownBuildRuleTypes.java b/src/com/facebook/buck/rules/KnownBuildRuleTypes.java\nindex bf18a3c..287b2fa 100644\n--- a/src/com/facebook/buck/rules/KnownBuildRuleTypes.java\n+++ b/src/com/facebook/buck/rules/KnownBuildRuleTypes.java\n@@ -606,7 +606,8 @@ public class KnownBuildRuleTypes {\n                     cxxLibraryDescription,\n                     /* cpp2 */ true),\n                 new ThriftPythonEnhancer(thriftBuckConfig, ThriftPythonEnhancer.Type.NORMAL),\n-                new ThriftPythonEnhancer(thriftBuckConfig, ThriftPythonEnhancer.Type.TWISTED))));\n+                new ThriftPythonEnhancer(thriftBuckConfig, ThriftPythonEnhancer.Type.TWISTED),\n+                new ThriftPythonEnhancer(thriftBuckConfig, ThriftPythonEnhancer.Type.ASYNCIO))));\n     builder.register(new XcodePostbuildScriptDescription());\n     builder.register(new XcodePrebuildScriptDescription());\n     builder.register(new XcodeWorkspaceConfigDescription());\n",
          "label": "feat"
        },
        {
          "change": "diff --git a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\nindex cf4aa61..ae18e12 100644\n--- a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n+++ b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n@@ -118,9 +118,9 @@ public class CSVDataFetcher extends BaseDataFetcher {\n         }\n \n         this.numOutcomes = labels.size();\n+        this.totalExamples = l.size();\n+        \n         all = DataSet.merge(l);\n-\n-\n     }\n \n \n",
          "label": "fix"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/media/packages/BluetoothMidiService/src/com/android/bluetoothmidiservice/BluetoothMidiDevice.java b/media/packages/BluetoothMidiService/src/com/android/bluetoothmidiservice/BluetoothMidiDevice.java\nindex e6d59e4..444705c 100644\n--- a/media/packages/BluetoothMidiService/src/com/android/bluetoothmidiservice/BluetoothMidiDevice.java\n+++ b/media/packages/BluetoothMidiService/src/com/android/bluetoothmidiservice/BluetoothMidiDevice.java\n@@ -147,14 +147,22 @@ public final class BluetoothMidiDevice {\n             // switch to receiving notifications after initial characteristic read\n             mBluetoothGatt.setCharacteristicNotification(characteristic, true);\n \n+            // Use writeType that requests acknowledgement.\n+            // This improves compatibility with various BLE-MIDI devices.\n+            int originalWriteType = characteristic.getWriteType();\n+            characteristic.setWriteType(BluetoothGattCharacteristic.WRITE_TYPE_DEFAULT);\n+\n             BluetoothGattDescriptor descriptor = characteristic.getDescriptor(\n                     CLIENT_CHARACTERISTIC_CONFIG);\n             if (descriptor != null) {\n                 descriptor.setValue(BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE);\n-                mBluetoothGatt.writeDescriptor(descriptor);\n+                boolean result = mBluetoothGatt.writeDescriptor(descriptor);\n+                Log.d(TAG, \"writeDescriptor returned \" + result);\n             } else {\n                 Log.e(TAG, \"No CLIENT_CHARACTERISTIC_CONFIG for device \" + mBluetoothDevice);\n             }\n+\n+            characteristic.setWriteType(originalWriteType);\n         }\n \n         @Override\n\ndiff --git a/server/sonar-search/src/main/java/org/sonar/search/EsSettings.java b/server/sonar-search/src/main/java/org/sonar/search/EsSettings.java\nindex 10a2597135..5736ecd771 100644\n--- a/server/sonar-search/src/main/java/org/sonar/search/EsSettings.java\n+++ b/server/sonar-search/src/main/java/org/sonar/search/EsSettings.java\n@@ -134,6 +134,7 @@ public class EsSettings implements EsSettingsMBean {\n       LOGGER.warn(\"Elasticsearch HTTP connector is enabled on port {}. MUST NOT BE USED FOR PRODUCTION\", httpPort);\n       // see https://github.com/lmenezes/elasticsearch-kopf/issues/195\n       builder.put(\"http.cors.enabled\", true);\n+      builder.put(\"http.cors.allow-origin\", \"*\");\n       builder.put(\"http.enabled\", true);\n       builder.put(\"http.host\", host.getHostAddress());\n       builder.put(\"http.port\", httpPort);\n@@ -169,7 +170,6 @@ public class EsSettings implements EsSettingsMBean {\n     builder.put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, replicationFactor);\n     builder.put(\"cluster.name\", getClusterName());\n     builder.put(\"cluster.routing.allocation.awareness.attributes\", \"rack_id\");\n-    String nodeName = getNodeName();\n     builder.put(\"node.rack_id\", nodeName);\n     builder.put(\"node.name\", nodeName);\n     builder.put(\"node.data\", true);\n",
      "atomicChanges": [
        {
          "change": "diff --git a/media/packages/BluetoothMidiService/src/com/android/bluetoothmidiservice/BluetoothMidiDevice.java b/media/packages/BluetoothMidiService/src/com/android/bluetoothmidiservice/BluetoothMidiDevice.java\nindex e6d59e4..444705c 100644\n--- a/media/packages/BluetoothMidiService/src/com/android/bluetoothmidiservice/BluetoothMidiDevice.java\n+++ b/media/packages/BluetoothMidiService/src/com/android/bluetoothmidiservice/BluetoothMidiDevice.java\n@@ -147,14 +147,22 @@ public final class BluetoothMidiDevice {\n             // switch to receiving notifications after initial characteristic read\n             mBluetoothGatt.setCharacteristicNotification(characteristic, true);\n \n+            // Use writeType that requests acknowledgement.\n+            // This improves compatibility with various BLE-MIDI devices.\n+            int originalWriteType = characteristic.getWriteType();\n+            characteristic.setWriteType(BluetoothGattCharacteristic.WRITE_TYPE_DEFAULT);\n+\n             BluetoothGattDescriptor descriptor = characteristic.getDescriptor(\n                     CLIENT_CHARACTERISTIC_CONFIG);\n             if (descriptor != null) {\n                 descriptor.setValue(BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE);\n-                mBluetoothGatt.writeDescriptor(descriptor);\n+                boolean result = mBluetoothGatt.writeDescriptor(descriptor);\n+                Log.d(TAG, \"writeDescriptor returned \" + result);\n             } else {\n                 Log.e(TAG, \"No CLIENT_CHARACTERISTIC_CONFIG for device \" + mBluetoothDevice);\n             }\n+\n+            characteristic.setWriteType(originalWriteType);\n         }\n \n         @Override\n",
          "label": "feat"
        },
        {
          "change": "diff --git a/server/sonar-search/src/main/java/org/sonar/search/EsSettings.java b/server/sonar-search/src/main/java/org/sonar/search/EsSettings.java\nindex 10a2597135..5736ecd771 100644\n--- a/server/sonar-search/src/main/java/org/sonar/search/EsSettings.java\n+++ b/server/sonar-search/src/main/java/org/sonar/search/EsSettings.java\n@@ -134,6 +134,7 @@ public class EsSettings implements EsSettingsMBean {\n       LOGGER.warn(\"Elasticsearch HTTP connector is enabled on port {}. MUST NOT BE USED FOR PRODUCTION\", httpPort);\n       // see https://github.com/lmenezes/elasticsearch-kopf/issues/195\n       builder.put(\"http.cors.enabled\", true);\n+      builder.put(\"http.cors.allow-origin\", \"*\");\n       builder.put(\"http.enabled\", true);\n       builder.put(\"http.host\", host.getHostAddress());\n       builder.put(\"http.port\", httpPort);\n@@ -169,7 +170,6 @@ public class EsSettings implements EsSettingsMBean {\n     builder.put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, replicationFactor);\n     builder.put(\"cluster.name\", getClusterName());\n     builder.put(\"cluster.routing.allocation.awareness.attributes\", \"rack_id\");\n-    String nodeName = getNodeName();\n     builder.put(\"node.rack_id\", nodeName);\n     builder.put(\"node.name\", nodeName);\n     builder.put(\"node.data\", true);\n",
          "label": "fix"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/jodd-http/src/main/java/jodd/http/HttpBrowser.java b/jodd-http/src/main/java/jodd/http/HttpBrowser.java\nindex 7625e5db..ca05d2ff 100644\n--- a/jodd-http/src/main/java/jodd/http/HttpBrowser.java\n+++ b/jodd-http/src/main/java/jodd/http/HttpBrowser.java\n@@ -176,7 +176,6 @@ public class HttpBrowser {\n \t\tif (newCookies != null) {\n \t\t\tfor (String cookieValue : newCookies) {\n \t\t\t\tCookie cookie = new Cookie(cookieValue);\n-\n \t\t\t\tcookies.put(cookie.getName(), cookie);\n \t\t\t}\n \t\t}\n@@ -193,6 +192,12 @@ public class HttpBrowser {\n \n \t\tif (!cookies.isEmpty()) {\n \t\t\tfor (Cookie cookie: cookies.values()) {\n+                \n+\t\t\t    Integer maxAge = cookie.getMaxAge();\n+\t\t\t\tif (maxAge != null && maxAge.intValue() == 0) {\n+\t\t\t\t    continue;\n+\t\t\t\t}\n+\n \t\t\t\tif (!first) {\n \t\t\t\t\tcookieString.append(\"; \");\n \t\t\t\t}\n@@ -205,4 +210,4 @@ public class HttpBrowser {\n \t\t\thttpRequest.header(\"cookie\", cookieString.toString(), true);\n \t\t}\n \t}\n-}\n\\ No newline at end of file\n+}\n\ndiff --git a/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsProducer.java b/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsProducer.java\nindex 8329372811..f3427b3d1a 100644\n--- a/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsProducer.java\n+++ b/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsProducer.java\n@@ -382,7 +382,7 @@ public class JmsProducer extends DefaultProducer {\n         if (exchange.hasOut()) {\n             JmsMessage out = (JmsMessage) exchange.getOut();\n             try {\n-                if (out != null) {\n+                if (out != null && out.getJmsMessage() != null) {\n                     out.setMessageId(out.getJmsMessage().getJMSMessageID());\n                 }\n             } catch (JMSException e) {\n",
      "atomicChanges": [
        {
          "change": "diff --git a/jodd-http/src/main/java/jodd/http/HttpBrowser.java b/jodd-http/src/main/java/jodd/http/HttpBrowser.java\nindex 7625e5db..ca05d2ff 100644\n--- a/jodd-http/src/main/java/jodd/http/HttpBrowser.java\n+++ b/jodd-http/src/main/java/jodd/http/HttpBrowser.java\n@@ -176,7 +176,6 @@ public class HttpBrowser {\n \t\tif (newCookies != null) {\n \t\t\tfor (String cookieValue : newCookies) {\n \t\t\t\tCookie cookie = new Cookie(cookieValue);\n-\n \t\t\t\tcookies.put(cookie.getName(), cookie);\n \t\t\t}\n \t\t}\n@@ -193,6 +192,12 @@ public class HttpBrowser {\n \n \t\tif (!cookies.isEmpty()) {\n \t\t\tfor (Cookie cookie: cookies.values()) {\n+                \n+\t\t\t    Integer maxAge = cookie.getMaxAge();\n+\t\t\t\tif (maxAge != null && maxAge.intValue() == 0) {\n+\t\t\t\t    continue;\n+\t\t\t\t}\n+\n \t\t\t\tif (!first) {\n \t\t\t\t\tcookieString.append(\"; \");\n \t\t\t\t}\n@@ -205,4 +210,4 @@ public class HttpBrowser {\n \t\t\thttpRequest.header(\"cookie\", cookieString.toString(), true);\n \t\t}\n \t}\n-}\n\\ No newline at end of file\n+}\n",
          "label": "feat"
        },
        {
          "change": "diff --git a/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsProducer.java b/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsProducer.java\nindex 8329372811..f3427b3d1a 100644\n--- a/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsProducer.java\n+++ b/components/camel-jms/src/main/java/org/apache/camel/component/jms/JmsProducer.java\n@@ -382,7 +382,7 @@ public class JmsProducer extends DefaultProducer {\n         if (exchange.hasOut()) {\n             JmsMessage out = (JmsMessage) exchange.getOut();\n             try {\n-                if (out != null) {\n+                if (out != null && out.getJmsMessage() != null) {\n                     out.setMessageId(out.getJmsMessage().getJMSMessageID());\n                 }\n             } catch (JMSException e) {\n",
          "label": "fix"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\nindex 80300020..92718985 100644\n--- a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n+++ b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n@@ -115,7 +115,7 @@ public class OAuth2ProviderBeanDefinitionParser implements BeanDefinitionParser\n       String authenticationCacheRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"authentication-cache-ref\");\n       String approvalFilterRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"user-approval-filter-ref\");\n       String approvalHandlerRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n-      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n+      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"redirect-strategy-ref\");\n       if (!StringUtils.hasText(verificationCodeRedirectStrategyRef)) {\n         verificationCodeRedirectStrategyRef = redirectStrategyRef;\n       }\n\ndiff --git a/src/main/java/org/jboss/netty/example/http/HttpClient.java b/src/main/java/org/jboss/netty/example/http/HttpClient.java\nindex 1e91769..b551e53 100644\n--- a/src/main/java/org/jboss/netty/example/http/HttpClient.java\n+++ b/src/main/java/org/jboss/netty/example/http/HttpClient.java\n@@ -87,7 +87,12 @@ public class HttpClient {\n         // Send the HTTP request.\n         HttpRequest request = new DefaultHttpRequest(HttpVersion.HTTP_1_0, HttpMethod.GET, uri);\n         request.addHeader(HttpHeaders.HOST, host);\n-        ChannelFuture lastWriteFuture = channel.write(request);\n-        lastWriteFuture.awaitUninterruptibly();\n+        channel.write(request);\n+\n+        // Wait for the server to close the connection.\n+        channel.getCloseFuture().awaitUninterruptibly();\n+\n+        // Shut down executor threads to exit.\n+        factory.getExternalResource().release();\n     }\n }\n\\ No newline at end of file\n",
      "atomicChanges": [
        {
          "change": "diff --git a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\nindex 80300020..92718985 100644\n--- a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n+++ b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n@@ -115,7 +115,7 @@ public class OAuth2ProviderBeanDefinitionParser implements BeanDefinitionParser\n       String authenticationCacheRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"authentication-cache-ref\");\n       String approvalFilterRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"user-approval-filter-ref\");\n       String approvalHandlerRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n-      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n+      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"redirect-strategy-ref\");\n       if (!StringUtils.hasText(verificationCodeRedirectStrategyRef)) {\n         verificationCodeRedirectStrategyRef = redirectStrategyRef;\n       }\n",
          "label": "fix"
        },
        {
          "change": "diff --git a/src/main/java/org/jboss/netty/example/http/HttpClient.java b/src/main/java/org/jboss/netty/example/http/HttpClient.java\nindex 1e91769..b551e53 100644\n--- a/src/main/java/org/jboss/netty/example/http/HttpClient.java\n+++ b/src/main/java/org/jboss/netty/example/http/HttpClient.java\n@@ -87,7 +87,12 @@ public class HttpClient {\n         // Send the HTTP request.\n         HttpRequest request = new DefaultHttpRequest(HttpVersion.HTTP_1_0, HttpMethod.GET, uri);\n         request.addHeader(HttpHeaders.HOST, host);\n-        ChannelFuture lastWriteFuture = channel.write(request);\n-        lastWriteFuture.awaitUninterruptibly();\n+        channel.write(request);\n+\n+        // Wait for the server to close the connection.\n+        channel.getCloseFuture().awaitUninterruptibly();\n+\n+        // Shut down executor threads to exit.\n+        factory.getExternalResource().release();\n     }\n }\n\\ No newline at end of file\n",
          "label": "feat"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/library/src/se/emilsjolander/stickylistheaders/StickyListHeadersListView.java b/library/src/se/emilsjolander/stickylistheaders/StickyListHeadersListView.java\nindex 1030114..ecccdc5 100644\n--- a/library/src/se/emilsjolander/stickylistheaders/StickyListHeadersListView.java\n+++ b/library/src/se/emilsjolander/stickylistheaders/StickyListHeadersListView.java\n@@ -503,9 +503,7 @@ public class StickyListHeadersListView extends FrameLayout {\n \tprivate int getHeaderOverlap(int position) {\n \t\tboolean isStartOfSection = isStartOfSection(position);\n \t\tif (!isStartOfSection) {\n-\t\t\tView header = mAdapter.getHeaderView(position, null, mList);\n-\t\t\theader.setLayoutParams(new ViewGroup.LayoutParams(\n-\t\t\t\t\tLayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT));\n+\t\t\tView header = mAdapter.getView(position, null, mList);\n \n \t\t\tfinal int width = getWidth();\n \t\t\tfinal int parentWidthMeasureSpec = MeasureSpec.makeMeasureSpec(\n\ndiff --git a/java/org/apache/tomcat/websocket/WsFrameBase.java b/java/org/apache/tomcat/websocket/WsFrameBase.java\nindex 00b312e48..8ca2691bc 100644\n--- a/java/org/apache/tomcat/websocket/WsFrameBase.java\n+++ b/java/org/apache/tomcat/websocket/WsFrameBase.java\n@@ -402,6 +402,13 @@ public abstract class WsFrameBase {\n                 // End of frame and possible message as well.\n \n                 if (continuationExpected) {\n+                    // If partial messages are supported, send what we have\n+                    // managed to decode\n+                    if (usePartial()) {\n+                        messageBufferText.flip();\n+                        sendMessageText(false);\n+                        messageBufferText.clear();\n+                    }\n                     messageBufferBinary.compact();\n                     newFrame();\n                     // Process next frame\n",
      "atomicChanges": [
        {
          "change": "diff --git a/library/src/se/emilsjolander/stickylistheaders/StickyListHeadersListView.java b/library/src/se/emilsjolander/stickylistheaders/StickyListHeadersListView.java\nindex 1030114..ecccdc5 100644\n--- a/library/src/se/emilsjolander/stickylistheaders/StickyListHeadersListView.java\n+++ b/library/src/se/emilsjolander/stickylistheaders/StickyListHeadersListView.java\n@@ -503,9 +503,7 @@ public class StickyListHeadersListView extends FrameLayout {\n \tprivate int getHeaderOverlap(int position) {\n \t\tboolean isStartOfSection = isStartOfSection(position);\n \t\tif (!isStartOfSection) {\n-\t\t\tView header = mAdapter.getHeaderView(position, null, mList);\n-\t\t\theader.setLayoutParams(new ViewGroup.LayoutParams(\n-\t\t\t\t\tLayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT));\n+\t\t\tView header = mAdapter.getView(position, null, mList);\n \n \t\t\tfinal int width = getWidth();\n \t\t\tfinal int parentWidthMeasureSpec = MeasureSpec.makeMeasureSpec(\n",
          "label": "fix"
        },
        {
          "change": "diff --git a/java/org/apache/tomcat/websocket/WsFrameBase.java b/java/org/apache/tomcat/websocket/WsFrameBase.java\nindex 00b312e48..8ca2691bc 100644\n--- a/java/org/apache/tomcat/websocket/WsFrameBase.java\n+++ b/java/org/apache/tomcat/websocket/WsFrameBase.java\n@@ -402,6 +402,13 @@ public abstract class WsFrameBase {\n                 // End of frame and possible message as well.\n \n                 if (continuationExpected) {\n+                    // If partial messages are supported, send what we have\n+                    // managed to decode\n+                    if (usePartial()) {\n+                        messageBufferText.flip();\n+                        sendMessageText(false);\n+                        messageBufferText.clear();\n+                    }\n                     messageBufferBinary.compact();\n                     newFrame();\n                     // Process next frame\n",
          "label": "feat"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java b/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java\nindex ab142a0..04dba3f 100644\n--- a/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java\n+++ b/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java\n@@ -80,4 +80,12 @@ public class Join<SRC, DST> {\n         return whereCollector.combineWhereConditions(\" AND \", cond1, cond2, condMore);\n     }\n \n+    /**\n+     * Usually you don't need this value; just in case you are mixing custom\n+     * {@link de.greenrobot.dao.query.WhereCondition.StringCondition} into the query, this value allows to reference\n+     * the joined (target) table.\n+     */\n+    public String getTablePrefix() {\n+        return tablePrefix;\n+    }\n }\n\ndiff --git a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\nindex 6b7ac8c..b4d8c63 100644\n--- a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n+++ b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n@@ -942,6 +942,7 @@ public class SettingsBackupAgent extends BackupAgentHelper {\n                 ByteArrayOutputStream bos = new ByteArrayOutputStream();\n                 OutputStreamWriter out = new OutputStreamWriter(bos);\n                 fromFile.write(out);\n+                out.flush();\n                 return bos.toByteArray();\n             } else {\n                 return EMPTY_DATA;\n",
      "atomicChanges": [
        {
          "change": "diff --git a/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java b/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java\nindex ab142a0..04dba3f 100644\n--- a/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java\n+++ b/DaoCore/src/main/java/de/greenrobot/dao/query/Join.java\n@@ -80,4 +80,12 @@ public class Join<SRC, DST> {\n         return whereCollector.combineWhereConditions(\" AND \", cond1, cond2, condMore);\n     }\n \n+    /**\n+     * Usually you don't need this value; just in case you are mixing custom\n+     * {@link de.greenrobot.dao.query.WhereCondition.StringCondition} into the query, this value allows to reference\n+     * the joined (target) table.\n+     */\n+    public String getTablePrefix() {\n+        return tablePrefix;\n+    }\n }\n",
          "label": "feat"
        },
        {
          "change": "diff --git a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\nindex 6b7ac8c..b4d8c63 100644\n--- a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n+++ b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n@@ -942,6 +942,7 @@ public class SettingsBackupAgent extends BackupAgentHelper {\n                 ByteArrayOutputStream bos = new ByteArrayOutputStream();\n                 OutputStreamWriter out = new OutputStreamWriter(bos);\n                 fromFile.write(out);\n+                out.flush();\n                 return bos.toByteArray();\n             } else {\n                 return EMPTY_DATA;\n",
          "label": "fix"
        }
      ]
    }
  ]
}