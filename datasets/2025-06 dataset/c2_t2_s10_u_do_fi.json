{
  "metadata": {
    "num_cases": 10,
    "concerns_per_case": 2,
    "types": [
      "docs",
      "fix"
    ],
    "allow_same_types": false,
    "seed": 42,
    "source_dataset": "datasets/candidates/codefuse-hqcm/dataset/test.json"
  },
  "cases": [
    {
      "tangleChange": "diff --git a/core/java/android/os/Bundle.java b/core/java/android/os/Bundle.java\nindex c5c5372..133debb 100644\n--- a/core/java/android/os/Bundle.java\n+++ b/core/java/android/os/Bundle.java\n@@ -211,8 +211,9 @@ public final class Bundle extends BaseBundle implements Cloneable, Parcelable {\n                     } else if (obj instanceof Parcelable[]) {\n                         Parcelable[] array = (Parcelable[]) obj;\n                         for (int n = array.length - 1; n >= 0; n--) {\n-                            if ((array[n].describeContents()\n-                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0) {\n+                            Parcelable p = array[n];\n+                            if (p != null && ((p.describeContents()\n+                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0)) {\n                                 fdFound = true;\n                                 break;\n                             }\n\ndiff --git a/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java b/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java\nindex 9942510..23dd5d4 100644\n--- a/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java\n+++ b/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java\n@@ -506,11 +506,19 @@ public class ShowcaseView extends RelativeLayout\n             return this;\n         }\n \n+        /**\n+         * Sets the paint that will draw the text as specified by {@link #setContentText(CharSequence)}\n+         * or {@link #setContentText(int)}\n+         */\n         public Builder setContentTextPaint(TextPaint textPaint) {\n             showcaseView.setContentTextPaint(textPaint);\n             return this;\n         }\n \n+        /**\n+         * Sets the paint that will draw the text as specified by {@link #setContentTitle(CharSequence)}\n+         * or {@link #setContentTitle(int)}\n+         */\n         public Builder setContentTitlePaint(TextPaint textPaint) {\n             showcaseView.setContentTitlePaint(textPaint);\n             return this;\n",
      "atomicChanges": [
        {
          "change": "diff --git a/core/java/android/os/Bundle.java b/core/java/android/os/Bundle.java\nindex c5c5372..133debb 100644\n--- a/core/java/android/os/Bundle.java\n+++ b/core/java/android/os/Bundle.java\n@@ -211,8 +211,9 @@ public final class Bundle extends BaseBundle implements Cloneable, Parcelable {\n                     } else if (obj instanceof Parcelable[]) {\n                         Parcelable[] array = (Parcelable[]) obj;\n                         for (int n = array.length - 1; n >= 0; n--) {\n-                            if ((array[n].describeContents()\n-                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0) {\n+                            Parcelable p = array[n];\n+                            if (p != null && ((p.describeContents()\n+                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0)) {\n                                 fdFound = true;\n                                 break;\n                             }\n",
          "label": "fix"
        },
        {
          "change": "diff --git a/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java b/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java\nindex 9942510..23dd5d4 100644\n--- a/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java\n+++ b/library/src/main/java/com/github/amlcurran/showcaseview/ShowcaseView.java\n@@ -506,11 +506,19 @@ public class ShowcaseView extends RelativeLayout\n             return this;\n         }\n \n+        /**\n+         * Sets the paint that will draw the text as specified by {@link #setContentText(CharSequence)}\n+         * or {@link #setContentText(int)}\n+         */\n         public Builder setContentTextPaint(TextPaint textPaint) {\n             showcaseView.setContentTextPaint(textPaint);\n             return this;\n         }\n \n+        /**\n+         * Sets the paint that will draw the text as specified by {@link #setContentTitle(CharSequence)}\n+         * or {@link #setContentTitle(int)}\n+         */\n         public Builder setContentTitlePaint(TextPaint textPaint) {\n             showcaseView.setContentTitlePaint(textPaint);\n             return this;\n",
          "label": "docs"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\nindex 402d63fff..a05c4a877 100644\n--- a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n+++ b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n@@ -37,7 +37,7 @@ public class AppCompatTextView extends TextView {\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs) {\n-        this(context, attrs, 0);\n+        this(context, attrs, android.R.attr.textViewStyle);\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs, int defStyle) {\n\ndiff --git a/java/org/apache/tomcat/util/file/Matcher.java b/java/org/apache/tomcat/util/file/Matcher.java\nindex c2ab0eb8b..1996907e5 100644\n--- a/java/org/apache/tomcat/util/file/Matcher.java\n+++ b/java/org/apache/tomcat/util/file/Matcher.java\n@@ -37,7 +37,7 @@ public final class Matcher {\n      *\n      * @param patternSet The pattern set to match against. Must not be\n      *                <code>null</code>.\n-     * @param str     The file name to match, as a String. Must not be\n+     * @param fileName The file name to match, as a String. Must not be\n      *                <code>null</code>. It must be just a file name, without\n      *                a path.\n      *\n",
      "atomicChanges": [
        {
          "change": "diff --git a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\nindex 402d63fff..a05c4a877 100644\n--- a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n+++ b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n@@ -37,7 +37,7 @@ public class AppCompatTextView extends TextView {\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs) {\n-        this(context, attrs, 0);\n+        this(context, attrs, android.R.attr.textViewStyle);\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs, int defStyle) {\n",
          "label": "fix"
        },
        {
          "change": "diff --git a/java/org/apache/tomcat/util/file/Matcher.java b/java/org/apache/tomcat/util/file/Matcher.java\nindex c2ab0eb8b..1996907e5 100644\n--- a/java/org/apache/tomcat/util/file/Matcher.java\n+++ b/java/org/apache/tomcat/util/file/Matcher.java\n@@ -37,7 +37,7 @@ public final class Matcher {\n      *\n      * @param patternSet The pattern set to match against. Must not be\n      *                <code>null</code>.\n-     * @param str     The file name to match, as a String. Must not be\n+     * @param fileName The file name to match, as a String. Must not be\n      *                <code>null</code>. It must be just a file name, without\n      *                a path.\n      *\n",
          "label": "docs"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/src/com/android/email/mail/store/WebDavStore.java b/src/com/android/email/mail/store/WebDavStore.java\nindex 9dd1955..a6301e3 100644\n--- a/src/com/android/email/mail/store/WebDavStore.java\n+++ b/src/com/android/email/mail/store/WebDavStore.java\n@@ -509,7 +509,7 @@ public class WebDavStore extends Store {\n             ArrayList<BasicNameValuePair> pairs = new ArrayList();\n             pairs.add(new BasicNameValuePair(\"username\", username));\n             pairs.add(new BasicNameValuePair(\"password\", password));\n-            pairs.add(new BasicNameValuePair(\"destination\", finalUrl + \"/exchange/\" +username+\"/\"));\n+            pairs.add(new BasicNameValuePair(\"destination\", url));\n             pairs.add(new BasicNameValuePair(\"flags\", \"0\"));\n             pairs.add(new BasicNameValuePair(\"SubmitCreds\", \"Log+On\"));\n             pairs.add(new BasicNameValuePair(\"forcedownlevel\", \"0\"));\n\ndiff --git a/src/main/groovy/lang/MetaMethod.java b/src/main/groovy/lang/MetaMethod.java\nindex f11fb7964..fc82a6776 100644\n--- a/src/main/groovy/lang/MetaMethod.java\n+++ b/src/main/groovy/lang/MetaMethod.java\n@@ -207,13 +207,13 @@ public abstract class MetaMethod extends ParameterTypes implements Cloneable {\n \n     public final RuntimeException processDoMethodInvokeException (Exception e, Object object, Object [] argumentArray) {\n         if (e instanceof IllegalArgumentException) {\n-            //TODO: test if this is ok with new MOP, should be changed!\n+            //TODO: test if this is OK with new MOP, should be changed!\n             // we don't want the exception being unwrapped if it is a IllegalArgumentException\n             // but in the case it is for example a IllegalThreadStateException, we want the unwrapping\n             // from the runtime\n             //Note: the reason we want unwrapping sometimes and sometimes not is that the method\n-            // invokation tries to invoke the method with and then reacts with type transformation\n-            // if the invokation failed here. This is ok for IllegalArgumentException, but it is\n+            // invocation tries to invoke the method with and then reacts with type transformation\n+            // if the invocation failed here. This is OK for IllegalArgumentException, but it is\n             // possible that a Reflector will be used to execute the call and then an Exception from inside\n             // the method is not wrapped in a InvocationTargetException and we will end here.\n             boolean setReason = e.getClass() != IllegalArgumentException.class || this instanceof GeneratedMetaMethod;\n@@ -227,7 +227,7 @@ public abstract class MetaMethod extends ParameterTypes implements Cloneable {\n     }\n \n     // This method is not final but it should be overloaded very carefully and only by generated methods\n-    // there is no garantee that it will be called\n+    // there is no guarantee that it will be called\n     public Object doMethodInvoke(Object object, Object[] argumentArray) {\n         argumentArray = coerceArgumentsToClasses(argumentArray);\n         try {\n",
      "atomicChanges": [
        {
          "change": "diff --git a/src/com/android/email/mail/store/WebDavStore.java b/src/com/android/email/mail/store/WebDavStore.java\nindex 9dd1955..a6301e3 100644\n--- a/src/com/android/email/mail/store/WebDavStore.java\n+++ b/src/com/android/email/mail/store/WebDavStore.java\n@@ -509,7 +509,7 @@ public class WebDavStore extends Store {\n             ArrayList<BasicNameValuePair> pairs = new ArrayList();\n             pairs.add(new BasicNameValuePair(\"username\", username));\n             pairs.add(new BasicNameValuePair(\"password\", password));\n-            pairs.add(new BasicNameValuePair(\"destination\", finalUrl + \"/exchange/\" +username+\"/\"));\n+            pairs.add(new BasicNameValuePair(\"destination\", url));\n             pairs.add(new BasicNameValuePair(\"flags\", \"0\"));\n             pairs.add(new BasicNameValuePair(\"SubmitCreds\", \"Log+On\"));\n             pairs.add(new BasicNameValuePair(\"forcedownlevel\", \"0\"));\n",
          "label": "fix"
        },
        {
          "change": "diff --git a/src/main/groovy/lang/MetaMethod.java b/src/main/groovy/lang/MetaMethod.java\nindex f11fb7964..fc82a6776 100644\n--- a/src/main/groovy/lang/MetaMethod.java\n+++ b/src/main/groovy/lang/MetaMethod.java\n@@ -207,13 +207,13 @@ public abstract class MetaMethod extends ParameterTypes implements Cloneable {\n \n     public final RuntimeException processDoMethodInvokeException (Exception e, Object object, Object [] argumentArray) {\n         if (e instanceof IllegalArgumentException) {\n-            //TODO: test if this is ok with new MOP, should be changed!\n+            //TODO: test if this is OK with new MOP, should be changed!\n             // we don't want the exception being unwrapped if it is a IllegalArgumentException\n             // but in the case it is for example a IllegalThreadStateException, we want the unwrapping\n             // from the runtime\n             //Note: the reason we want unwrapping sometimes and sometimes not is that the method\n-            // invokation tries to invoke the method with and then reacts with type transformation\n-            // if the invokation failed here. This is ok for IllegalArgumentException, but it is\n+            // invocation tries to invoke the method with and then reacts with type transformation\n+            // if the invocation failed here. This is OK for IllegalArgumentException, but it is\n             // possible that a Reflector will be used to execute the call and then an Exception from inside\n             // the method is not wrapped in a InvocationTargetException and we will end here.\n             boolean setReason = e.getClass() != IllegalArgumentException.class || this instanceof GeneratedMetaMethod;\n@@ -227,7 +227,7 @@ public abstract class MetaMethod extends ParameterTypes implements Cloneable {\n     }\n \n     // This method is not final but it should be overloaded very carefully and only by generated methods\n-    // there is no garantee that it will be called\n+    // there is no guarantee that it will be called\n     public Object doMethodInvoke(Object object, Object[] argumentArray) {\n         argumentArray = coerceArgumentsToClasses(argumentArray);\n         try {\n",
          "label": "docs"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/core/java/android/widget/CheckedTextView.java b/core/java/android/widget/CheckedTextView.java\nindex de8b80d..3f080d6 100644\n--- a/core/java/android/widget/CheckedTextView.java\n+++ b/core/java/android/widget/CheckedTextView.java\n@@ -242,7 +242,7 @@ public class CheckedTextView extends TextView implements Checkable {\n                 right = width - mBasePadding;\n                 left = right - mCheckMarkWidth;\n             }\n-            checkMarkDrawable.setBounds( left, top, right, bottom);\n+            checkMarkDrawable.setBounds(mScrollX + left, top, mScrollX + right, bottom);\n             checkMarkDrawable.draw(canvas);\n         }\n     }\n\ndiff --git a/OsmAnd-java/src/net/osmand/binary/BinaryInspector.java b/OsmAnd-java/src/net/osmand/binary/BinaryInspector.java\nindex 2e58961e6c..d19bf2734f 100644\n--- a/OsmAnd-java/src/net/osmand/binary/BinaryInspector.java\n+++ b/OsmAnd-java/src/net/osmand/binary/BinaryInspector.java\n@@ -55,11 +55,11 @@ public class BinaryInspector {\n \t\tBinaryInspector in = new BinaryInspector();\n \t\tin.inspector(args);\n \t\t// test cases show info\n-\t\tin.inspector(new String[]{\n+\t\t/*in.inspector(new String[]{\n \t\t\t\t\"-vpoi\",\n \t\t\t\t//\"-vmap\", \"-vmapobjects\", \n \t\t\t\t//\"-vstreets\", \"-bbox=14.4,50.1,14.5,50.01\", \n-\t\t\t\t\"/home/victor/projects/osmand/osm-gen/Map.obf\"});\n+\t\t\t\t\"/home/victor/projects/osmand/osm-gen/Map.obf\"});*/\n \t}\n \n \tprivate void printToFile(String s) throws IOException {\n",
      "atomicChanges": [
        {
          "change": "diff --git a/core/java/android/widget/CheckedTextView.java b/core/java/android/widget/CheckedTextView.java\nindex de8b80d..3f080d6 100644\n--- a/core/java/android/widget/CheckedTextView.java\n+++ b/core/java/android/widget/CheckedTextView.java\n@@ -242,7 +242,7 @@ public class CheckedTextView extends TextView implements Checkable {\n                 right = width - mBasePadding;\n                 left = right - mCheckMarkWidth;\n             }\n-            checkMarkDrawable.setBounds( left, top, right, bottom);\n+            checkMarkDrawable.setBounds(mScrollX + left, top, mScrollX + right, bottom);\n             checkMarkDrawable.draw(canvas);\n         }\n     }\n",
          "label": "fix"
        },
        {
          "change": "diff --git a/OsmAnd-java/src/net/osmand/binary/BinaryInspector.java b/OsmAnd-java/src/net/osmand/binary/BinaryInspector.java\nindex 2e58961e6c..d19bf2734f 100644\n--- a/OsmAnd-java/src/net/osmand/binary/BinaryInspector.java\n+++ b/OsmAnd-java/src/net/osmand/binary/BinaryInspector.java\n@@ -55,11 +55,11 @@ public class BinaryInspector {\n \t\tBinaryInspector in = new BinaryInspector();\n \t\tin.inspector(args);\n \t\t// test cases show info\n-\t\tin.inspector(new String[]{\n+\t\t/*in.inspector(new String[]{\n \t\t\t\t\"-vpoi\",\n \t\t\t\t//\"-vmap\", \"-vmapobjects\", \n \t\t\t\t//\"-vstreets\", \"-bbox=14.4,50.1,14.5,50.01\", \n-\t\t\t\t\"/home/victor/projects/osmand/osm-gen/Map.obf\"});\n+\t\t\t\t\"/home/victor/projects/osmand/osm-gen/Map.obf\"});*/\n \t}\n \n \tprivate void printToFile(String s) throws IOException {\n",
          "label": "docs"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\nindex cf4aa61..ae18e12 100644\n--- a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n+++ b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n@@ -118,9 +118,9 @@ public class CSVDataFetcher extends BaseDataFetcher {\n         }\n \n         this.numOutcomes = labels.size();\n+        this.totalExamples = l.size();\n+        \n         all = DataSet.merge(l);\n-\n-\n     }\n \n \n\ndiff --git a/src/main/java/com/alibaba/fastjson/JSON.java b/src/main/java/com/alibaba/fastjson/JSON.java\nindex a9552f4..a5b89ea 100755\n--- a/src/main/java/com/alibaba/fastjson/JSON.java\n+++ b/src/main/java/com/alibaba/fastjson/JSON.java\n@@ -611,7 +611,6 @@ public abstract class JSON implements JSONStreamAware, JSONAware {\n      * @param object\n      * @param writer output writer\n      * @param features serializer features\n-     * @throws IOException\n      */\n     public static void writeJSONString(Object object, Writer writer, SerializerFeature... features) {\n         writeJSONString(object, writer, JSON.DEFAULT_GENERATE_FEATURE, features);\n",
      "atomicChanges": [
        {
          "change": "diff --git a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\nindex cf4aa61..ae18e12 100644\n--- a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n+++ b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n@@ -118,9 +118,9 @@ public class CSVDataFetcher extends BaseDataFetcher {\n         }\n \n         this.numOutcomes = labels.size();\n+        this.totalExamples = l.size();\n+        \n         all = DataSet.merge(l);\n-\n-\n     }\n \n \n",
          "label": "fix"
        },
        {
          "change": "diff --git a/src/main/java/com/alibaba/fastjson/JSON.java b/src/main/java/com/alibaba/fastjson/JSON.java\nindex a9552f4..a5b89ea 100755\n--- a/src/main/java/com/alibaba/fastjson/JSON.java\n+++ b/src/main/java/com/alibaba/fastjson/JSON.java\n@@ -611,7 +611,6 @@ public abstract class JSON implements JSONStreamAware, JSONAware {\n      * @param object\n      * @param writer output writer\n      * @param features serializer features\n-     * @throws IOException\n      */\n     public static void writeJSONString(Object object, Writer writer, SerializerFeature... features) {\n         writeJSONString(object, writer, JSON.DEFAULT_GENERATE_FEATURE, features);\n",
          "label": "docs"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java b/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java\nindex 4bf35938f6..16a7a27445 100644\n--- a/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java\n+++ b/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java\n@@ -25,9 +25,11 @@ import java.net.URL;\n import java.net.URLConnection;\n \n /**\n- * RemoteFileHelper class used by {@link GrailsWrapper} for wrapper\n+ * RemoteFileHelper class used by {@link GrailsWrapper} for wrapper.  This source code borrows\n+ * signicantly from Gradle's org.gradlew.rapper.Download.java.\n  *\n- * @author Jeff Brown\n+ * @author Hans Dockter\n+ * \n  * @since 2.1\n  */\n public class RemoteFileHelper {\n\ndiff --git a/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java b/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\nindex f333484de..c5cf8ff2c 100644\n--- a/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\n+++ b/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\n@@ -524,7 +524,8 @@ public class ConfigurationServiceImpl\n \n \n             //write the file.\n-            XMLConfUtils.writeXML(propertiesDocument, getConfigurationFile());\n+            XMLUtils.indentedWriteXML(\n+                propertiesDocument, new FileWriter( getConfigurationFile()));\n         }\n         finally\n         {\n@@ -628,8 +629,6 @@ public class ConfigurationServiceImpl\n                 {\n                     //update the corresponding node\n                     Object value = properties.get(newPropBuff.toString());\n-                    if (newPropBuff.toString().indexOf(\"SYSTEM_PROPERTY\")!= -1)\n-                        System.out.println(\"aaaa\");\n \n                     if(value == null)\n                     {\n",
      "atomicChanges": [
        {
          "change": "diff --git a/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java b/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java\nindex 4bf35938f6..16a7a27445 100644\n--- a/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java\n+++ b/grails-wrapper/src/main/java/org/grails/wrapper/RemoteFileHelper.java\n@@ -25,9 +25,11 @@ import java.net.URL;\n import java.net.URLConnection;\n \n /**\n- * RemoteFileHelper class used by {@link GrailsWrapper} for wrapper\n+ * RemoteFileHelper class used by {@link GrailsWrapper} for wrapper.  This source code borrows\n+ * signicantly from Gradle's org.gradlew.rapper.Download.java.\n  *\n- * @author Jeff Brown\n+ * @author Hans Dockter\n+ * \n  * @since 2.1\n  */\n public class RemoteFileHelper {\n",
          "label": "docs"
        },
        {
          "change": "diff --git a/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java b/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\nindex f333484de..c5cf8ff2c 100644\n--- a/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\n+++ b/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\n@@ -524,7 +524,8 @@ public class ConfigurationServiceImpl\n \n \n             //write the file.\n-            XMLConfUtils.writeXML(propertiesDocument, getConfigurationFile());\n+            XMLUtils.indentedWriteXML(\n+                propertiesDocument, new FileWriter( getConfigurationFile()));\n         }\n         finally\n         {\n@@ -628,8 +629,6 @@ public class ConfigurationServiceImpl\n                 {\n                     //update the corresponding node\n                     Object value = properties.get(newPropBuff.toString());\n-                    if (newPropBuff.toString().indexOf(\"SYSTEM_PROPERTY\")!= -1)\n-                        System.out.println(\"aaaa\");\n \n                     if(value == null)\n                     {\n",
          "label": "fix"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/core/src/main/java/org/elasticsearch/plugins/AnalysisPlugin.java b/core/src/main/java/org/elasticsearch/plugins/AnalysisPlugin.java\nindex ffd278a..8c23e53 100644\n--- a/core/src/main/java/org/elasticsearch/plugins/AnalysisPlugin.java\n+++ b/core/src/main/java/org/elasticsearch/plugins/AnalysisPlugin.java\n@@ -45,6 +45,10 @@ import static java.util.Collections.emptyMap;\n  *     }\n  * }\n  * }</pre>\n+ *\n+ * Elasticsearch doesn't have any automatic mechanism to share these components between indexes. If any component is heavy enough to warrant\n+ * such sharing then it is the Pugin's responsibility to do it in their {@link AnalysisProvider} implementation. We recommend against doing\n+ * this unless absolutely necessary because it can be difficult to get the caching right given things like behavior changes across versions.\n  */\n public interface AnalysisPlugin {\n     /**\n\ndiff --git a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\nindex 80300020..92718985 100644\n--- a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n+++ b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n@@ -115,7 +115,7 @@ public class OAuth2ProviderBeanDefinitionParser implements BeanDefinitionParser\n       String authenticationCacheRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"authentication-cache-ref\");\n       String approvalFilterRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"user-approval-filter-ref\");\n       String approvalHandlerRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n-      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n+      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"redirect-strategy-ref\");\n       if (!StringUtils.hasText(verificationCodeRedirectStrategyRef)) {\n         verificationCodeRedirectStrategyRef = redirectStrategyRef;\n       }\n",
      "atomicChanges": [
        {
          "change": "diff --git a/core/src/main/java/org/elasticsearch/plugins/AnalysisPlugin.java b/core/src/main/java/org/elasticsearch/plugins/AnalysisPlugin.java\nindex ffd278a..8c23e53 100644\n--- a/core/src/main/java/org/elasticsearch/plugins/AnalysisPlugin.java\n+++ b/core/src/main/java/org/elasticsearch/plugins/AnalysisPlugin.java\n@@ -45,6 +45,10 @@ import static java.util.Collections.emptyMap;\n  *     }\n  * }\n  * }</pre>\n+ *\n+ * Elasticsearch doesn't have any automatic mechanism to share these components between indexes. If any component is heavy enough to warrant\n+ * such sharing then it is the Pugin's responsibility to do it in their {@link AnalysisProvider} implementation. We recommend against doing\n+ * this unless absolutely necessary because it can be difficult to get the caching right given things like behavior changes across versions.\n  */\n public interface AnalysisPlugin {\n     /**\n",
          "label": "docs"
        },
        {
          "change": "diff --git a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\nindex 80300020..92718985 100644\n--- a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n+++ b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n@@ -115,7 +115,7 @@ public class OAuth2ProviderBeanDefinitionParser implements BeanDefinitionParser\n       String authenticationCacheRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"authentication-cache-ref\");\n       String approvalFilterRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"user-approval-filter-ref\");\n       String approvalHandlerRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n-      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n+      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"redirect-strategy-ref\");\n       if (!StringUtils.hasText(verificationCodeRedirectStrategyRef)) {\n         verificationCodeRedirectStrategyRef = redirectStrategyRef;\n       }\n",
          "label": "fix"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\nindex 402d63fff..a05c4a877 100644\n--- a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n+++ b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n@@ -37,7 +37,7 @@ public class AppCompatTextView extends TextView {\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs) {\n-        this(context, attrs, 0);\n+        this(context, attrs, android.R.attr.textViewStyle);\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs, int defStyle) {\n\ndiff --git a/rs/java/android/renderscript/ScriptIntrinsicBlur.java b/rs/java/android/renderscript/ScriptIntrinsicBlur.java\nindex 98499b5..7a702e8 100644\n--- a/rs/java/android/renderscript/ScriptIntrinsicBlur.java\n+++ b/rs/java/android/renderscript/ScriptIntrinsicBlur.java\n@@ -34,7 +34,8 @@ public final class ScriptIntrinsicBlur extends ScriptIntrinsic {\n      * Create an intrinsic for applying a blur to an allocation. The\n      * default radius is 5.0.\n      *\n-     * Supported elements types are {@link Element#U8_4 Element#U8}\n+     * Supported elements types are {@link Element#U8},\n+     * {@link Element#U8_4}.\n      *\n      * @param rs The RenderScript context\n      * @param e Element type for inputs and outputs\n",
      "atomicChanges": [
        {
          "change": "diff --git a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\nindex 402d63fff..a05c4a877 100644\n--- a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n+++ b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n@@ -37,7 +37,7 @@ public class AppCompatTextView extends TextView {\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs) {\n-        this(context, attrs, 0);\n+        this(context, attrs, android.R.attr.textViewStyle);\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs, int defStyle) {\n",
          "label": "fix"
        },
        {
          "change": "diff --git a/rs/java/android/renderscript/ScriptIntrinsicBlur.java b/rs/java/android/renderscript/ScriptIntrinsicBlur.java\nindex 98499b5..7a702e8 100644\n--- a/rs/java/android/renderscript/ScriptIntrinsicBlur.java\n+++ b/rs/java/android/renderscript/ScriptIntrinsicBlur.java\n@@ -34,7 +34,8 @@ public final class ScriptIntrinsicBlur extends ScriptIntrinsic {\n      * Create an intrinsic for applying a blur to an allocation. The\n      * default radius is 5.0.\n      *\n-     * Supported elements types are {@link Element#U8_4 Element#U8}\n+     * Supported elements types are {@link Element#U8},\n+     * {@link Element#U8_4}.\n      *\n      * @param rs The RenderScript context\n      * @param e Element type for inputs and outputs\n",
          "label": "docs"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/querydsl-collections/src/main/java/com/mysema/query/collections/SimpleEvaluator.java b/querydsl-collections/src/main/java/com/mysema/query/collections/SimpleEvaluator.java\nindex 1b717bc19..519e70390 100644\n--- a/querydsl-collections/src/main/java/com/mysema/query/collections/SimpleEvaluator.java\n+++ b/querydsl-collections/src/main/java/com/mysema/query/collections/SimpleEvaluator.java\n@@ -1,3 +1,8 @@\n+/*\r\n+ * Copyright (c) 2010 Mysema Ltd.\r\n+ * All rights reserved.\r\n+ * \r\n+ */\r\n package com.mysema.query.collections;\r\n \r\n import java.io.File;\r\n\ndiff --git a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\nindex 6b7ac8c..b4d8c63 100644\n--- a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n+++ b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n@@ -942,6 +942,7 @@ public class SettingsBackupAgent extends BackupAgentHelper {\n                 ByteArrayOutputStream bos = new ByteArrayOutputStream();\n                 OutputStreamWriter out = new OutputStreamWriter(bos);\n                 fromFile.write(out);\n+                out.flush();\n                 return bos.toByteArray();\n             } else {\n                 return EMPTY_DATA;\n",
      "atomicChanges": [
        {
          "change": "diff --git a/querydsl-collections/src/main/java/com/mysema/query/collections/SimpleEvaluator.java b/querydsl-collections/src/main/java/com/mysema/query/collections/SimpleEvaluator.java\nindex 1b717bc19..519e70390 100644\n--- a/querydsl-collections/src/main/java/com/mysema/query/collections/SimpleEvaluator.java\n+++ b/querydsl-collections/src/main/java/com/mysema/query/collections/SimpleEvaluator.java\n@@ -1,3 +1,8 @@\n+/*\r\n+ * Copyright (c) 2010 Mysema Ltd.\r\n+ * All rights reserved.\r\n+ * \r\n+ */\r\n package com.mysema.query.collections;\r\n \r\n import java.io.File;\r\n",
          "label": "docs"
        },
        {
          "change": "diff --git a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\nindex 6b7ac8c..b4d8c63 100644\n--- a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n+++ b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n@@ -942,6 +942,7 @@ public class SettingsBackupAgent extends BackupAgentHelper {\n                 ByteArrayOutputStream bos = new ByteArrayOutputStream();\n                 OutputStreamWriter out = new OutputStreamWriter(bos);\n                 fromFile.write(out);\n+                out.flush();\n                 return bos.toByteArray();\n             } else {\n                 return EMPTY_DATA;\n",
          "label": "fix"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java b/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java\nindex 590a484417..fa829ee8c2 100644\n--- a/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java\n+++ b/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java\n@@ -23,7 +23,8 @@ import org.sonar.api.BatchExtension;\n import org.sonar.api.resources.Resource;\n \n /**\n- * Filter resources to save. For example, ignore a resource if its path matches an exclusion pattern (defined on the project)\n+ * Filter resources to save. For example, ignore a resource if its path matches an exclusion pattern (defined on the project).\n+ * Filters are applied to files, directories and packages only.\n  *\n  * If the method start(), without parameters, exists, then it is executed at startup.\n  *\n\ndiff --git a/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java b/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java\nindex 806d2b0..b4871c6 100644\n--- a/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java\n+++ b/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java\n@@ -1065,7 +1065,7 @@ public class ObjectiveCImplementationGenerator extends ObjectiveCSourceFileGener\n     } else if (value instanceof String) {\n       StringLiteral node = ast.newStringLiteral();\n       node.setLiteralValue((String) value);\n-      printf(StatementGenerator.generateStringLiteral(node));\n+      print(StatementGenerator.generateStringLiteral(node));\n     } else if (value instanceof Number || value instanceof Character || value instanceof Boolean) {\n       print(value.toString());\n     } else if (value.getClass().isArray()) {\n",
      "atomicChanges": [
        {
          "change": "diff --git a/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java b/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java\nindex 590a484417..fa829ee8c2 100644\n--- a/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java\n+++ b/sonar-plugin-api/src/main/java/org/sonar/api/batch/ResourceFilter.java\n@@ -23,7 +23,8 @@ import org.sonar.api.BatchExtension;\n import org.sonar.api.resources.Resource;\n \n /**\n- * Filter resources to save. For example, ignore a resource if its path matches an exclusion pattern (defined on the project)\n+ * Filter resources to save. For example, ignore a resource if its path matches an exclusion pattern (defined on the project).\n+ * Filters are applied to files, directories and packages only.\n  *\n  * If the method start(), without parameters, exists, then it is executed at startup.\n  *\n",
          "label": "docs"
        },
        {
          "change": "diff --git a/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java b/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java\nindex 806d2b0..b4871c6 100644\n--- a/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java\n+++ b/translator/src/main/java/com/google/devtools/j2objc/gen/ObjectiveCImplementationGenerator.java\n@@ -1065,7 +1065,7 @@ public class ObjectiveCImplementationGenerator extends ObjectiveCSourceFileGener\n     } else if (value instanceof String) {\n       StringLiteral node = ast.newStringLiteral();\n       node.setLiteralValue((String) value);\n-      printf(StatementGenerator.generateStringLiteral(node));\n+      print(StatementGenerator.generateStringLiteral(node));\n     } else if (value instanceof Number || value instanceof Character || value instanceof Boolean) {\n       print(value.toString());\n     } else if (value.getClass().isArray()) {\n",
          "label": "fix"
        }
      ]
    }
  ]
}