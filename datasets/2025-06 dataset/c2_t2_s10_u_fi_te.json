{
  "metadata": {
    "num_cases": 10,
    "concerns_per_case": 2,
    "types": [
      "test",
      "fix"
    ],
    "allow_same_types": false,
    "seed": 42,
    "source_dataset": "datasets/candidates/codefuse-hqcm/dataset/test.json"
  },
  "cases": [
    {
      "tangleChange": "diff --git a/core/java/android/os/Bundle.java b/core/java/android/os/Bundle.java\nindex c5c5372..133debb 100644\n--- a/core/java/android/os/Bundle.java\n+++ b/core/java/android/os/Bundle.java\n@@ -211,8 +211,9 @@ public final class Bundle extends BaseBundle implements Cloneable, Parcelable {\n                     } else if (obj instanceof Parcelable[]) {\n                         Parcelable[] array = (Parcelable[]) obj;\n                         for (int n = array.length - 1; n >= 0; n--) {\n-                            if ((array[n].describeContents()\n-                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0) {\n+                            Parcelable p = array[n];\n+                            if (p != null && ((p.describeContents()\n+                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0)) {\n                                 fdFound = true;\n                                 break;\n                             }\n\ndiff --git a/platform/testFramework/src/com/intellij/testFramework/LightPlatformTestCase.java b/platform/testFramework/src/com/intellij/testFramework/LightPlatformTestCase.java\nindex 3617e5c..4f3279d 100644\n--- a/platform/testFramework/src/com/intellij/testFramework/LightPlatformTestCase.java\n+++ b/platform/testFramework/src/com/intellij/testFramework/LightPlatformTestCase.java\n@@ -45,7 +45,6 @@ import com.intellij.openapi.command.undo.UndoManager;\n import com.intellij.openapi.editor.Document;\n import com.intellij.openapi.editor.Editor;\n import com.intellij.openapi.editor.EditorFactory;\n-import com.intellij.openapi.editor.ex.EditorSettingsExternalizable;\n import com.intellij.openapi.editor.impl.ComplementaryFontsRegistry;\n import com.intellij.openapi.editor.impl.EditorFactoryImpl;\n import com.intellij.openapi.editor.impl.EditorImpl;\n@@ -307,8 +306,6 @@ public abstract class LightPlatformTestCase extends UsefulTestCase implements Da\n         // various tests can use different mocking techniques for font-related code\n         // so we must reset our font cache, to avoid potential impact of tests on other tests \n         ComplementaryFontsRegistry.resetCaches();\n-\n-        System.out.println(\"soft wraps enabled: \" + EditorSettingsExternalizable.getInstance().isUseSoftWraps()); // temporary code to find out cause of test blinking\n       }\n     });\n   }\n",
      "atomicChanges": [
        {
          "change": "diff --git a/core/java/android/os/Bundle.java b/core/java/android/os/Bundle.java\nindex c5c5372..133debb 100644\n--- a/core/java/android/os/Bundle.java\n+++ b/core/java/android/os/Bundle.java\n@@ -211,8 +211,9 @@ public final class Bundle extends BaseBundle implements Cloneable, Parcelable {\n                     } else if (obj instanceof Parcelable[]) {\n                         Parcelable[] array = (Parcelable[]) obj;\n                         for (int n = array.length - 1; n >= 0; n--) {\n-                            if ((array[n].describeContents()\n-                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0) {\n+                            Parcelable p = array[n];\n+                            if (p != null && ((p.describeContents()\n+                                    & Parcelable.CONTENTS_FILE_DESCRIPTOR) != 0)) {\n                                 fdFound = true;\n                                 break;\n                             }\n",
          "label": "fix"
        },
        {
          "change": "diff --git a/platform/testFramework/src/com/intellij/testFramework/LightPlatformTestCase.java b/platform/testFramework/src/com/intellij/testFramework/LightPlatformTestCase.java\nindex 3617e5c..4f3279d 100644\n--- a/platform/testFramework/src/com/intellij/testFramework/LightPlatformTestCase.java\n+++ b/platform/testFramework/src/com/intellij/testFramework/LightPlatformTestCase.java\n@@ -45,7 +45,6 @@ import com.intellij.openapi.command.undo.UndoManager;\n import com.intellij.openapi.editor.Document;\n import com.intellij.openapi.editor.Editor;\n import com.intellij.openapi.editor.EditorFactory;\n-import com.intellij.openapi.editor.ex.EditorSettingsExternalizable;\n import com.intellij.openapi.editor.impl.ComplementaryFontsRegistry;\n import com.intellij.openapi.editor.impl.EditorFactoryImpl;\n import com.intellij.openapi.editor.impl.EditorImpl;\n@@ -307,8 +306,6 @@ public abstract class LightPlatformTestCase extends UsefulTestCase implements Da\n         // various tests can use different mocking techniques for font-related code\n         // so we must reset our font cache, to avoid potential impact of tests on other tests \n         ComplementaryFontsRegistry.resetCaches();\n-\n-        System.out.println(\"soft wraps enabled: \" + EditorSettingsExternalizable.getInstance().isUseSoftWraps()); // temporary code to find out cause of test blinking\n       }\n     });\n   }\n",
          "label": "test"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\nindex 402d63fff..a05c4a877 100644\n--- a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n+++ b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n@@ -37,7 +37,7 @@ public class AppCompatTextView extends TextView {\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs) {\n-        this(context, attrs, 0);\n+        this(context, attrs, android.R.attr.textViewStyle);\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs, int defStyle) {\n\ndiff --git a/platform/platform-tests/testSrc/com/intellij/openapi/keymap/impl/IdeMouseEventDispatcherTest.java b/platform/platform-tests/testSrc/com/intellij/openapi/keymap/impl/IdeMouseEventDispatcherTest.java\nindex 352fa5a..92ef56e 100644\n--- a/platform/platform-tests/testSrc/com/intellij/openapi/keymap/impl/IdeMouseEventDispatcherTest.java\n+++ b/platform/platform-tests/testSrc/com/intellij/openapi/keymap/impl/IdeMouseEventDispatcherTest.java\n@@ -25,8 +25,11 @@ import com.intellij.openapi.keymap.ex.KeymapManagerEx;\n import com.intellij.testFramework.LightPlatformTestCase;\n \n import javax.swing.*;\n+import java.awt.*;\n import java.awt.event.MouseEvent;\n \n+import static org.junit.Assume.assumeFalse;\n+\n public class IdeMouseEventDispatcherTest extends LightPlatformTestCase {\n   private static final String OUR_KEYMAP_NAME = \"IdeMouseEventDispatcherTestKeymap\";\n   private static final String OUR_TEST_ACTION = \"IdeMouseEventDispatcherTestAction\";\n@@ -38,6 +41,8 @@ public class IdeMouseEventDispatcherTest extends LightPlatformTestCase {\n   private int myActionExecutionCount;\n \n   public void setUp() throws Exception {\n+    assumeFalse(GraphicsEnvironment.isHeadless());\n+\n     super.setUp();\n \n     ActionManager.getInstance().registerAction(OUR_TEST_ACTION, new EmptyAction());\n",
      "atomicChanges": [
        {
          "change": "diff --git a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\nindex 402d63fff..a05c4a877 100644\n--- a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n+++ b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n@@ -37,7 +37,7 @@ public class AppCompatTextView extends TextView {\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs) {\n-        this(context, attrs, 0);\n+        this(context, attrs, android.R.attr.textViewStyle);\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs, int defStyle) {\n",
          "label": "fix"
        },
        {
          "change": "diff --git a/platform/platform-tests/testSrc/com/intellij/openapi/keymap/impl/IdeMouseEventDispatcherTest.java b/platform/platform-tests/testSrc/com/intellij/openapi/keymap/impl/IdeMouseEventDispatcherTest.java\nindex 352fa5a..92ef56e 100644\n--- a/platform/platform-tests/testSrc/com/intellij/openapi/keymap/impl/IdeMouseEventDispatcherTest.java\n+++ b/platform/platform-tests/testSrc/com/intellij/openapi/keymap/impl/IdeMouseEventDispatcherTest.java\n@@ -25,8 +25,11 @@ import com.intellij.openapi.keymap.ex.KeymapManagerEx;\n import com.intellij.testFramework.LightPlatformTestCase;\n \n import javax.swing.*;\n+import java.awt.*;\n import java.awt.event.MouseEvent;\n \n+import static org.junit.Assume.assumeFalse;\n+\n public class IdeMouseEventDispatcherTest extends LightPlatformTestCase {\n   private static final String OUR_KEYMAP_NAME = \"IdeMouseEventDispatcherTestKeymap\";\n   private static final String OUR_TEST_ACTION = \"IdeMouseEventDispatcherTestAction\";\n@@ -38,6 +41,8 @@ public class IdeMouseEventDispatcherTest extends LightPlatformTestCase {\n   private int myActionExecutionCount;\n \n   public void setUp() throws Exception {\n+    assumeFalse(GraphicsEnvironment.isHeadless());\n+\n     super.setUp();\n \n     ActionManager.getInstance().registerAction(OUR_TEST_ACTION, new EmptyAction());\n",
          "label": "test"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/src/com/android/email/mail/store/WebDavStore.java b/src/com/android/email/mail/store/WebDavStore.java\nindex 9dd1955..a6301e3 100644\n--- a/src/com/android/email/mail/store/WebDavStore.java\n+++ b/src/com/android/email/mail/store/WebDavStore.java\n@@ -509,7 +509,7 @@ public class WebDavStore extends Store {\n             ArrayList<BasicNameValuePair> pairs = new ArrayList();\n             pairs.add(new BasicNameValuePair(\"username\", username));\n             pairs.add(new BasicNameValuePair(\"password\", password));\n-            pairs.add(new BasicNameValuePair(\"destination\", finalUrl + \"/exchange/\" +username+\"/\"));\n+            pairs.add(new BasicNameValuePair(\"destination\", url));\n             pairs.add(new BasicNameValuePair(\"flags\", \"0\"));\n             pairs.add(new BasicNameValuePair(\"SubmitCreds\", \"Log+On\"));\n             pairs.add(new BasicNameValuePair(\"forcedownlevel\", \"0\"));\n\ndiff --git a/hystrix-core/src/test/java/com/netflix/hystrix/HystrixCommandTestWithCustomConcurrencyStrategy.java b/hystrix-core/src/test/java/com/netflix/hystrix/HystrixCommandTestWithCustomConcurrencyStrategy.java\nindex 662c493..093b857 100644\n--- a/hystrix-core/src/test/java/com/netflix/hystrix/HystrixCommandTestWithCustomConcurrencyStrategy.java\n+++ b/hystrix-core/src/test/java/com/netflix/hystrix/HystrixCommandTestWithCustomConcurrencyStrategy.java\n@@ -41,6 +41,7 @@ public class HystrixCommandTestWithCustomConcurrencyStrategy {\n     public void reset() {\n         HystrixRequestContext.setContextOnCurrentThread(null);\n         HystrixPropertiesFactory.reset();\n+        HystrixPlugins.reset();\n     }\n \n     /**\n",
      "atomicChanges": [
        {
          "change": "diff --git a/src/com/android/email/mail/store/WebDavStore.java b/src/com/android/email/mail/store/WebDavStore.java\nindex 9dd1955..a6301e3 100644\n--- a/src/com/android/email/mail/store/WebDavStore.java\n+++ b/src/com/android/email/mail/store/WebDavStore.java\n@@ -509,7 +509,7 @@ public class WebDavStore extends Store {\n             ArrayList<BasicNameValuePair> pairs = new ArrayList();\n             pairs.add(new BasicNameValuePair(\"username\", username));\n             pairs.add(new BasicNameValuePair(\"password\", password));\n-            pairs.add(new BasicNameValuePair(\"destination\", finalUrl + \"/exchange/\" +username+\"/\"));\n+            pairs.add(new BasicNameValuePair(\"destination\", url));\n             pairs.add(new BasicNameValuePair(\"flags\", \"0\"));\n             pairs.add(new BasicNameValuePair(\"SubmitCreds\", \"Log+On\"));\n             pairs.add(new BasicNameValuePair(\"forcedownlevel\", \"0\"));\n",
          "label": "fix"
        },
        {
          "change": "diff --git a/hystrix-core/src/test/java/com/netflix/hystrix/HystrixCommandTestWithCustomConcurrencyStrategy.java b/hystrix-core/src/test/java/com/netflix/hystrix/HystrixCommandTestWithCustomConcurrencyStrategy.java\nindex 662c493..093b857 100644\n--- a/hystrix-core/src/test/java/com/netflix/hystrix/HystrixCommandTestWithCustomConcurrencyStrategy.java\n+++ b/hystrix-core/src/test/java/com/netflix/hystrix/HystrixCommandTestWithCustomConcurrencyStrategy.java\n@@ -41,6 +41,7 @@ public class HystrixCommandTestWithCustomConcurrencyStrategy {\n     public void reset() {\n         HystrixRequestContext.setContextOnCurrentThread(null);\n         HystrixPropertiesFactory.reset();\n+        HystrixPlugins.reset();\n     }\n \n     /**\n",
          "label": "test"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/core/java/android/widget/CheckedTextView.java b/core/java/android/widget/CheckedTextView.java\nindex de8b80d..3f080d6 100644\n--- a/core/java/android/widget/CheckedTextView.java\n+++ b/core/java/android/widget/CheckedTextView.java\n@@ -242,7 +242,7 @@ public class CheckedTextView extends TextView implements Checkable {\n                 right = width - mBasePadding;\n                 left = right - mCheckMarkWidth;\n             }\n-            checkMarkDrawable.setBounds( left, top, right, bottom);\n+            checkMarkDrawable.setBounds(mScrollX + left, top, mScrollX + right, bottom);\n             checkMarkDrawable.draw(canvas);\n         }\n     }\n\ndiff --git a/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java b/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java\nindex 9cee8e70f..d367976d8 100644\n--- a/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java\n+++ b/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java\n@@ -21,7 +21,6 @@ package com.owncloud.android.authentication;\n \n import android.content.Context;\n import android.content.Intent;\n-import android.graphics.Point;\n import android.os.Bundle;\n import android.os.RemoteException;\n import android.support.test.InstrumentationRegistry;\n@@ -84,11 +83,11 @@ public class AuthenticatorActivityTest {\n     @Before\n     public void init(){\n         UiDevice uiDevice = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());\n-        Point[] coordinates = new Point[4];\n+        /*Point[] coordinates = new Point[4];\n         coordinates[0] = new Point(248, 1020);\n         coordinates[1] = new Point(248, 429);\n         coordinates[2] = new Point(796, 1020);\n-        coordinates[3] = new Point(796, 429);\n+        coordinates[3] = new Point(796, 429);*/\n         try {\n             if (!uiDevice.isScreenOn()) {\n                 uiDevice.wakeUp();\n",
      "atomicChanges": [
        {
          "change": "diff --git a/core/java/android/widget/CheckedTextView.java b/core/java/android/widget/CheckedTextView.java\nindex de8b80d..3f080d6 100644\n--- a/core/java/android/widget/CheckedTextView.java\n+++ b/core/java/android/widget/CheckedTextView.java\n@@ -242,7 +242,7 @@ public class CheckedTextView extends TextView implements Checkable {\n                 right = width - mBasePadding;\n                 left = right - mCheckMarkWidth;\n             }\n-            checkMarkDrawable.setBounds( left, top, right, bottom);\n+            checkMarkDrawable.setBounds(mScrollX + left, top, mScrollX + right, bottom);\n             checkMarkDrawable.draw(canvas);\n         }\n     }\n",
          "label": "fix"
        },
        {
          "change": "diff --git a/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java b/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java\nindex 9cee8e70f..d367976d8 100644\n--- a/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java\n+++ b/androidTest/java/com/owncloud/android/authentication/AuthenticatorActivityTest.java\n@@ -21,7 +21,6 @@ package com.owncloud.android.authentication;\n \n import android.content.Context;\n import android.content.Intent;\n-import android.graphics.Point;\n import android.os.Bundle;\n import android.os.RemoteException;\n import android.support.test.InstrumentationRegistry;\n@@ -84,11 +83,11 @@ public class AuthenticatorActivityTest {\n     @Before\n     public void init(){\n         UiDevice uiDevice = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());\n-        Point[] coordinates = new Point[4];\n+        /*Point[] coordinates = new Point[4];\n         coordinates[0] = new Point(248, 1020);\n         coordinates[1] = new Point(248, 429);\n         coordinates[2] = new Point(796, 1020);\n-        coordinates[3] = new Point(796, 429);\n+        coordinates[3] = new Point(796, 429);*/\n         try {\n             if (!uiDevice.isScreenOn()) {\n                 uiDevice.wakeUp();\n",
          "label": "test"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\nindex cf4aa61..ae18e12 100644\n--- a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n+++ b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n@@ -118,9 +118,9 @@ public class CSVDataFetcher extends BaseDataFetcher {\n         }\n \n         this.numOutcomes = labels.size();\n+        this.totalExamples = l.size();\n+        \n         all = DataSet.merge(l);\n-\n-\n     }\n \n \n\ndiff --git a/src/test/java/hex/GLMTest.java b/src/test/java/hex/GLMTest.java\nindex 98d56c70a..e4946bdce 100644\n--- a/src/test/java/hex/GLMTest.java\n+++ b/src/test/java/hex/GLMTest.java\n@@ -390,8 +390,7 @@ public class GLMTest extends TestUtil {\n       JsonObject glm = computeGLMlog(lsms,va,true); // Solve it!\n       JsonObject jcoefs = glm.get(\"coefficients\").getAsJsonObject();\n       double icept = jcoefs.get(\"Intercept\").getAsDouble();\n-\n-      assertCat(jcoefs,icept,\"Low\" ,0.0      );\n+//      assertCat(jcoefs,icept,\"Low\" ,0.0      );\n       assertCat(jcoefs,icept,\"Med\" ,0.3333333);\n       assertCat(jcoefs,icept,\"High\",1.0      );\n       UKV.remove(Key.make(glm.get(Constants.MODEL_KEY).getAsString()));\n",
      "atomicChanges": [
        {
          "change": "diff --git a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\nindex cf4aa61..ae18e12 100644\n--- a/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n+++ b/deeplearning4j-core/src/main/java/org/deeplearning4j/datasets/fetchers/CSVDataFetcher.java\n@@ -118,9 +118,9 @@ public class CSVDataFetcher extends BaseDataFetcher {\n         }\n \n         this.numOutcomes = labels.size();\n+        this.totalExamples = l.size();\n+        \n         all = DataSet.merge(l);\n-\n-\n     }\n \n \n",
          "label": "fix"
        },
        {
          "change": "diff --git a/src/test/java/hex/GLMTest.java b/src/test/java/hex/GLMTest.java\nindex 98d56c70a..e4946bdce 100644\n--- a/src/test/java/hex/GLMTest.java\n+++ b/src/test/java/hex/GLMTest.java\n@@ -390,8 +390,7 @@ public class GLMTest extends TestUtil {\n       JsonObject glm = computeGLMlog(lsms,va,true); // Solve it!\n       JsonObject jcoefs = glm.get(\"coefficients\").getAsJsonObject();\n       double icept = jcoefs.get(\"Intercept\").getAsDouble();\n-\n-      assertCat(jcoefs,icept,\"Low\" ,0.0      );\n+//      assertCat(jcoefs,icept,\"Low\" ,0.0      );\n       assertCat(jcoefs,icept,\"Med\" ,0.3333333);\n       assertCat(jcoefs,icept,\"High\",1.0      );\n       UKV.remove(Key.make(glm.get(Constants.MODEL_KEY).getAsString()));\n",
          "label": "test"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/sampling/IndexSamplingControllerTest.java b/community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/sampling/IndexSamplingControllerTest.java\nindex e195b43..783c43e 100644\n--- a/community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/sampling/IndexSamplingControllerTest.java\n+++ b/community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/sampling/IndexSamplingControllerTest.java\n@@ -19,9 +19,10 @@\n  */\n package org.neo4j.kernel.impl.api.index.sampling;\n \n+import org.junit.Test;\n+\n import java.util.concurrent.atomic.AtomicInteger;\n \n-import org.junit.Test;\n import org.neo4j.helpers.Predicate;\n import org.neo4j.helpers.Predicates;\n import org.neo4j.kernel.api.index.IndexDescriptor;\n@@ -31,8 +32,13 @@ import org.neo4j.kernel.impl.api.index.IndexProxy;\n import org.neo4j.kernel.impl.util.JobScheduler;\n import org.neo4j.test.DoubleLatch;\n \n-import static org.junit.Assert.*;\n-import static org.mockito.Mockito.*;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+import static org.mockito.Mockito.when;\n import static org.neo4j.helpers.Predicates.TRUE;\n import static org.neo4j.helpers.Predicates.not;\n import static org.neo4j.kernel.api.index.InternalIndexState.FAILED;\n@@ -149,11 +155,11 @@ public class IndexSamplingControllerTest\n \n         // and finally exactly one job has run to completion\n         assertEquals( 0, concurrentCount.get() );\n-        // it might happen that the thread which does not acquire the lock read the index to the queue if it has\n+        // it might happen that the thread which does not acquire the lock readd the index to the queue if it has\n         // been removed, so the total count in the end might be either 1 or 2, for this test it is important to\n         // not fail by having 2 threads calling IndexSamplingJobFactory.create()\n         int expected = totalCount.get();\n-        assertTrue( \"Expected 1 or 2, got \" + expected, 1 >= expected || expected <= 2 );\n+        assertTrue( \"Expected 1 or 2, got \" + expected, 1 >= expected && expected <= 2 );\n     }\n \n     @Test\n\ndiff --git a/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java b/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\nindex f333484de..c5cf8ff2c 100644\n--- a/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\n+++ b/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\n@@ -524,7 +524,8 @@ public class ConfigurationServiceImpl\n \n \n             //write the file.\n-            XMLConfUtils.writeXML(propertiesDocument, getConfigurationFile());\n+            XMLUtils.indentedWriteXML(\n+                propertiesDocument, new FileWriter( getConfigurationFile()));\n         }\n         finally\n         {\n@@ -628,8 +629,6 @@ public class ConfigurationServiceImpl\n                 {\n                     //update the corresponding node\n                     Object value = properties.get(newPropBuff.toString());\n-                    if (newPropBuff.toString().indexOf(\"SYSTEM_PROPERTY\")!= -1)\n-                        System.out.println(\"aaaa\");\n \n                     if(value == null)\n                     {\n",
      "atomicChanges": [
        {
          "change": "diff --git a/community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/sampling/IndexSamplingControllerTest.java b/community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/sampling/IndexSamplingControllerTest.java\nindex e195b43..783c43e 100644\n--- a/community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/sampling/IndexSamplingControllerTest.java\n+++ b/community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/sampling/IndexSamplingControllerTest.java\n@@ -19,9 +19,10 @@\n  */\n package org.neo4j.kernel.impl.api.index.sampling;\n \n+import org.junit.Test;\n+\n import java.util.concurrent.atomic.AtomicInteger;\n \n-import org.junit.Test;\n import org.neo4j.helpers.Predicate;\n import org.neo4j.helpers.Predicates;\n import org.neo4j.kernel.api.index.IndexDescriptor;\n@@ -31,8 +32,13 @@ import org.neo4j.kernel.impl.api.index.IndexProxy;\n import org.neo4j.kernel.impl.util.JobScheduler;\n import org.neo4j.test.DoubleLatch;\n \n-import static org.junit.Assert.*;\n-import static org.mockito.Mockito.*;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+import static org.mockito.Mockito.when;\n import static org.neo4j.helpers.Predicates.TRUE;\n import static org.neo4j.helpers.Predicates.not;\n import static org.neo4j.kernel.api.index.InternalIndexState.FAILED;\n@@ -149,11 +155,11 @@ public class IndexSamplingControllerTest\n \n         // and finally exactly one job has run to completion\n         assertEquals( 0, concurrentCount.get() );\n-        // it might happen that the thread which does not acquire the lock read the index to the queue if it has\n+        // it might happen that the thread which does not acquire the lock readd the index to the queue if it has\n         // been removed, so the total count in the end might be either 1 or 2, for this test it is important to\n         // not fail by having 2 threads calling IndexSamplingJobFactory.create()\n         int expected = totalCount.get();\n-        assertTrue( \"Expected 1 or 2, got \" + expected, 1 >= expected || expected <= 2 );\n+        assertTrue( \"Expected 1 or 2, got \" + expected, 1 >= expected && expected <= 2 );\n     }\n \n     @Test\n",
          "label": "test"
        },
        {
          "change": "diff --git a/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java b/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\nindex f333484de..c5cf8ff2c 100644\n--- a/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\n+++ b/src/net/java/sip/communicator/impl/configuration/ConfigurationServiceImpl.java\n@@ -524,7 +524,8 @@ public class ConfigurationServiceImpl\n \n \n             //write the file.\n-            XMLConfUtils.writeXML(propertiesDocument, getConfigurationFile());\n+            XMLUtils.indentedWriteXML(\n+                propertiesDocument, new FileWriter( getConfigurationFile()));\n         }\n         finally\n         {\n@@ -628,8 +629,6 @@ public class ConfigurationServiceImpl\n                 {\n                     //update the corresponding node\n                     Object value = properties.get(newPropBuff.toString());\n-                    if (newPropBuff.toString().indexOf(\"SYSTEM_PROPERTY\")!= -1)\n-                        System.out.println(\"aaaa\");\n \n                     if(value == null)\n                     {\n",
          "label": "fix"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/graphics/java/android/graphics/drawable/Drawable.java b/graphics/java/android/graphics/drawable/Drawable.java\nindex cfb1983..2ec4284 100644\n--- a/graphics/java/android/graphics/drawable/Drawable.java\n+++ b/graphics/java/android/graphics/drawable/Drawable.java\n@@ -156,7 +156,7 @@ public abstract class Drawable {\n      * @param canvas The canvas to draw into\n      */\n     public void draw(Canvas canvas) {\n-        if (canvas != null && canvas.isHardwareAccelerated()) {\n+        if (canvas != null && canvas.isHardwareAccelerated() && false) { // temporarily disabled\n             final HardwareCanvas hardwareCanvas = (HardwareCanvas) canvas;\n             final DisplayList displayList = getDisplayList(hardwareCanvas);\n             if (displayList != null) {\n\ndiff --git a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\nindex 80300020..92718985 100644\n--- a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n+++ b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n@@ -115,7 +115,7 @@ public class OAuth2ProviderBeanDefinitionParser implements BeanDefinitionParser\n       String authenticationCacheRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"authentication-cache-ref\");\n       String approvalFilterRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"user-approval-filter-ref\");\n       String approvalHandlerRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n-      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n+      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"redirect-strategy-ref\");\n       if (!StringUtils.hasText(verificationCodeRedirectStrategyRef)) {\n         verificationCodeRedirectStrategyRef = redirectStrategyRef;\n       }\n",
      "atomicChanges": [
        {
          "change": "diff --git a/graphics/java/android/graphics/drawable/Drawable.java b/graphics/java/android/graphics/drawable/Drawable.java\nindex cfb1983..2ec4284 100644\n--- a/graphics/java/android/graphics/drawable/Drawable.java\n+++ b/graphics/java/android/graphics/drawable/Drawable.java\n@@ -156,7 +156,7 @@ public abstract class Drawable {\n      * @param canvas The canvas to draw into\n      */\n     public void draw(Canvas canvas) {\n-        if (canvas != null && canvas.isHardwareAccelerated()) {\n+        if (canvas != null && canvas.isHardwareAccelerated() && false) { // temporarily disabled\n             final HardwareCanvas hardwareCanvas = (HardwareCanvas) canvas;\n             final DisplayList displayList = getDisplayList(hardwareCanvas);\n             if (displayList != null) {\n",
          "label": "test"
        },
        {
          "change": "diff --git a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\nindex 80300020..92718985 100644\n--- a/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n+++ b/spring-security-oauth/src/main/java/org/springframework/security/oauth2/config/OAuth2ProviderBeanDefinitionParser.java\n@@ -115,7 +115,7 @@ public class OAuth2ProviderBeanDefinitionParser implements BeanDefinitionParser\n       String authenticationCacheRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"authentication-cache-ref\");\n       String approvalFilterRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"user-approval-filter-ref\");\n       String approvalHandlerRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n-      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"approval-handler-ref\");\n+      String verificationCodeRedirectStrategyRef = verificationCodeElement == null ? null : verificationCodeElement.getAttribute(\"redirect-strategy-ref\");\n       if (!StringUtils.hasText(verificationCodeRedirectStrategyRef)) {\n         verificationCodeRedirectStrategyRef = redirectStrategyRef;\n       }\n",
          "label": "fix"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\nindex 402d63fff..a05c4a877 100644\n--- a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n+++ b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n@@ -37,7 +37,7 @@ public class AppCompatTextView extends TextView {\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs) {\n-        this(context, attrs, 0);\n+        this(context, attrs, android.R.attr.textViewStyle);\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs, int defStyle) {\n\ndiff --git a/jOOQ-test/src/org/jooq/test/jOOQAbstractTest.java b/jOOQ-test/src/org/jooq/test/jOOQAbstractTest.java\nindex e4fbc9e50..9d9afc00e 100644\n--- a/jOOQ-test/src/org/jooq/test/jOOQAbstractTest.java\n+++ b/jOOQ-test/src/org/jooq/test/jOOQAbstractTest.java\n@@ -6947,6 +6947,7 @@ public abstract class jOOQAbstractTest<\n \r\n     @Test\r\n     public void testLoader() throws Exception {\r\n+        reset = false;\r\n         connection.setAutoCommit(false);\r\n \r\n         Field<Integer> count = create().count();\r\n",
      "atomicChanges": [
        {
          "change": "diff --git a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\nindex 402d63fff..a05c4a877 100644\n--- a/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n+++ b/v7/appcompat/src/android/support/v7/widget/AppCompatTextView.java\n@@ -37,7 +37,7 @@ public class AppCompatTextView extends TextView {\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs) {\n-        this(context, attrs, 0);\n+        this(context, attrs, android.R.attr.textViewStyle);\n     }\n \n     public AppCompatTextView(Context context, AttributeSet attrs, int defStyle) {\n",
          "label": "fix"
        },
        {
          "change": "diff --git a/jOOQ-test/src/org/jooq/test/jOOQAbstractTest.java b/jOOQ-test/src/org/jooq/test/jOOQAbstractTest.java\nindex e4fbc9e50..9d9afc00e 100644\n--- a/jOOQ-test/src/org/jooq/test/jOOQAbstractTest.java\n+++ b/jOOQ-test/src/org/jooq/test/jOOQAbstractTest.java\n@@ -6947,6 +6947,7 @@ public abstract class jOOQAbstractTest<\n \r\n     @Test\r\n     public void testLoader() throws Exception {\r\n+        reset = false;\r\n         connection.setAutoCommit(false);\r\n \r\n         Field<Integer> count = create().count();\r\n",
          "label": "test"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/src/test/java/com/ning/http/client/async/BasicHttpsTest.java b/src/test/java/com/ning/http/client/async/BasicHttpsTest.java\nindex c3f2555..ae9dc3f 100644\n--- a/src/test/java/com/ning/http/client/async/BasicHttpsTest.java\n+++ b/src/test/java/com/ning/http/client/async/BasicHttpsTest.java\n@@ -209,29 +209,6 @@ public class BasicHttpsTest {\n         log.info(\"Local HTTP server started successfully\");\n     }\n \n-    @Test(groups = \"online\")\n-    public void multipleJavaDotDeadSSLTest() throws Throwable {\n-        AsyncHttpClient c = new AsyncHttpClient();\n-\n-        String body = \"hello there\";\n-\n-        // once\n-        Response response = c.preparePost(\"https://atmosphere.dev.java.net:443/\")\n-                .setBody(body)\n-                .execute().get(TIMEOUT, TimeUnit.SECONDS);\n-\n-        assertNotNull(response);\n-        assertEquals(response.getStatusCode(), 200);\n-\n-        // twice\n-        response = c.preparePost(\"https://grizzly.dev.java.net:443/\")\n-                .setBody(body)\n-                .execute().get(TIMEOUT, TimeUnit.SECONDS);\n-\n-        assertEquals(response.getStatusCode(), 200);\n-\n-    }\n-\n     @Test(groups = \"standalone\")\n     public void zeroCopyPostTest() throws Throwable {\n \n\ndiff --git a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\nindex 6b7ac8c..b4d8c63 100644\n--- a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n+++ b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n@@ -942,6 +942,7 @@ public class SettingsBackupAgent extends BackupAgentHelper {\n                 ByteArrayOutputStream bos = new ByteArrayOutputStream();\n                 OutputStreamWriter out = new OutputStreamWriter(bos);\n                 fromFile.write(out);\n+                out.flush();\n                 return bos.toByteArray();\n             } else {\n                 return EMPTY_DATA;\n",
      "atomicChanges": [
        {
          "change": "diff --git a/src/test/java/com/ning/http/client/async/BasicHttpsTest.java b/src/test/java/com/ning/http/client/async/BasicHttpsTest.java\nindex c3f2555..ae9dc3f 100644\n--- a/src/test/java/com/ning/http/client/async/BasicHttpsTest.java\n+++ b/src/test/java/com/ning/http/client/async/BasicHttpsTest.java\n@@ -209,29 +209,6 @@ public class BasicHttpsTest {\n         log.info(\"Local HTTP server started successfully\");\n     }\n \n-    @Test(groups = \"online\")\n-    public void multipleJavaDotDeadSSLTest() throws Throwable {\n-        AsyncHttpClient c = new AsyncHttpClient();\n-\n-        String body = \"hello there\";\n-\n-        // once\n-        Response response = c.preparePost(\"https://atmosphere.dev.java.net:443/\")\n-                .setBody(body)\n-                .execute().get(TIMEOUT, TimeUnit.SECONDS);\n-\n-        assertNotNull(response);\n-        assertEquals(response.getStatusCode(), 200);\n-\n-        // twice\n-        response = c.preparePost(\"https://grizzly.dev.java.net:443/\")\n-                .setBody(body)\n-                .execute().get(TIMEOUT, TimeUnit.SECONDS);\n-\n-        assertEquals(response.getStatusCode(), 200);\n-\n-    }\n-\n     @Test(groups = \"standalone\")\n     public void zeroCopyPostTest() throws Throwable {\n \n",
          "label": "test"
        },
        {
          "change": "diff --git a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\nindex 6b7ac8c..b4d8c63 100644\n--- a/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n+++ b/packages/SettingsProvider/src/com/android/providers/settings/SettingsBackupAgent.java\n@@ -942,6 +942,7 @@ public class SettingsBackupAgent extends BackupAgentHelper {\n                 ByteArrayOutputStream bos = new ByteArrayOutputStream();\n                 OutputStreamWriter out = new OutputStreamWriter(bos);\n                 fromFile.write(out);\n+                out.flush();\n                 return bos.toByteArray();\n             } else {\n                 return EMPTY_DATA;\n",
          "label": "fix"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/core/client/src/test/java/alluxio/client/block/UnderStoreBlockInStreamTest.java b/core/client/src/test/java/alluxio/client/block/UnderStoreBlockInStreamTest.java\nindex 7aa8b09..771aeee 100644\n--- a/core/client/src/test/java/alluxio/client/block/UnderStoreBlockInStreamTest.java\n+++ b/core/client/src/test/java/alluxio/client/block/UnderStoreBlockInStreamTest.java\n@@ -83,7 +83,7 @@ public class UnderStoreBlockInStreamTest {\n    */\n   private void singleByteReadInternal(UnderStoreBlockInStream inStream, int startIndex)\n       throws IOException {\n-    long remaining = mBlockStream.remaining();\n+    long remaining = inStream.remaining();\n     for (int i = startIndex; i < startIndex + BLOCK_LENGTH; i++) {\n       Assert.assertEquals(i, inStream.read());\n       remaining--;\n\ndiff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java\nindex 29aaa1b..4e1cd46 100644\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java\n@@ -55,6 +55,6 @@ public abstract class Renderer {\n         if (!Double.isInfinite(minx))\n             mMinX = (int) minx;\n         if (!Double.isInfinite(maxx))\n-            mMaxX = (int) maxx; \n+            mMaxX = (int) Math.ceil(maxx);\n     }\n }\n",
      "atomicChanges": [
        {
          "change": "diff --git a/core/client/src/test/java/alluxio/client/block/UnderStoreBlockInStreamTest.java b/core/client/src/test/java/alluxio/client/block/UnderStoreBlockInStreamTest.java\nindex 7aa8b09..771aeee 100644\n--- a/core/client/src/test/java/alluxio/client/block/UnderStoreBlockInStreamTest.java\n+++ b/core/client/src/test/java/alluxio/client/block/UnderStoreBlockInStreamTest.java\n@@ -83,7 +83,7 @@ public class UnderStoreBlockInStreamTest {\n    */\n   private void singleByteReadInternal(UnderStoreBlockInStream inStream, int startIndex)\n       throws IOException {\n-    long remaining = mBlockStream.remaining();\n+    long remaining = inStream.remaining();\n     for (int i = startIndex; i < startIndex + BLOCK_LENGTH; i++) {\n       Assert.assertEquals(i, inStream.read());\n       remaining--;\n",
          "label": "test"
        },
        {
          "change": "diff --git a/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java b/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java\nindex 29aaa1b..4e1cd46 100644\n--- a/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java\n+++ b/MPChartLib/src/com/github/mikephil/charting/renderer/Renderer.java\n@@ -55,6 +55,6 @@ public abstract class Renderer {\n         if (!Double.isInfinite(minx))\n             mMinX = (int) minx;\n         if (!Double.isInfinite(maxx))\n-            mMaxX = (int) maxx; \n+            mMaxX = (int) Math.ceil(maxx);\n     }\n }\n",
          "label": "fix"
        }
      ]
    }
  ]
}