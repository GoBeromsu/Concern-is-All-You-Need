{
  "metadata": {
    "num_cases": 10,
    "concerns_per_case": 1,
    "types": [
      "style"
    ],
    "allow_same_types": false,
    "seed": 42,
    "source_dataset": "datasets/candidates/codefuse-hqcm/dataset/test.json"
  },
  "cases": [
    {
      "tangleChange": "diff --git a/src/com/fsck/k9/activity/MessageList.java b/src/com/fsck/k9/activity/MessageList.java\nindex d68a7e0..ffa6a0a 100644\n--- a/src/com/fsck/k9/activity/MessageList.java\n+++ b/src/com/fsck/k9/activity/MessageList.java\n@@ -2378,7 +2378,7 @@ public class MessageList extends K9ListActivity implements\n     }\n \n     private void toggleAllSelected() {\n-\tboolean newState = true;\n+        boolean newState = true;\n \n         synchronized (mAdapter.messages) {\n             if (mSelectedCount > 0) {\n@@ -2939,9 +2939,9 @@ public class MessageList extends K9ListActivity implements\n \t            break;\n \t        }\n \t        case R.id.same_sender: {\n-\t            MessageList.actionHandle(MessageList.this, \"From \" + selection.get(0).sender,\n-\t\t\t\tselection.get(0).senderAddress, false, null, null);\n-\t\t\t\tmSelectedCount = 0;\n+                MessageList.actionHandle(MessageList.this, \"From \" + selection.get(0).sender,\n+                    selection.get(0).senderAddress, false, null, null);\n+                mSelectedCount = 0;\n \t            break;\n \t        }\n \t\t\t}\n",
      "atomicChanges": [
        {
          "change": "diff --git a/src/com/fsck/k9/activity/MessageList.java b/src/com/fsck/k9/activity/MessageList.java\nindex d68a7e0..ffa6a0a 100644\n--- a/src/com/fsck/k9/activity/MessageList.java\n+++ b/src/com/fsck/k9/activity/MessageList.java\n@@ -2378,7 +2378,7 @@ public class MessageList extends K9ListActivity implements\n     }\n \n     private void toggleAllSelected() {\n-\tboolean newState = true;\n+        boolean newState = true;\n \n         synchronized (mAdapter.messages) {\n             if (mSelectedCount > 0) {\n@@ -2939,9 +2939,9 @@ public class MessageList extends K9ListActivity implements\n \t            break;\n \t        }\n \t        case R.id.same_sender: {\n-\t            MessageList.actionHandle(MessageList.this, \"From \" + selection.get(0).sender,\n-\t\t\t\tselection.get(0).senderAddress, false, null, null);\n-\t\t\t\tmSelectedCount = 0;\n+                MessageList.actionHandle(MessageList.this, \"From \" + selection.get(0).sender,\n+                    selection.get(0).senderAddress, false, null, null);\n+                mSelectedCount = 0;\n \t            break;\n \t        }\n \t\t\t}\n",
          "label": "style"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/jphp-runtime/src/php/runtime/invoke/InvokeHelper.java b/jphp-runtime/src/php/runtime/invoke/InvokeHelper.java\nindex a4a4ef68..11fc8c3c 100644\n--- a/jphp-runtime/src/php/runtime/invoke/InvokeHelper.java\n+++ b/jphp-runtime/src/php/runtime/invoke/InvokeHelper.java\n@@ -70,7 +70,7 @@ final public class InvokeHelper {\n     public static Memory[] makeArguments(Environment env, Memory[] args,\n                                        ParameterEntity[] parameters,\n                                        String originClassName, String originMethodName,\n-                                       TraceInfo trace){\n+                                       TraceInfo trace) {\n         return InvokeArgumentHelper.makeArguments(env, args, parameters, originClassName, originMethodName, trace);\n     }\n \n",
      "atomicChanges": [
        {
          "change": "diff --git a/jphp-runtime/src/php/runtime/invoke/InvokeHelper.java b/jphp-runtime/src/php/runtime/invoke/InvokeHelper.java\nindex a4a4ef68..11fc8c3c 100644\n--- a/jphp-runtime/src/php/runtime/invoke/InvokeHelper.java\n+++ b/jphp-runtime/src/php/runtime/invoke/InvokeHelper.java\n@@ -70,7 +70,7 @@ final public class InvokeHelper {\n     public static Memory[] makeArguments(Environment env, Memory[] args,\n                                        ParameterEntity[] parameters,\n                                        String originClassName, String originMethodName,\n-                                       TraceInfo trace){\n+                                       TraceInfo trace) {\n         return InvokeArgumentHelper.makeArguments(env, args, parameters, originClassName, originMethodName, trace);\n     }\n \n",
          "label": "style"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultBuildSuccessResult.java b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultBuildSuccessResult.java\nindex d0f4734..8ab8aca 100644\n--- a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultBuildSuccessResult.java\n+++ b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultBuildSuccessResult.java\n@@ -21,5 +21,4 @@ public class DefaultBuildSuccessResult extends AbstractBuildResult implements In\n     public DefaultBuildSuccessResult(long startTime, long endTime) {\n         super(startTime, endTime, \"succeeded\");\n     }\n-\n }\ndiff --git a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTaskSuccessResult.java b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTaskSuccessResult.java\nindex 2545e1b..8ffe007 100644\n--- a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTaskSuccessResult.java\n+++ b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTaskSuccessResult.java\n@@ -19,9 +19,7 @@ package org.gradle.tooling.internal.provider.events;\n import org.gradle.tooling.internal.protocol.events.InternalTaskSuccessResult;\n \n public class DefaultTaskSuccessResult extends AbstractTaskResult implements InternalTaskSuccessResult {\n-\n     public DefaultTaskSuccessResult(long startTime, long endTime, String outcomeDescription) {\n         super(startTime, endTime, outcomeDescription);\n     }\n-\n }\ndiff --git a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSkippedResult.java b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSkippedResult.java\nindex 1b4db01..5b99515 100644\n--- a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSkippedResult.java\n+++ b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSkippedResult.java\n@@ -19,9 +19,7 @@ package org.gradle.tooling.internal.provider.events;\n import org.gradle.tooling.internal.protocol.events.InternalTestSkippedResult;\n \n public class DefaultTestSkippedResult extends AbstractTestResult implements InternalTestSkippedResult {\n-\n     public DefaultTestSkippedResult(long startTime, long endTime) {\n         super(startTime, endTime, \"skipped\");\n     }\n-\n }\ndiff --git a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSuccessResult.java b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSuccessResult.java\nindex 0b48ec4..db657cb 100644\n--- a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSuccessResult.java\n+++ b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSuccessResult.java\n@@ -19,9 +19,7 @@ package org.gradle.tooling.internal.provider.events;\n import org.gradle.tooling.internal.protocol.events.InternalTestSuccessResult;\n \n public class DefaultTestSuccessResult extends AbstractTestResult implements InternalTestSuccessResult {\n-\n     public DefaultTestSuccessResult(long startTime, long endTime) {\n         super(startTime, endTime, \"succeeded\");\n     }\n-\n }\n",
      "atomicChanges": [
        {
          "change": "diff --git a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultBuildSuccessResult.java b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultBuildSuccessResult.java\nindex d0f4734..8ab8aca 100644\n--- a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultBuildSuccessResult.java\n+++ b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultBuildSuccessResult.java\n@@ -21,5 +21,4 @@ public class DefaultBuildSuccessResult extends AbstractBuildResult implements In\n     public DefaultBuildSuccessResult(long startTime, long endTime) {\n         super(startTime, endTime, \"succeeded\");\n     }\n-\n }\ndiff --git a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTaskSuccessResult.java b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTaskSuccessResult.java\nindex 2545e1b..8ffe007 100644\n--- a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTaskSuccessResult.java\n+++ b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTaskSuccessResult.java\n@@ -19,9 +19,7 @@ package org.gradle.tooling.internal.provider.events;\n import org.gradle.tooling.internal.protocol.events.InternalTaskSuccessResult;\n \n public class DefaultTaskSuccessResult extends AbstractTaskResult implements InternalTaskSuccessResult {\n-\n     public DefaultTaskSuccessResult(long startTime, long endTime, String outcomeDescription) {\n         super(startTime, endTime, outcomeDescription);\n     }\n-\n }\ndiff --git a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSkippedResult.java b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSkippedResult.java\nindex 1b4db01..5b99515 100644\n--- a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSkippedResult.java\n+++ b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSkippedResult.java\n@@ -19,9 +19,7 @@ package org.gradle.tooling.internal.provider.events;\n import org.gradle.tooling.internal.protocol.events.InternalTestSkippedResult;\n \n public class DefaultTestSkippedResult extends AbstractTestResult implements InternalTestSkippedResult {\n-\n     public DefaultTestSkippedResult(long startTime, long endTime) {\n         super(startTime, endTime, \"skipped\");\n     }\n-\n }\ndiff --git a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSuccessResult.java b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSuccessResult.java\nindex 0b48ec4..db657cb 100644\n--- a/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSuccessResult.java\n+++ b/subprojects/launcher/src/main/java/org/gradle/tooling/internal/provider/events/DefaultTestSuccessResult.java\n@@ -19,9 +19,7 @@ package org.gradle.tooling.internal.provider.events;\n import org.gradle.tooling.internal.protocol.events.InternalTestSuccessResult;\n \n public class DefaultTestSuccessResult extends AbstractTestResult implements InternalTestSuccessResult {\n-\n     public DefaultTestSuccessResult(long startTime, long endTime) {\n         super(startTime, endTime, \"succeeded\");\n     }\n-\n }\n",
          "label": "style"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/previous.rb b/current.rb\nindex e69de29bb2d1d6434..a5b5c5bc6ab8e716a 100644\n--- a/previous.rb\n+++ b/current.rb\n@@ -1,16 +1,16 @@\n-def foo_bar(a, b, c)\n+def foo_bar(a,\n+            b,\n+            c)\n   if a > 5\n-    puts \"a is bigger than 5\"\n-  else\n-    puts \"a is not bigger than 5\"\n+    puts 'a is bigger than 5'\n   else\n+    puts 'a is not bigger than 5'\n   end\n\n-  if b > 10\n-    puts \"b is bigger than 10\"\n-  else\n-    puts \"b is not bigger than 10\"\n+  if b > 10 \n+    puts 'b is bigger than 10'\n   else\n+    puts 'b is not bigger than 10'\n   end\n\n   if c > 15\n@@ -20,4 +16,4 @@\n   else\n     puts \"c is not bigger than 15\"\n   end\n-end\n+end",
      "atomicChanges": [
        {
          "change": "diff --git a/previous.rb b/current.rb\nindex e69de29bb2d1d6434..a5b5c5bc6ab8e716a 100644\n--- a/previous.rb\n+++ b/current.rb\n@@ -1,16 +1,16 @@\n-def foo_bar(a, b, c)\n+def foo_bar(a,\n+            b,\n+            c)\n   if a > 5\n-    puts \"a is bigger than 5\"\n-  else\n-    puts \"a is not bigger than 5\"\n+    puts 'a is bigger than 5'\n   else\n+    puts 'a is not bigger than 5'\n   end\n\n-  if b > 10\n-    puts \"b is bigger than 10\"\n-  else\n-    puts \"b is not bigger than 10\"\n+  if b > 10 \n+    puts 'b is bigger than 10'\n   else\n+    puts 'b is not bigger than 10'\n   end\n\n   if c > 15\n@@ -20,4 +16,4 @@\n   else\n     puts \"c is not bigger than 15\"\n   end\n-end\n+end",
          "label": "style"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/style_example.py b/style_example.py\nindex 73be197..6935954 100644\n--- a/style_example.py\n+++ b/style_example.py\n@@ -1,12 +1,15 @@\n def style_example():\n- print(\"This is a poorly styled function.\")\n+    print(\"This is a poorly styled function.\")\n  \n- if 1 < 2:\n- print(\"One is less than two.\")\n- elif 2 < 3:\n- print(\"Two is less than three.\")\n+    if 1 < 2:\n+        print(\"One is less than two.\")\n+    elif 2 < 3:\n+        print(\"Two is less than three.\")\n  \n- #This is a comment.\n- #This is another comment.\n+    # This is a comment.\n+    # This is another comment.\n  \n #This is a standalone comment.\n+    # This is a standalone comment.\n+\n+style_example()",
      "atomicChanges": [
        {
          "change": "diff --git a/style_example.py b/style_example.py\nindex 73be197..6935954 100644\n--- a/style_example.py\n+++ b/style_example.py\n@@ -1,12 +1,15 @@\n def style_example():\n- print(\"This is a poorly styled function.\")\n+    print(\"This is a poorly styled function.\")\n  \n- if 1 < 2:\n- print(\"One is less than two.\")\n- elif 2 < 3:\n- print(\"Two is less than three.\")\n+    if 1 < 2:\n+        print(\"One is less than two.\")\n+    elif 2 < 3:\n+        print(\"Two is less than three.\")\n  \n- #This is a comment.\n- #This is another comment.\n+    # This is a comment.\n+    # This is another comment.\n  \n #This is a standalone comment.\n+    # This is a standalone comment.\n+\n+style_example()",
          "label": "style"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/src/main/java/org/bukkit/command/defaults/GameModeCommand.java b/src/main/java/org/bukkit/command/defaults/GameModeCommand.java\nindex 08e5a90a..ad445160 100644\n--- a/src/main/java/org/bukkit/command/defaults/GameModeCommand.java\n+++ b/src/main/java/org/bukkit/command/defaults/GameModeCommand.java\n@@ -58,9 +58,9 @@ public class GameModeCommand extends VanillaCommand {\n                     sender.sendMessage(\"Game mode change for \" + player.getName() + \" failed!\");\n                 } else {\n                     if (player == sender) {\n-                        Command.broadcastCommandMessage(sender, \"Set own game mode to\" + mode.toString() + \" mode\", false);\n+                        Command.broadcastCommandMessage(sender, \"Set own game mode to \" + mode.toString() + \" mode\", false);\n                     } else {\n-                        Command.broadcastCommandMessage(sender, \"Set \" + player.getName() + \"'s game mode to\" + mode.toString() + \" mode\", false);\n+                        Command.broadcastCommandMessage(sender, \"Set \" + player.getName() + \"'s game mode to \" + mode.toString() + \" mode\", false);\n                     }\n                 }\n             } else {\n",
      "atomicChanges": [
        {
          "change": "diff --git a/src/main/java/org/bukkit/command/defaults/GameModeCommand.java b/src/main/java/org/bukkit/command/defaults/GameModeCommand.java\nindex 08e5a90a..ad445160 100644\n--- a/src/main/java/org/bukkit/command/defaults/GameModeCommand.java\n+++ b/src/main/java/org/bukkit/command/defaults/GameModeCommand.java\n@@ -58,9 +58,9 @@ public class GameModeCommand extends VanillaCommand {\n                     sender.sendMessage(\"Game mode change for \" + player.getName() + \" failed!\");\n                 } else {\n                     if (player == sender) {\n-                        Command.broadcastCommandMessage(sender, \"Set own game mode to\" + mode.toString() + \" mode\", false);\n+                        Command.broadcastCommandMessage(sender, \"Set own game mode to \" + mode.toString() + \" mode\", false);\n                     } else {\n-                        Command.broadcastCommandMessage(sender, \"Set \" + player.getName() + \"'s game mode to\" + mode.toString() + \" mode\", false);\n+                        Command.broadcastCommandMessage(sender, \"Set \" + player.getName() + \"'s game mode to \" + mode.toString() + \" mode\", false);\n                     }\n                 }\n             } else {\n",
          "label": "style"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/src/main/java/com/github/pedrovgs/binarytree/BinaryNode.java b/src/main/java/com/github/pedrovgs/binarytree/BinaryNode.java\nindex 223a9a7..0db25d2 100644\n--- a/src/main/java/com/github/pedrovgs/binarytree/BinaryNode.java\n+++ b/src/main/java/com/github/pedrovgs/binarytree/BinaryNode.java\n@@ -83,8 +83,6 @@ public class BinaryNode<T> {\n   }\n \n   @Override public String toString() {\n-    return \"BinaryNode{\" +\n-        \"data=\" + data +\n-        '}';\n+    return \"BinaryNode{\" + \"data=\" + data + '}';\n   }\n }\n",
      "atomicChanges": [
        {
          "change": "diff --git a/src/main/java/com/github/pedrovgs/binarytree/BinaryNode.java b/src/main/java/com/github/pedrovgs/binarytree/BinaryNode.java\nindex 223a9a7..0db25d2 100644\n--- a/src/main/java/com/github/pedrovgs/binarytree/BinaryNode.java\n+++ b/src/main/java/com/github/pedrovgs/binarytree/BinaryNode.java\n@@ -83,8 +83,6 @@ public class BinaryNode<T> {\n   }\n \n   @Override public String toString() {\n-    return \"BinaryNode{\" +\n-        \"data=\" + data +\n-        '}';\n+    return \"BinaryNode{\" + \"data=\" + data + '}';\n   }\n }\n",
          "label": "style"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/style/code.py b/style/code.py\nindex 7bbc3a3..7a81265 100644\n--- a/style/code.py\n+++ b/style/code.py\n@@ -1,9 +1,13 @@\n-public class HelloWorld {\n-    public static void main(String[] args) { // Prints Hello, World! to the terminal window.\n-        System.out.println(\"Hello, World!\");\n+public class HelloWorld\n+{    \n+    public static void main(String[] args)     // Prints Hello, World! to the terminal window.\n+    {           \n+        System.out.println(\"Hello, World!\");\n     }\n-}\n \n-public class GoodBye {\n-    public static void sayGoodBye() {\n-        System.out.println(\"Goodbye, World!\");\n+    \n+public class GoodBye\n+{    \n+    public static void sayGoodBye()\n+    {         \n+        System.out.println(\"Goodbye, World!\");\n     }\n } ",
      "atomicChanges": [
        {
          "change": "diff --git a/style/code.py b/style/code.py\nindex 7bbc3a3..7a81265 100644\n--- a/style/code.py\n+++ b/style/code.py\n@@ -1,9 +1,13 @@\n-public class HelloWorld {\n-    public static void main(String[] args) { // Prints Hello, World! to the terminal window.\n-        System.out.println(\"Hello, World!\");\n+public class HelloWorld\n+{    \n+    public static void main(String[] args)     // Prints Hello, World! to the terminal window.\n+    {           \n+        System.out.println(\"Hello, World!\");\n     }\n-}\n \n-public class GoodBye {\n-    public static void sayGoodBye() {\n-        System.out.println(\"Goodbye, World!\");\n+    \n+public class GoodBye\n+{    \n+    public static void sayGoodBye()\n+    {         \n+        System.out.println(\"Goodbye, World!\");\n     }\n } ",
          "label": "style"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java\nindex f87b9731d..d44934cbc 100644\n--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java\n@@ -18,7 +18,6 @@\n ////////////////////////////////////////////////////////////////////////////////\n package com.puppycrawl.tools.checkstyle;\n \n-\n import antlr.RecognitionException;\n import antlr.TokenStreamException;\n import java.io.File;\n",
      "atomicChanges": [
        {
          "change": "diff --git a/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java b/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java\nindex f87b9731d..d44934cbc 100644\n--- a/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java\n+++ b/src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java\n@@ -18,7 +18,6 @@\n ////////////////////////////////////////////////////////////////////////////////\n package com.puppycrawl.tools.checkstyle;\n \n-\n import antlr.RecognitionException;\n import antlr.TokenStreamException;\n import java.io.File;\n",
          "label": "style"
        }
      ]
    },
    {
      "tangleChange": "diff --git a/style.py b/style.py\nindex a622d98..894c64d 100644\n--- a/style.py\n+++ b/style.py\n@@ -1,7 +1,6 @@\n-def add(x: int,y: int)->int:\n+def add(x: int, y: int) -> int:\n     #Add two numbers\n     result=x+y\n-    \n+\n     return result\n \n-print(add(5,3))\n\\ No newline at end of file\n+print(add(5, 3))",
      "atomicChanges": [
        {
          "change": "diff --git a/style.py b/style.py\nindex a622d98..894c64d 100644\n--- a/style.py\n+++ b/style.py\n@@ -1,7 +1,6 @@\n-def add(x: int,y: int)->int:\n+def add(x: int, y: int) -> int:\n     #Add two numbers\n     result=x+y\n-    \n+\n     return result\n \n-print(add(5,3))\n\\ No newline at end of file\n+print(add(5, 3))",
          "label": "style"
        }
      ]
    }
  ]
}